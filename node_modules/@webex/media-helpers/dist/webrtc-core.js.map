{"version":3,"names":["_internalMediaCore","require","_tsEvents","_LocalMicrophoneStrea","_LocalCameraStreamEve","ownKeys","e","r","t","_Object$keys","_Object$getOwnPropertySymbols","o","filter","_Object$getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","Object","forEach","_defineProperty2","default","_Object$getOwnPropertyDescriptors","_Object$defineProperties","_Object$defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","_Reflect$construct","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","LocalMicrophoneStreamEventNames","exports","LocalCameraStreamEventNames","ServerMuted","_LocalMicrophoneStream","_WcmeLocalMicrophoneS","_inherits2","_super","_this","_classCallCheck2","_len","args","Array","_key","concat","_assertThisInitialized2","TypedEvent","_createClass2","key","value","setUnmuteAllowed","allowed","unmuteAllowed","isUnmuteAllowed","setUserMuted","muted","Error","_get2","setServerMuted","reason","userMuted","emit","WcmeLocalMicrophoneStream","_LocalCameraStream","_WcmeLocalCameraStrea","_super2","_this2","_len2","_key2","WcmeLocalCameraStream","LocalMicrophoneStream","AddEvents","LocalCameraStream","createMicrophoneStream","constraints","wcmeCreateMicrophoneStream","createCameraStream","wcmeCreateCameraStream","createCameraAndMicrophoneStreams","wcmeCreateCameraAndMicrophoneStreams","createDisplayStream","videoContentHint","wcmeCreateDisplayStream","LocalDisplayStream","createDisplayStreamWithAudio","wcmeCreateDisplayStreamWithAudio","LocalSystemAudioStream","createDisplayMedia","options","undefined","video","wcmeCreateDisplayMedia","displayStreamConstructor","audio","systemAudioStreamConstructor"],"sources":["webrtc-core.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-misused-new */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable require-jsdoc */\nimport {\n  AudioDeviceConstraints,\n  createCameraStream as wcmeCreateCameraStream,\n  createCameraAndMicrophoneStreams as wcmeCreateCameraAndMicrophoneStreams,\n  createDisplayMedia as wcmeCreateDisplayMedia,\n  createDisplayStream as wcmeCreateDisplayStream,\n  createDisplayStreamWithAudio as wcmeCreateDisplayStreamWithAudio,\n  createMicrophoneStream as wcmeCreateMicrophoneStream,\n  LocalDisplayStream,\n  LocalSystemAudioStream,\n  LocalMicrophoneStream as WcmeLocalMicrophoneStream,\n  LocalCameraStream as WcmeLocalCameraStream,\n  VideoContentHint,\n  VideoDeviceConstraints,\n} from '@webex/internal-media-core';\nimport {AddEvents, TypedEvent, WithEventsDummyType} from '@webex/ts-events';\n\nexport {\n  getDevices,\n  LocalStream,\n  LocalDisplayStream,\n  LocalSystemAudioStream,\n  LocalStreamEventNames,\n  StreamEventNames,\n  RemoteStream,\n  RemoteStreamEventNames,\n  type VideoContentHint,\n  type StreamState,\n} from '@webex/internal-media-core';\n\nexport type ServerMuteReason =\n  | 'remotelyMuted' // other user has remotely muted us\n  | 'clientRequestFailed' // client called setUserMuted() but server request failed\n  | 'localUnmuteRequired'; // server forced the client to be unmuted\n\n// these events are in addition to WCME events. This will be properly typed once webrtc-core event types inheritance is fixed\nexport enum LocalMicrophoneStreamEventNames {\n  ServerMuted = 'muted:byServer',\n}\n\n// these events are in addition to WCME events. This will be properly typed once webrtc-core event types inheritance is fixed\nexport enum LocalCameraStreamEventNames {\n  ServerMuted = 'muted:byServer',\n}\n\ninterface LocalMicrophoneStreamEvents {\n  [LocalMicrophoneStreamEventNames.ServerMuted]: TypedEvent<\n    (muted: boolean, reason: ServerMuteReason) => void\n  >;\n}\n\ninterface LocalCameraStreamEvents {\n  [LocalCameraStreamEventNames.ServerMuted]: TypedEvent<\n    (muted: boolean, reason: ServerMuteReason) => void\n  >;\n}\n\nclass _LocalMicrophoneStream extends WcmeLocalMicrophoneStream {\n  private unmuteAllowed = true;\n\n  [LocalMicrophoneStreamEventNames.ServerMuted] = new TypedEvent<\n    (muted: boolean, reason: ServerMuteReason) => void\n  >();\n\n  /**\n   * @internal\n   */\n  setUnmuteAllowed(allowed: boolean) {\n    this.unmuteAllowed = allowed;\n  }\n\n  /**\n   * @returns true if user is allowed to unmute the track, false otherwise\n   */\n  isUnmuteAllowed() {\n    return this.unmuteAllowed;\n  }\n\n  setUserMuted(muted: boolean): void {\n    if (!muted) {\n      if (!this.isUnmuteAllowed()) {\n        throw new Error('Unmute is not allowed');\n      }\n    }\n\n    return super.setUserMuted(muted);\n  }\n\n  /**\n   * @internal\n   */\n  setServerMuted(muted: boolean, reason: ServerMuteReason) {\n    if (muted !== this.userMuted) {\n      this.setUserMuted(muted);\n      this[LocalMicrophoneStreamEventNames.ServerMuted].emit(muted, reason);\n    }\n  }\n}\n\nclass _LocalCameraStream extends WcmeLocalCameraStream {\n  private unmuteAllowed = true;\n\n  [LocalCameraStreamEventNames.ServerMuted] = new TypedEvent<\n    (muted: boolean, reason: ServerMuteReason) => void\n  >();\n\n  /**\n   * @internal\n   */\n  setUnmuteAllowed(allowed: boolean) {\n    this.unmuteAllowed = allowed;\n  }\n\n  /**\n   * @returns true if user is allowed to unmute the track, false otherwise\n   */\n  isUnmuteAllowed() {\n    return this.unmuteAllowed;\n  }\n\n  setUserMuted(muted: boolean): void {\n    if (!muted) {\n      if (!this.isUnmuteAllowed()) {\n        throw new Error('Unmute is not allowed');\n      }\n    }\n\n    return super.setUserMuted(muted);\n  }\n\n  /**\n   * @internal\n   */\n  setServerMuted(muted: boolean, reason: ServerMuteReason) {\n    if (muted !== this.userMuted) {\n      this.setUserMuted(muted);\n      this[LocalCameraStreamEventNames.ServerMuted].emit(muted, reason);\n    }\n  }\n}\n\nexport const LocalMicrophoneStream = AddEvents<\n  typeof _LocalMicrophoneStream,\n  LocalMicrophoneStreamEvents\n>(_LocalMicrophoneStream);\n\nexport type LocalMicrophoneStream = _LocalMicrophoneStream &\n  WithEventsDummyType<LocalMicrophoneStreamEvents>;\n\nexport const LocalCameraStream = AddEvents<typeof _LocalCameraStream, LocalCameraStreamEvents>(\n  _LocalCameraStream\n);\n\nexport type LocalCameraStream = _LocalCameraStream & WithEventsDummyType<LocalCameraStreamEvents>;\n\nexport const createMicrophoneStream = (constraints?: AudioDeviceConstraints) =>\n  wcmeCreateMicrophoneStream(LocalMicrophoneStream, constraints);\n\nexport const createCameraStream = (constraints?: VideoDeviceConstraints) =>\n  wcmeCreateCameraStream(LocalCameraStream, constraints);\n\nexport const createCameraAndMicrophoneStreams = (constraints?: {\n  video?: VideoDeviceConstraints;\n  audio?: AudioDeviceConstraints;\n}) => wcmeCreateCameraAndMicrophoneStreams(LocalCameraStream, LocalMicrophoneStream, constraints);\n\nexport const createDisplayStream = (videoContentHint?: VideoContentHint) =>\n  wcmeCreateDisplayStream(LocalDisplayStream, videoContentHint);\n\nexport const createDisplayStreamWithAudio = (videoContentHint?: VideoContentHint) =>\n  wcmeCreateDisplayStreamWithAudio(LocalDisplayStream, LocalSystemAudioStream, videoContentHint);\n\nexport const createDisplayMedia = (\n  options: {\n    video: {\n      constraints?: VideoDeviceConstraints;\n      videoContentHint?: VideoContentHint;\n      preferCurrentTab?: boolean;\n      selfBrowserSurface?: 'include' | 'exclude';\n      surfaceSwitching?: 'include' | 'exclude';\n      monitorTypeSurfaces?: 'include' | 'exclude';\n    };\n    audio?: {\n      constraints?: AudioDeviceConstraints;\n      systemAudio?: 'include' | 'exclude';\n    };\n  } = {video: {}}\n) =>\n  wcmeCreateDisplayMedia({\n    video: {displayStreamConstructor: LocalDisplayStream, ...options?.video},\n    audio: options?.audio\n      ? {systemAudioStreamConstructor: LocalSystemAudioStream, ...options.audio}\n      : undefined,\n  });\n"],"mappings":"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"}