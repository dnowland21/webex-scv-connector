{"version":3,"names":["_ampersandState","_interopRequireDefault","require","ServiceDetail","AmpState","extend","namespace","props","serviceUrls","serviceName","undefined","id","_generateHostUrl","serviceUrl","url","URL","baseUrl","host","concat","port","href","_getPriorityHostUrl","priorityServiceUrl","_searchForValidPriorityHost","map","failed","find","priority","failHost","failedUrl","foundHost","get","length","_default","exports","default"],"sources":["service-detail.ts"],"sourcesContent":["import AmpState from 'ampersand-state';\nimport {ServiceUrl} from './types';\n\n/**\n * @class\n */\nconst ServiceDetail = AmpState.extend({\n  namespace: 'ServiceDetail',\n\n  props: {\n    serviceUrls: ['array', false, () => []],\n    serviceName: ['string', true, undefined],\n    id: ['string', true, undefined],\n  },\n\n  /**\n   * Generate a host url based on the host\n   * uri provided.\n   * @param {ServiceUrl} serviceUrl\n   * @returns {string}\n   */\n  _generateHostUrl(serviceUrl: ServiceUrl): string {\n    const url = new URL(serviceUrl.baseUrl);\n\n    // setting url.hostname will not apply during Url.format(), set host via\n    // a string literal instead.\n    url.host = `${serviceUrl.host}${url.port ? `:${url.port}` : ''}`;\n\n    return url.href;\n  },\n\n  /**\n   * Get the current host url with the highest priority. This will only return a URL with a filtered host that has the\n   * `homeCluster` value set to `true`.\n   * @returns {string} - The priority host url.\n   */\n  _getPriorityHostUrl(): string {\n    // format of catalog ensures that array is sorted by highest priority\n    let priorityServiceUrl = this._searchForValidPriorityHost();\n\n    if (!priorityServiceUrl) {\n      this.serviceUrls = this.serviceUrls.map((serviceUrl) => {\n        serviceUrl.failed = false;\n\n        return serviceUrl;\n      });\n\n      priorityServiceUrl = this._searchForValidPriorityHost();\n    }\n\n    return priorityServiceUrl ? this._generateHostUrl(priorityServiceUrl) : '';\n  },\n\n  /**\n   * Searches for a valid service URL with a priority greater than 0 that has not failed.\n   * @returns {ServiceUrl | undefined} - The first valid service URL found, or undefined if none exist.\n   */\n  _searchForValidPriorityHost(): ServiceUrl | undefined {\n    return this.serviceUrls.find((serviceUrl) => serviceUrl.priority > 0 && !serviceUrl.failed);\n  },\n\n  /**\n   * Attempt to mark a host from this `ServiceDetail` as failed and return true\n   * if the provided url has a host that could be successfully marked as failed.\n   *\n   * @param {string} url\n   * @returns {boolean}\n   */\n  failHost(url: string): boolean {\n    const failedUrl = new URL(url);\n\n    const foundHost = this.serviceUrls.find((serviceUrl) => serviceUrl.host === failedUrl.host);\n\n    if (foundHost) {\n      foundHost.failed = true;\n    }\n\n    return foundHost !== undefined;\n  },\n\n  /**\n   * Generate a url using the host with the\n   * highest priority via host rendering.\n   *\n   * @returns {string} - The full service url.\n   */\n  get(): string {\n    // return empty string to indicate that no service url is available\n    if (!this.serviceUrls || this.serviceUrls.length === 0) {\n      return '';\n    }\n\n    return this._getPriorityHostUrl();\n  },\n});\n\nexport default ServiceDetail;\n"],"mappings":";;;;;;;;AAAA,IAAAA,eAAA,GAAAC,sBAAA,CAAAC,OAAA;AAGA;AACA;AACA;AACA,IAAMC,aAAa,GAAGC,uBAAQ,CAACC,MAAM,CAAC;EACpCC,SAAS,EAAE,eAAe;EAE1BC,KAAK,EAAE;IACLC,WAAW,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE;MAAA,OAAM,EAAE;IAAA,EAAC;IACvCC,WAAW,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAEC,SAAS,CAAC;IACxCC,EAAE,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAED,SAAS;EAChC,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEE,gBAAgB,WAAAA,iBAACC,UAAsB,EAAU;IAC/C,IAAMC,GAAG,GAAG,IAAIC,GAAG,CAACF,UAAU,CAACG,OAAO,CAAC;;IAEvC;IACA;IACAF,GAAG,CAACG,IAAI,MAAAC,MAAA,CAAML,UAAU,CAACI,IAAI,EAAAC,MAAA,CAAGJ,GAAG,CAACK,IAAI,OAAAD,MAAA,CAAOJ,GAAG,CAACK,IAAI,IAAK,EAAE,CAAE;IAEhE,OAAOL,GAAG,CAACM,IAAI;EACjB,CAAC;EAED;AACF;AACA;AACA;AACA;EACEC,mBAAmB,WAAAA,oBAAA,EAAW;IAC5B;IACA,IAAIC,kBAAkB,GAAG,IAAI,CAACC,2BAA2B,CAAC,CAAC;IAE3D,IAAI,CAACD,kBAAkB,EAAE;MACvB,IAAI,CAACd,WAAW,GAAG,IAAI,CAACA,WAAW,CAACgB,GAAG,CAAC,UAACX,UAAU,EAAK;QACtDA,UAAU,CAACY,MAAM,GAAG,KAAK;QAEzB,OAAOZ,UAAU;MACnB,CAAC,CAAC;MAEFS,kBAAkB,GAAG,IAAI,CAACC,2BAA2B,CAAC,CAAC;IACzD;IAEA,OAAOD,kBAAkB,GAAG,IAAI,CAACV,gBAAgB,CAACU,kBAAkB,CAAC,GAAG,EAAE;EAC5E,CAAC;EAED;AACF;AACA;AACA;EACEC,2BAA2B,WAAAA,4BAAA,EAA2B;IACpD,OAAO,IAAI,CAACf,WAAW,CAACkB,IAAI,CAAC,UAACb,UAAU;MAAA,OAAKA,UAAU,CAACc,QAAQ,GAAG,CAAC,IAAI,CAACd,UAAU,CAACY,MAAM;IAAA,EAAC;EAC7F,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEG,QAAQ,WAAAA,SAACd,GAAW,EAAW;IAC7B,IAAMe,SAAS,GAAG,IAAId,GAAG,CAACD,GAAG,CAAC;IAE9B,IAAMgB,SAAS,GAAG,IAAI,CAACtB,WAAW,CAACkB,IAAI,CAAC,UAACb,UAAU;MAAA,OAAKA,UAAU,CAACI,IAAI,KAAKY,SAAS,CAACZ,IAAI;IAAA,EAAC;IAE3F,IAAIa,SAAS,EAAE;MACbA,SAAS,CAACL,MAAM,GAAG,IAAI;IACzB;IAEA,OAAOK,SAAS,KAAKpB,SAAS;EAChC,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEqB,GAAG,WAAAA,IAAA,EAAW;IACZ;IACA,IAAI,CAAC,IAAI,CAACvB,WAAW,IAAI,IAAI,CAACA,WAAW,CAACwB,MAAM,KAAK,CAAC,EAAE;MACtD,OAAO,EAAE;IACX;IAEA,OAAO,IAAI,CAACX,mBAAmB,CAAC,CAAC;EACnC;AACF,CAAC,CAAC;AAAC,IAAAY,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEYhC,aAAa"}