import { WebexSDK } from '../SDKConnector/types';
import { ICallSettings, LoggerInterface, CallForwardSetting, CallSettingResponse, VoicemailSetting } from './types';
export declare class CallSettings implements ICallSettings {
    private sdkConnector;
    private webex;
    private callingBackend;
    private backendConnector;
    constructor(webex: WebexSDK, logger: LoggerInterface, useProdWebexApis?: boolean);
    private initializeBackendConnector;
    getCallWaitingSetting(): Promise<CallSettingResponse>;
    getDoNotDisturbSetting(): Promise<CallSettingResponse>;
    setDoNotDisturbSetting(enabled: boolean): Promise<CallSettingResponse>;
    getCallForwardSetting(): Promise<CallSettingResponse>;
    setCallForwardSetting(callForwardingRequest: CallForwardSetting): Promise<CallSettingResponse>;
    getVoicemailSetting(): Promise<CallSettingResponse>;
    setVoicemailSetting(voicemailRequest: VoicemailSetting): Promise<CallSettingResponse>;
    getCallForwardAlwaysSetting(directoryNumber?: string): Promise<CallSettingResponse>;
}
export declare const createCallSettingsClient: (webex: WebexSDK, logger: LoggerInterface, useProdWebexApis?: boolean) => ICallSettings;
//# sourceMappingURL=CallSettings.d.ts.map