import { CallSessionEvent, CallSessionViewedEvent, CallSessionDeletedEvent } from '../Events/types';
import { DeleteCallHistoryRecordsResponse, UCMLinesResponse, UpdateMissedCallsResponse } from './types';
export declare const sortedCallHistory: {
    body: {
        statusCode: number;
        userSessions: {
            id: string;
            durationSecs: number;
            self: {
                id: string;
                name: string;
                incomingCallProtocols: never[];
                callbackInfo: {
                    callbackAddress: string;
                    callbackType: string;
                };
                lookUpInfo: {
                    lookupLink: string;
                    type: string;
                };
            };
            url: string;
            sessionId: string;
            sessionType: string;
            startTime: string;
            endTime: string;
            direction: string;
            disposition: string;
            other: {
                id: string;
                name: string;
                isPrivate: boolean;
                callbackAddress: string;
            };
            durationSeconds: number;
            joinedDurationSeconds: number;
            participantCount: number;
            links: {
                locusUrl: string;
                conversationUrl: string;
                callbackAddress: string;
            };
            isDeleted: boolean;
            isPMR: boolean;
            correlationIds: string[];
        }[];
    };
};
export declare const mockCallHistoryBody: {
    body: {
        statusCode: number;
        userSessions: {
            id: string;
            durationSecs: number;
            self: {
                id: string;
                name: string;
                incomingCallProtocols: never[];
                callbackInfo: {
                    callbackAddress: string;
                    callbackType: string;
                };
                lookUpInfo: {
                    lookupLink: string;
                    type: string;
                };
            };
            url: string;
            sessionId: string;
            sessionType: string;
            startTime: string;
            endTime: string;
            direction: string;
            disposition: string;
            other: {
                id: string;
                name: string;
                isPrivate: boolean;
                callbackAddress: string;
            };
            durationSeconds: number;
            joinedDurationSeconds: number;
            participantCount: number;
            links: {
                locusUrl: string;
                conversationUrl: string;
                callbackAddress: string;
            };
            isDeleted: boolean;
            isPMR: boolean;
            correlationIds: string[];
        }[];
    };
};
export declare const MOCK_CALL_HISTORY_WITH_UCM_LINE_NUMBER: {
    body: {
        statusCode: number;
        userSessions: {
            id: string;
            durationSecs: number;
            self: {
                id: string;
                name: string;
                cucmDN: string;
                ucmLineNumber: number;
                incomingCallProtocols: never[];
                callbackInfo: {
                    callbackAddress: string;
                    callbackType: string;
                };
                lookUpInfo: {
                    lookupLink: string;
                    type: string;
                };
            };
            url: string;
            sessionId: string;
            sessionType: string;
            startTime: string;
            endTime: string;
            direction: string;
            disposition: string;
            other: {
                id: string;
                name: string;
                isPrivate: boolean;
                callbackAddress: string;
            };
            durationSeconds: number;
            joinedDurationSeconds: number;
            participantCount: number;
            links: {
                locusUrl: string;
                conversationUrl: string;
                callbackAddress: string;
            };
            isDeleted: boolean;
            isPMR: boolean;
            correlationIds: string[];
        }[];
    };
};
export declare const MOCK_CALL_HISTORY_WITHOUT_UCM_LINE_NUMBER: {
    body: {
        statusCode: number;
        userSessions: {
            id: string;
            durationSecs: number;
            self: {
                id: string;
                name: string;
                cucmDN: string;
                incomingCallProtocols: never[];
                callbackInfo: {
                    callbackAddress: string;
                    callbackType: string;
                };
                lookUpInfo: {
                    lookupLink: string;
                    type: string;
                };
            };
            url: string;
            sessionId: string;
            sessionType: string;
            startTime: string;
            endTime: string;
            direction: string;
            disposition: string;
            other: {
                id: string;
                name: string;
                isPrivate: boolean;
                callbackAddress: string;
            };
            durationSeconds: number;
            joinedDurationSeconds: number;
            participantCount: number;
            links: {
                locusUrl: string;
                conversationUrl: string;
                callbackAddress: string;
            };
            isDeleted: boolean;
            isPMR: boolean;
            correlationIds: string[];
        }[];
    };
};
export declare const MOCK_SESSION_EVENT: CallSessionEvent;
export declare const MOCK_SESSION_EVENT_LEGACY: CallSessionEvent;
export declare const MOCK_SESSION_EVENT_VIEWED: CallSessionViewedEvent;
export declare const MOCK_SESSION_EVENT_DELETED: CallSessionDeletedEvent;
export declare const MOCK_UPDATE_MISSED_CALL_RESPONSE: UpdateMissedCallsResponse;
export declare const MOCK_DELETE_CALL_HISTORY_RECORDS_RESPONSE: DeleteCallHistoryRecordsResponse;
export declare const MOCK_DELETE_CALL_HISTORY_INVALID_DATE_RESPONSE: DeleteCallHistoryRecordsResponse;
export declare const janusSetReadStateUrl = "https://janus-intb.ciscospark.com/janus/api/v1/history/userSessions/setReadState";
export declare const janusMarkAsDeletedUrl = "https://janus-intb.ciscospark.com/janus/api/v1/history/userSessions/markAsDeleted";
export declare const ERROR_DETAILS_401: {
    statusCode: number;
    data: {
        error: string;
    };
    message: string;
};
export declare const ERROR_DETAILS_400: {
    statusCode: number;
    data: {
        error: string;
    };
    message: string;
};
export declare const MOCK_LINES_API_CALL_RESPONSE: UCMLinesResponse;
export declare const MOCK_LINES_API_CALL_RESPONSE_WITH_NO_LINEDATA: UCMLinesResponse;
//# sourceMappingURL=callHistoryFixtures.d.ts.map