import { WebexSDK } from '../SDKConnector/types';
import { SORT, SORT_BY } from '../common/types';
import { ICallHistory, JanusResponseEvent, LoggerInterface, UpdateMissedCallsResponse, DeleteCallHistoryRecordsResponse } from './types';
import { CallHistoryEventTypes, CallSessionEvent, EndTimeSessionId, CallSessionViewedEvent, CallSessionDeletedEvent } from '../Events/types';
import { Eventing } from '../Events/impl';
export declare class CallHistory extends Eventing<CallHistoryEventTypes> implements ICallHistory {
    private sdkConnector;
    private webex;
    private janusUrl;
    private fromDate;
    private loggerContext;
    private userSessions;
    constructor(webex: WebexSDK, logger: LoggerInterface);
    getCallHistoryData(days?: number, limit?: number, sort?: SORT, sortBy?: SORT_BY): Promise<JanusResponseEvent>;
    updateMissedCalls(endTimeSessionIds: EndTimeSessionId[]): Promise<UpdateMissedCallsResponse>;
    private fetchUCMLinesData;
    deleteCallHistoryRecords(deleteSessionIds: EndTimeSessionId[]): Promise<DeleteCallHistoryRecordsResponse>;
    handleSessionEvents: (event?: CallSessionEvent) => Promise<void>;
    handleUserReadSessionEvents: (event?: CallSessionViewedEvent) => Promise<void>;
    handleUserSessionsDeletedEvents: (event?: CallSessionDeletedEvent) => Promise<void>;
    private registerSessionsListener;
}
export declare const createCallHistoryClient: (webex: WebexSDK, logger: LoggerInterface) => ICallHistory;
//# sourceMappingURL=CallHistory.d.ts.map