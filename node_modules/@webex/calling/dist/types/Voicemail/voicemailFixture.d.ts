export declare const bwToken = "bwtoken";
export declare const broadworksTokenType: {
    body: {
        token: {
            bearer: string;
        };
    };
};
export declare const broadworksUserInfoUrl = "https://xsp-alpha.broadcloudpbx.net/com.broadsoft.xsi-actions/v2.0/user/bgerman@wcslab.broadcloud.org/VoiceMessagingMessages";
export declare const broadworksUserMessageId = "274a236c-9212-4679-8b40-2786ea460538";
export declare const braodworksUserMessageInfo = "/v2.0/user/bgerman@wcslab.broadcloud.org/VoiceMessagingMessages";
export declare const ucmBackendInfoUrl = "https://gw.telemetry.int-ucmgmt.cisco.com/vmgateway/api/v1/users/8a67806f-fc4d-446b-a131-31e71ea5b0e9/voicemails";
export declare const voicemailContent = "/?offset=0&limit=20&sortOrder=DESC";
export declare const orgId = "1704d30d-a131-4bc7-9449-948487643793";
export declare const name = "Adrian";
export declare const userid = "admin";
export declare const address = "tel1372";
export declare const userId = "8a67806f-fc4d-446b-a131-31e71ea5b0e9";
export declare const voicemailSummaryUrl: string;
export declare const getEmptyVoicemailListJsonBWRKS: {
    statusCode: number;
    VoiceMessagingMessages: {
        messageInfoList: {};
    };
};
export declare const getInvalidVoicemailListJsonBWRKS: {
    statusCode: number;
    VoiceMessagingMessages: {
        messageInfoList: {
            messageInfo: {};
        };
    };
};
export declare const getEmptyVoicemailListJsonWxC: {
    statusCode: number;
    body: {
        VoiceMessagingMessages: {
            messageInfoList: {};
        };
    };
};
export declare const getInvalidVoicemailListJsonWxC: {
    statusCode: number;
    body: {
        VoiceMessagingMessages: {
            messageInfoList: {
                messageInfo: {};
            };
        };
    };
};
export declare const getVoicemailListJsonBWRKS: {
    statusCode: number;
    VoiceMessagingMessages: {
        messageInfoList: {
            messageInfo: {
                duration: {
                    $: string;
                };
                callingPartyInfo: {
                    name: {
                        $: string;
                    };
                    userId: {
                        $: string;
                    };
                    address: {
                        $: string;
                    };
                };
                time: {
                    $: string;
                };
                messageId: {
                    $: string;
                };
            }[];
        };
    };
};
export declare const getAscVoicemailListJsonBWRKS: {
    statusCode: number;
    VoiceMessagingMessages: {
        messageInfoList: {
            messageInfo: {
                duration: {
                    $: string;
                };
                callingPartyInfo: {
                    name: {
                        $: string;
                    };
                    userId: {
                        $: string;
                    };
                    address: {
                        $: string;
                    };
                };
                time: {
                    $: string;
                };
                messageId: {
                    $: string;
                };
            }[];
        };
    };
};
export declare const getDescVoicemailListJsonBWRKS: {
    statusCode: number;
    VoiceMessagingMessages: {
        messageInfoList: {
            messageInfo: {
                duration: {
                    $: string;
                };
                callingPartyInfo: {
                    name: {
                        $: string;
                    };
                    userId: {
                        $: string;
                    };
                    address: {
                        $: string;
                    };
                };
                time: {
                    $: string;
                };
                messageId: {
                    $: string;
                };
            }[];
        };
    };
};
export declare const getVoicemailListJsonWXC: {
    statusCode: number;
    body: {
        VoiceMessagingMessages: {
            messageInfoList: {
                messageInfo: {
                    duration: {
                        $: string;
                    };
                    callingPartyInfo: {
                        name: {
                            $: string;
                        };
                        userId: {
                            $: string;
                        };
                        address: {
                            $: string;
                        };
                    };
                    time: {
                        $: string;
                    };
                    messageId: {
                        $: string;
                    };
                }[];
            };
        };
    };
};
export declare const mockBWRKSData: {
    body: {
        devices: {
            settings: {
                broadworksXsiActionsUrl: string;
            };
        }[];
    };
};
export declare const mockVoicemailBody: {
    body: {
        statusCode: number;
        items: {
            duration: {
                $: string;
            };
            callingPartyInfo: {
                name: {
                    $: string;
                };
                userId: {
                    $: string;
                };
                address: {
                    $: string;
                };
            };
            time: {
                $: string;
            };
            messageId: {
                $: string;
            };
        }[];
    };
};
export declare const mockWXCData: {
    body: {
        items: {
            xsiActionsEndpoint: string;
        }[];
    };
};
export declare const getAscVoicemailListJsonWXC: {
    statusCode: number;
    body: {
        VoiceMessagingMessages: {
            messageInfoList: {
                messageInfo: {
                    duration: {
                        $: string;
                    };
                    callingPartyInfo: {
                        name: {
                            $: string;
                        };
                        userId: {
                            $: string;
                        };
                        address: {
                            $: string;
                        };
                    };
                    time: {
                        $: string;
                    };
                    messageId: {
                        $: string;
                    };
                }[];
            };
        };
    };
};
export declare const getDescVoicemailListJsonWXC: {
    statusCode: number;
    body: {
        VoiceMessagingMessages: {
            messageInfoList: {
                messageInfo: {
                    duration: {
                        $: string;
                    };
                    callingPartyInfo: {
                        name: {
                            $: string;
                        };
                        userId: {
                            $: string;
                        };
                        address: {
                            $: string;
                        };
                    };
                    time: {
                        $: string;
                    };
                    messageId: {
                        $: string;
                    };
                }[];
            };
        };
    };
};
export declare const mockUCMVoicemailBody: {
    body: {
        statusCode: number;
        items: {
            Duration: number;
            MsgId: string;
            ArrivalTime: number;
            Read: string;
            callingPartyInfo: {
                name: string;
                userId: string;
            };
            CallerId: {
                CallerNumber: string;
                CallerName: string;
            };
        }[];
    };
};
export declare const mockVoicemailContentResponse: {
    statusCode: number;
    headers: {
        mediatype: string;
    };
    body: string;
};
export declare const voicemailEventProcessingPayload: {
    data: {
        messageId: string;
        eventType: string;
        status: string;
    };
};
export declare const getVoiceMailListJsonUCM: {
    statusCode: number;
    body: {
        Message: {
            Duration: number;
            MsgId: string;
            ArrivalTime: number;
            Read: string;
            callingPartyInfo: {
                name: string;
                userId: string;
            };
            CallerId: {
                CallerNumber: string;
                CallerName: string;
            };
        }[];
    };
};
export declare const getDescVoiceMailListJsonUCM: {
    statusCode: number;
    body: {
        Message: {
            voicemailList: {
                duration: {
                    $: number;
                };
                time: {
                    $: number;
                };
                messageId: {
                    $: string;
                };
                callingPartyInfo: {
                    name: {
                        $: string;
                    };
                    userId: {
                        $: string;
                    };
                    address: {
                        $: string;
                    };
                };
            }[];
        };
    };
};
export declare const responseDetails422: {
    data: {
        error: string;
    };
    message: string;
    statusCode: number;
};
export declare const responseDetails204: {
    data: {
        error: string;
    };
    message: string;
    statusCode: number;
};
export declare const resolveContactArgs: {
    name: {
        $: string;
    };
    address: {
        $: string;
    };
};
export declare const mockVoicemailTranscriptResponse: {
    body: string;
    statusCode: number;
    method: string;
    headers: {
        'cache-control': string;
        connection: string;
        'content-language': string;
        'content-type': string;
        date: string;
        expires: string;
        'keep-alive': string;
        pragma: string;
        'strict-transport-security': string;
        trackingid: string;
        'transfer-encoding': string;
        'x-content-type-options': string;
        'x-frame-options': string;
        'x-xss-protection': string;
    };
    url: string;
    options: {
        uri: string;
        method: string;
        json: boolean;
        headers: {
            trackingid: string;
            'spark-user-agent': string;
            authorization: string;
            'cisco-no-http-redirect': boolean;
        };
        $timings: {
            requestStart: number;
            networkStart: number;
            networkEnd: number;
            requestEnd: number;
        };
        $redirectCount: number;
    };
};
//# sourceMappingURL=voicemailFixture.d.ts.map