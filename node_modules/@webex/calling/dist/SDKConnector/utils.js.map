{"version":3,"names":["validateWebex","exports","webexInstance","canAuthorize","ready","internal","mercury","error","undefined","success","Error"],"sources":["utils.ts"],"sourcesContent":["/* eslint-disable valid-jsdoc */\nimport {WebexSDK} from './types';\n\n// TODO: add other cases necessary for fully qualified webex instance\n// eslint-disable-next-line max-len\n/**\n * @param webexInstance - TODO.\n */\nexport const validateWebex = (\n  webexInstance: WebexSDK\n): {error: Error | undefined; success: boolean} => {\n  if (webexInstance.canAuthorize) {\n    if (webexInstance.ready) {\n      if (webexInstance.internal.mercury) {\n        return {error: undefined, success: true};\n      }\n\n      return {error: new Error('webex.internal.mercury is not available'), success: false};\n    }\n\n    return {error: new Error('webex.ready is not true'), success: false};\n  }\n\n  return {error: new Error('webex.canAuthorize is not true'), success: false}; // TODO: change to error object\n};\n"],"mappings":";;;;;;;AAAA;;AAGA;AACA;AACA;AACA;AACA;AACO,IAAMA,aAAa,GAAAC,OAAA,CAAAD,aAAA,GAAG,SAAhBA,aAAaA,CACxBE,aAAuB,EAC0B;EACjD,IAAIA,aAAa,CAACC,YAAY,EAAE;IAC9B,IAAID,aAAa,CAACE,KAAK,EAAE;MACvB,IAAIF,aAAa,CAACG,QAAQ,CAACC,OAAO,EAAE;QAClC,OAAO;UAACC,KAAK,EAAEC,SAAS;UAAEC,OAAO,EAAE;QAAI,CAAC;MAC1C;MAEA,OAAO;QAACF,KAAK,EAAE,IAAIG,KAAK,CAAC,yCAAyC,CAAC;QAAED,OAAO,EAAE;MAAK,CAAC;IACtF;IAEA,OAAO;MAACF,KAAK,EAAE,IAAIG,KAAK,CAAC,yBAAyB,CAAC;MAAED,OAAO,EAAE;IAAK,CAAC;EACtE;EAEA,OAAO;IAACF,KAAK,EAAE,IAAIG,KAAK,CAAC,gCAAgC,CAAC;IAAED,OAAO,EAAE;EAAK,CAAC,CAAC,CAAC;AAC/E,CAAC"}