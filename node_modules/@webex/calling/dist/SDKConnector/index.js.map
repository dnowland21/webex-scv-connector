{"version":3,"names":["_utils","require","instance","webex","SDKConnector","_classCallCheck2","default","_createClass2","key","value","setWebex","webexInstance","Error","_validateWebex","validateWebex","error","success","get","getWebex","request","registerListener","event","cb","internal","mercury","on","data","unregisterListener","off","_default","exports","_freeze"],"sources":["index.ts"],"sourcesContent":["/* eslint-disable valid-jsdoc */\nimport {WebexRequestPayload} from '../common/types';\nimport {ISDKConnector, WebexSDK} from './types';\n/* eslint-disable class-methods-use-this */\nimport {validateWebex} from './utils';\n\nlet instance: ISDKConnector;\nlet webex: WebexSDK;\n\n/**\n *\n */\nclass SDKConnector implements ISDKConnector {\n  /**\n   * @param webexInstance - TODO.\n   */\n  public setWebex(webexInstance: WebexSDK): void {\n    if (instance) {\n      throw new Error('You cannot set the SDKConnector instance more than once'); // TODO: format log messages and customize Error Object\n    }\n    const {error, success} = validateWebex(webexInstance);\n\n    if (error) {\n      throw error;\n    } else if (success) {\n      webex = webexInstance; // TODO: Object.freeze to prevent changes? That might break the reference chain though\n    } else {\n      throw new Error('An unknown error occurred setting up the webex instance.');\n    }\n\n    /* eslint-disable @typescript-eslint/no-this-alias */\n    instance = this;\n  }\n\n  /**\n   *\n   */\n  public get(): ISDKConnector {\n    return instance;\n  }\n\n  /**\n   *\n   */\n  public getWebex(): WebexSDK {\n    return webex;\n  }\n\n  /**\n   * @param request - TODO.\n   */\n  public request<T>(request: WebexRequestPayload): Promise<T> {\n    return instance.getWebex().request(request);\n  }\n\n  /**\n   * @param event - TODO.\n   * @param cb - TODO.\n   */\n  public registerListener<T>(event: string, cb: (data?: T) => void): void {\n    instance.getWebex().internal.mercury.on(event, (data: T) => {\n      cb(data);\n    });\n  }\n\n  /**\n   * @param event - TODO.\n   */\n  public unregisterListener(event: string): void {\n    instance.getWebex().internal.mercury.off(event);\n  }\n}\n\nexport default Object.freeze(new SDKConnector()); // TODO: remove freeze?\n"],"mappings":";;;;;;;;;;;AAIA,IAAAA,MAAA,GAAAC,OAAA;AAJA;;AAGA;;AAGA,IAAIC,QAAuB;AAC3B,IAAIC,KAAe;;AAEnB;AACA;AACA;AAFA,IAGMC,YAAY;EAAA,SAAAA,aAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAF,YAAA;EAAA;EAAA,IAAAG,aAAA,CAAAD,OAAA,EAAAF,YAAA;IAAAI,GAAA;IAAAC,KAAA;IAChB;AACF;AACA;IACE,SAAAC,SAAgBC,aAAuB,EAAQ;MAC7C,IAAIT,QAAQ,EAAE;QACZ,MAAM,IAAIU,KAAK,CAAC,yDAAyD,CAAC,CAAC,CAAC;MAC9E;;MACA,IAAAC,cAAA,GAAyB,IAAAC,oBAAa,EAACH,aAAa,CAAC;QAA9CI,KAAK,GAAAF,cAAA,CAALE,KAAK;QAAEC,OAAO,GAAAH,cAAA,CAAPG,OAAO;MAErB,IAAID,KAAK,EAAE;QACT,MAAMA,KAAK;MACb,CAAC,MAAM,IAAIC,OAAO,EAAE;QAClBb,KAAK,GAAGQ,aAAa,CAAC,CAAC;MACzB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;MAC7E;;MAEA;MACAV,QAAQ,GAAG,IAAI;IACjB;;IAEA;AACF;AACA;EAFE;IAAAM,GAAA;IAAAC,KAAA,EAGA,SAAAQ,IAAA,EAA4B;MAC1B,OAAOf,QAAQ;IACjB;;IAEA;AACF;AACA;EAFE;IAAAM,GAAA;IAAAC,KAAA,EAGA,SAAAS,SAAA,EAA4B;MAC1B,OAAOf,KAAK;IACd;;IAEA;AACF;AACA;EAFE;IAAAK,GAAA;IAAAC,KAAA,EAGA,SAAAU,QAAkBA,QAA4B,EAAc;MAC1D,OAAOjB,QAAQ,CAACgB,QAAQ,CAAC,CAAC,CAACC,OAAO,CAACA,QAAO,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;EAHE;IAAAX,GAAA;IAAAC,KAAA,EAIA,SAAAW,iBAA2BC,KAAa,EAAEC,EAAsB,EAAQ;MACtEpB,QAAQ,CAACgB,QAAQ,CAAC,CAAC,CAACK,QAAQ,CAACC,OAAO,CAACC,EAAE,CAACJ,KAAK,EAAE,UAACK,IAAO,EAAK;QAC1DJ,EAAE,CAACI,IAAI,CAAC;MACV,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;EAFE;IAAAlB,GAAA;IAAAC,KAAA,EAGA,SAAAkB,mBAA0BN,KAAa,EAAQ;MAC7CnB,QAAQ,CAACgB,QAAQ,CAAC,CAAC,CAACK,QAAQ,CAACC,OAAO,CAACI,GAAG,CAACP,KAAK,CAAC;IACjD;EAAC;EAAA,OAAAjB,YAAA;AAAA;AAAA,IAAAyB,QAAA,GAAAC,OAAA,CAAAxB,OAAA,GAGY,IAAAyB,OAAA,CAAAzB,OAAA,EAAc,IAAIF,YAAY,CAAC,CAAC,CAAC,EAAE"}