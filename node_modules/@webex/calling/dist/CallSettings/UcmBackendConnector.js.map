{"version":3,"names":["_Logger","_interopRequireDefault","require","_SDKConnector","_Utils","_constants","_types","_constants2","UcmBackendConnector","exports","webex","logger","useProdWebexApis","arguments","length","undefined","_classCallCheck2","default","_defineProperty2","sdkConnector","SDKConnector","getWebex","setWebex","log","setLogger","level","UCM_CONNECTOR_FILE","userId","internal","device","orgId","_createClass2","key","value","getCallWaitingSetting","loggerContext","file","method","METHODS","GET_CALL_WAITING_SETTING","info","METHOD_START_MESSAGE","getMethodNotSupportedResponse","getDoNotDisturbSetting","GET_DO_NOT_DISTURB_SETTING","setDoNotDisturbSetting","SET_DO_NOT_DISTURB_SETTING","getCallForwardSetting","GET_CALL_FORWARD_SETTING","setCallForwardSetting","SET_CALL_FORWARD_SETTING","getVoicemailSetting","GET_VOICEMAIL_SETTING","setVoicemailSetting","SET_VOICEMAIL_SETTING","GET_METHOD_NOT_SUPPORTED_RESPONSE","response","serviceErrorCodeHandler","statusCode","_promise","resolve","_getCallForwardAlwaysSetting","_asyncToGenerator2","_regenerator","mark","_callee","directoryNumber","webexApisUrl","resp","_ref","callForwarding","cfa","_response","_response2","errorInfo","extendedError","errorStatus","wrap","_callee$","_context","prev","next","GET_CALL_FORWARD_ALWAYS_SETTING","concat","WEBEX_API_CONFIG_PROD_URL","WEBEX_API_CONFIG_INT_URL","request","uri","PEOPLE_ENDPOINT","CF_ENDPOINT","toLowerCase","ORG_ENDPOINT","HTTP_METHODS","GET","sent","body","always","find","item","dn","endsWith","e164Number","Number","STATUS_CODE","message","SUCCESS_MESSAGE","data","callSetting","enabled","destinationVoicemailEnabled","destination","VOICEMAIL","abrupt","FAILURE_MESSAGE","error","t0","Error","uploadLogs","stop","getCallForwardAlwaysSetting","_x","apply"],"sources":["UcmBackendConnector.ts"],"sourcesContent":["import ExtendedError from 'Errors/catalog/ExtendedError';\nimport log from '../Logger';\nimport SDKConnector from '../SDKConnector';\nimport {ISDKConnector, WebexSDK} from '../SDKConnector/types';\nimport {serviceErrorCodeHandler, uploadLogs} from '../common/Utils';\nimport {\n  FAILURE_MESSAGE,\n  METHOD_START_MESSAGE,\n  STATUS_CODE,\n  SUCCESS_MESSAGE,\n  UCM_CONNECTOR_FILE,\n  VOICEMAIL,\n  WEBEX_API_CONFIG_INT_URL,\n  WEBEX_API_CONFIG_PROD_URL,\n} from '../common/constants';\nimport {HTTP_METHODS, WebexRequestPayload} from '../common/types';\nimport {CF_ENDPOINT, METHODS, ORG_ENDPOINT, PEOPLE_ENDPOINT} from './constants';\nimport {\n  CallForwardAlwaysSetting,\n  CallForwardingSettingsUCM,\n  CallSettingResponse,\n  IUcmBackendConnector,\n  LoggerInterface,\n} from './types';\n\n/**\n * This Connector class will implement child interface of ICallSettings and\n * has methods for the CCUC with UCM backend.\n */\nexport class UcmBackendConnector implements IUcmBackendConnector {\n  private sdkConnector: ISDKConnector;\n\n  private webex: WebexSDK;\n\n  private userId: string;\n\n  private orgId: string;\n\n  private useProdWebexApis: boolean;\n\n  /**\n   * @param useProdWebexApis - default value is true\n   */\n  constructor(webex: WebexSDK, logger: LoggerInterface, useProdWebexApis = true) {\n    this.sdkConnector = SDKConnector;\n\n    if (!this.sdkConnector.getWebex()) {\n      SDKConnector.setWebex(webex);\n    }\n\n    this.webex = this.sdkConnector.getWebex();\n    log.setLogger(logger.level, UCM_CONNECTOR_FILE);\n    this.userId = this.webex.internal.device.userId;\n    this.orgId = this.webex.internal.device.orgId;\n    this.useProdWebexApis = useProdWebexApis;\n  }\n\n  /**\n   * Reads call waiting setting at the backend.\n   */\n  public getCallWaitingSetting(): Promise<CallSettingResponse> {\n    const loggerContext = {\n      file: UCM_CONNECTOR_FILE,\n      method: METHODS.GET_CALL_WAITING_SETTING,\n    };\n\n    log.info(METHOD_START_MESSAGE, loggerContext);\n\n    return this.getMethodNotSupportedResponse();\n  }\n\n  /**\n   * Reads DND setting at the backend.\n   */\n  public getDoNotDisturbSetting(): Promise<CallSettingResponse> {\n    const loggerContext = {\n      file: UCM_CONNECTOR_FILE,\n      method: METHODS.GET_DO_NOT_DISTURB_SETTING,\n    };\n\n    log.info(METHOD_START_MESSAGE, loggerContext);\n\n    return this.getMethodNotSupportedResponse();\n  }\n\n  /**\n   * Updates DND setting at the backend.\n   */\n  public setDoNotDisturbSetting(): Promise<CallSettingResponse> {\n    const loggerContext = {\n      file: UCM_CONNECTOR_FILE,\n      method: METHODS.SET_DO_NOT_DISTURB_SETTING,\n    };\n\n    log.info(METHOD_START_MESSAGE, loggerContext);\n\n    return this.getMethodNotSupportedResponse();\n  }\n\n  /**\n   * Reads Call Forward setting at the backend.\n   */\n  public getCallForwardSetting(): Promise<CallSettingResponse> {\n    const loggerContext = {\n      file: UCM_CONNECTOR_FILE,\n      method: METHODS.GET_CALL_FORWARD_SETTING,\n    };\n\n    log.info(METHOD_START_MESSAGE, loggerContext);\n\n    return this.getMethodNotSupportedResponse();\n  }\n\n  /**\n   * Updates Call Forward setting at the backend.\n   */\n  public setCallForwardSetting(): Promise<CallSettingResponse> {\n    const loggerContext = {\n      file: UCM_CONNECTOR_FILE,\n      method: METHODS.SET_CALL_FORWARD_SETTING,\n    };\n\n    log.info(METHOD_START_MESSAGE, loggerContext);\n\n    return this.getMethodNotSupportedResponse();\n  }\n\n  /**\n   * Reads Voicemail setting at the backend.\n   */\n  public getVoicemailSetting(): Promise<CallSettingResponse> {\n    const loggerContext = {\n      file: UCM_CONNECTOR_FILE,\n      method: METHODS.GET_VOICEMAIL_SETTING,\n    };\n\n    log.info(METHOD_START_MESSAGE, loggerContext);\n\n    return this.getMethodNotSupportedResponse();\n  }\n\n  /**\n   * Updates Voicemail setting at the backend.\n   */\n  public setVoicemailSetting(): Promise<CallSettingResponse> {\n    const loggerContext = {\n      file: UCM_CONNECTOR_FILE,\n      method: METHODS.SET_VOICEMAIL_SETTING,\n    };\n\n    log.info(METHOD_START_MESSAGE, loggerContext);\n\n    return this.getMethodNotSupportedResponse();\n  }\n\n  /**\n   * Returns a default error response for unsupported methods.\n   */\n  private getMethodNotSupportedResponse(): Promise<CallSettingResponse> {\n    const loggerContext = {\n      file: UCM_CONNECTOR_FILE,\n      method: METHODS.GET_METHOD_NOT_SUPPORTED_RESPONSE,\n    };\n\n    log.info(METHOD_START_MESSAGE, loggerContext);\n\n    const response = serviceErrorCodeHandler({statusCode: 501}, loggerContext);\n\n    return Promise.resolve(response);\n  }\n\n  /**\n   * Reads the Call Forwarding Always settings at the backend.\n   * This will also check if CFA is set to Voicemail.\n   * If CFA is set to destination, that will take precedence.\n   * For UCM backend, relevant fields in the response are `enabled` & `destination`.\n   *\n   * @param directoryNumber - Directory number for which CFA needs to returned.\n   */\n  public async getCallForwardAlwaysSetting(directoryNumber?: string): Promise<CallSettingResponse> {\n    const loggerContext = {\n      file: UCM_CONNECTOR_FILE,\n      method: METHODS.GET_CALL_FORWARD_ALWAYS_SETTING,\n    };\n\n    log.info(\n      directoryNumber ? `${METHOD_START_MESSAGE} with ${directoryNumber}` : METHOD_START_MESSAGE,\n      loggerContext\n    );\n\n    const webexApisUrl = this.useProdWebexApis\n      ? WEBEX_API_CONFIG_PROD_URL\n      : WEBEX_API_CONFIG_INT_URL;\n\n    try {\n      if (directoryNumber) {\n        const resp = <WebexRequestPayload>await this.webex.request({\n          uri: `${webexApisUrl}/${PEOPLE_ENDPOINT}/${\n            this.userId\n          }/${CF_ENDPOINT.toLowerCase()}?${ORG_ENDPOINT}=${this.orgId}`,\n          method: HTTP_METHODS.GET,\n        });\n\n        const {callForwarding} = resp.body as CallForwardingSettingsUCM;\n        const cfa = callForwarding.always.find(\n          (item) => item.dn.endsWith(directoryNumber) || item.e164Number.endsWith(directoryNumber)\n        );\n\n        if (cfa) {\n          const response = {\n            statusCode: Number(resp[STATUS_CODE]),\n            message: SUCCESS_MESSAGE,\n            data: {\n              callSetting: {\n                enabled: cfa.destinationVoicemailEnabled || !!cfa.destination,\n                destination: cfa.destinationVoicemailEnabled ? VOICEMAIL : cfa.destination,\n              } as CallForwardAlwaysSetting,\n            },\n          };\n\n          log.log(\n            `Successfully retrieved call forward always setting for directory number: ${directoryNumber}`,\n            loggerContext\n          );\n\n          return response;\n        }\n        const response = {\n          statusCode: 404,\n          message: FAILURE_MESSAGE,\n          data: {\n            error: 'Directory Number is not assigned to the user',\n          },\n        };\n\n        return response;\n      }\n      const response = {\n        statusCode: 400,\n        message: FAILURE_MESSAGE,\n        data: {\n          error: 'Directory Number is mandatory for UCM backend',\n        },\n      };\n\n      return response;\n    } catch (err: unknown) {\n      const errorInfo = err as WebexRequestPayload;\n      const extendedError = new Error(\n        `Failed to get call forward always setting: ${err}`\n      ) as ExtendedError;\n      log.error(extendedError, loggerContext);\n      await uploadLogs();\n      const errorStatus = serviceErrorCodeHandler(errorInfo, loggerContext);\n\n      return errorStatus;\n    }\n  }\n}\n"],"mappings":"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"}