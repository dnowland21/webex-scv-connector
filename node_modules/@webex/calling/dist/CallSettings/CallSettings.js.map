{"version":3,"names":["_constants","require","_Utils","_SDKConnector","_interopRequireDefault","_Logger","_types","_WxCallBackendConnector","_constants2","_UcmBackendConnector","CallSettings","exports","webex","logger","useProdWebexApis","_classCallCheck2","default","_defineProperty2","sdkConnector","SDKConnector","getWebex","setWebex","log","setLogger","level","CALL_SETTINGS_FILE","initializeBackendConnector","_createClass2","key","value","callingBackend","getCallingBackEnd","info","concat","METHOD_START_MESSAGE","file","method","METHODS","INITIALIZE_BACKEND_CONNECTOR","CALLING_BACKEND","BWRKS","WXC","backendConnector","WxCallBackendConnector","UCM","UcmBackendConnector","Error","_getCallWaitingSetting","_asyncToGenerator2","_regenerator","mark","_callee","wrap","_callee$","_context","prev","next","GET_CALL_WAITING_SETTING","abrupt","getCallWaitingSetting","stop","apply","arguments","_getDoNotDisturbSetting","_callee2","_callee2$","_context2","GET_DO_NOT_DISTURB_SETTING","getDoNotDisturbSetting","_setDoNotDisturbSetting","_callee3","enabled","_callee3$","_context3","SET_DO_NOT_DISTURB_SETTING","setDoNotDisturbSetting","_x","_getCallForwardSetting","_callee4","_callee4$","_context4","GET_CALL_FORWARD_SETTING","getCallForwardSetting","_setCallForwardSetting","_callee5","callForwardingRequest","_callee5$","_context5","SET_CALL_FORWARD_SETTING","setCallForwardSetting","_x2","_getVoicemailSetting","_callee6","_callee6$","_context6","GET_VOICEMAIL_SETTING","getVoicemailSetting","_setVoicemailSetting","_callee7","voicemailRequest","_callee7$","_context7","SET_VOICEMAIL_SETTING","setVoicemailSetting","_x3","_getCallForwardAlwaysSetting","_callee8","directoryNumber","_callee8$","_context8","GET_CALL_FORWARD_ALWAYS_SETTING","getCallForwardAlwaysSetting","_x4","createCallSettingsClient"],"sources":["CallSettings.ts"],"sourcesContent":["/* eslint-disable valid-jsdoc */\nimport {METHOD_START_MESSAGE} from '../common/constants';\nimport {getCallingBackEnd} from '../common/Utils';\nimport SDKConnector from '../SDKConnector';\nimport {ISDKConnector, WebexSDK} from '../SDKConnector/types';\nimport {\n  ICallSettings,\n  LoggerInterface,\n  CallForwardSetting,\n  CallSettingResponse,\n  VoicemailSetting,\n} from './types';\nimport log from '../Logger';\nimport {CALLING_BACKEND} from '../common/types';\n\nimport {WxCallBackendConnector} from './WxCallBackendConnector';\nimport {CALL_SETTINGS_FILE, METHODS} from './constants';\nimport {UcmBackendConnector} from './UcmBackendConnector';\n\n/**\n * `CallSettings` module is designed to offer a range of APIs for retrieving and updating settings such as Call Waiting, Do Not Disturb (DND), Call Forwarding, Voicemail, and more.\n * These operations are tailored to work with various calling backends, providing flexibility and adaptability to different scenarios.\n * The selection of the appropriate calling backend occurs during the instantiation of the CallSettings Client and is determined by the user's entitlements.\n *\n * This code snippet demonstrates how to create an instance of `CallSettings` using webex and logger.\n *\n * Example\n * ```javascript\n * const callSettings = createCallSettingsClient(webex, logger);\n * ```\n */\nexport class CallSettings implements ICallSettings {\n  private sdkConnector: ISDKConnector;\n\n  private webex: WebexSDK;\n\n  private callingBackend!: CALLING_BACKEND;\n\n  private backendConnector!: ICallSettings;\n\n  /**\n   * @ignore\n   */\n  constructor(webex: WebexSDK, logger: LoggerInterface, useProdWebexApis?: boolean) {\n    this.sdkConnector = SDKConnector;\n\n    if (!this.sdkConnector.getWebex()) {\n      SDKConnector.setWebex(webex);\n    }\n\n    log.setLogger(logger.level, CALL_SETTINGS_FILE);\n    this.webex = this.sdkConnector.getWebex();\n    this.initializeBackendConnector(logger, useProdWebexApis);\n  }\n\n  /**\n   * Setup and initialize the Call Settings backend connector class object.\n   */\n  private initializeBackendConnector(logger: LoggerInterface, useProdWebexApis?: boolean) {\n    this.callingBackend = getCallingBackEnd(this.webex);\n    log.info(`${METHOD_START_MESSAGE} with ${this.callingBackend} backend`, {\n      file: CALL_SETTINGS_FILE,\n      method: METHODS.INITIALIZE_BACKEND_CONNECTOR,\n    });\n\n    switch (this.callingBackend) {\n      case CALLING_BACKEND.BWRKS:\n      case CALLING_BACKEND.WXC:\n        this.backendConnector = new WxCallBackendConnector(this.webex, logger);\n        break;\n\n      case CALLING_BACKEND.UCM:\n        this.backendConnector = new UcmBackendConnector(this.webex, logger, useProdWebexApis);\n        break;\n\n      default:\n        throw new Error('Calling backend is not identified, exiting....');\n    }\n  }\n\n  /**\n   * Reads call waiting setting in Webex.\n   */\n  public async getCallWaitingSetting() {\n    log.info(METHOD_START_MESSAGE, {\n      file: CALL_SETTINGS_FILE,\n      method: METHODS.GET_CALL_WAITING_SETTING,\n    });\n\n    return this.backendConnector.getCallWaitingSetting();\n  }\n\n  /**\n   * Reads DND setting in Webex.\n   */\n  public async getDoNotDisturbSetting(): Promise<CallSettingResponse> {\n    log.info(METHOD_START_MESSAGE, {\n      file: CALL_SETTINGS_FILE,\n      method: METHODS.GET_DO_NOT_DISTURB_SETTING,\n    });\n\n    return this.backendConnector.getDoNotDisturbSetting();\n  }\n\n  /**\n   * Updates DND setting in Webex.\n   * @param enabled - true to enable DND, false to disable DND.\n   */\n  public async setDoNotDisturbSetting(enabled: boolean): Promise<CallSettingResponse> {\n    log.info(METHOD_START_MESSAGE, {\n      file: CALL_SETTINGS_FILE,\n      method: METHODS.SET_DO_NOT_DISTURB_SETTING,\n    });\n\n    return this.backendConnector.setDoNotDisturbSetting(enabled);\n  }\n\n  /**\n   * Reads Call Forward setting in Webex.\n   *\n   */\n  public async getCallForwardSetting(): Promise<CallSettingResponse> {\n    log.info(METHOD_START_MESSAGE, {\n      file: CALL_SETTINGS_FILE,\n      method: METHODS.GET_CALL_FORWARD_SETTING,\n    });\n\n    return this.backendConnector.getCallForwardSetting();\n  }\n\n  /**\n   * Updates Call Forward setting in Webex.\n   * @param callForwardingRequest - CallForwardSetting object.\n   */\n  public async setCallForwardSetting(\n    callForwardingRequest: CallForwardSetting\n  ): Promise<CallSettingResponse> {\n    log.info(METHOD_START_MESSAGE, {\n      file: CALL_SETTINGS_FILE,\n      method: METHODS.SET_CALL_FORWARD_SETTING,\n    });\n\n    return this.backendConnector.setCallForwardSetting(callForwardingRequest);\n  }\n\n  /**\n   * Reads Voicemail setting in Webex.\n   */\n  public async getVoicemailSetting(): Promise<CallSettingResponse> {\n    log.info(METHOD_START_MESSAGE, {\n      file: CALL_SETTINGS_FILE,\n      method: METHODS.GET_VOICEMAIL_SETTING,\n    });\n\n    return this.backendConnector.getVoicemailSetting();\n  }\n\n  /**\n   * Updates Voicemail setting in Webex.\n   * @param voicemailRequest - VoicemailSetting object.\n   */\n  public async setVoicemailSetting(\n    voicemailRequest: VoicemailSetting\n  ): Promise<CallSettingResponse> {\n    log.info(METHOD_START_MESSAGE, {\n      file: CALL_SETTINGS_FILE,\n      method: METHODS.SET_VOICEMAIL_SETTING,\n    });\n\n    return this.backendConnector.setVoicemailSetting(voicemailRequest);\n  }\n\n  /**\n   * Reads the Call Forwarding Always settings in Webex.\n   * This will also check if CFA is set to Voicemail.\n   * If CFA is set to destination, that will take precedence.\n   * @param directoryNumber - Directory number of the user.\n   */\n  public async getCallForwardAlwaysSetting(directoryNumber?: string): Promise<CallSettingResponse> {\n    log.info(METHOD_START_MESSAGE, {\n      file: CALL_SETTINGS_FILE,\n      method: METHODS.GET_CALL_FORWARD_ALWAYS_SETTING,\n    });\n\n    return this.backendConnector.getCallForwardAlwaysSetting(directoryNumber);\n  }\n}\n\n/**\n * Creates an instance of CallSettings Client.\n *\n * @param {WebexSDK} webex - An instance of the Webex SDK.\n * @param {LoggerInterface} logger - An instance implementing LoggerInterface used to set the log level for the module.\n */\nexport const createCallSettingsClient = (\n  webex: WebexSDK,\n  logger: LoggerInterface,\n  useProdWebexApis?: boolean\n): ICallSettings => new CallSettings(webex, logger, useProdWebexApis);\n"],"mappings":";;;;;;;;;;;;;AACA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,aAAA,GAAAC,sBAAA,CAAAH,OAAA;AASA,IAAAI,OAAA,GAAAD,sBAAA,CAAAH,OAAA;AACA,IAAAK,MAAA,GAAAL,OAAA;AAEA,IAAAM,uBAAA,GAAAN,OAAA;AACA,IAAAO,WAAA,GAAAP,OAAA;AACA,IAAAQ,oBAAA,GAAAR,OAAA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAYaS,YAAY,GAAAC,OAAA,CAAAD,YAAA;EASvB;AACF;AACA;EACE,SAAAA,aAAYE,KAAe,EAAEC,MAAuB,EAAEC,gBAA0B,EAAE;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAN,YAAA;IAAA,IAAAO,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAChF,IAAI,CAACE,YAAY,GAAGC,qBAAY;IAEhC,IAAI,CAAC,IAAI,CAACD,YAAY,CAACE,QAAQ,CAAC,CAAC,EAAE;MACjCD,qBAAY,CAACE,QAAQ,CAACT,KAAK,CAAC;IAC9B;IAEAU,eAAG,CAACC,SAAS,CAACV,MAAM,CAACW,KAAK,EAAEC,8BAAkB,CAAC;IAC/C,IAAI,CAACb,KAAK,GAAG,IAAI,CAACM,YAAY,CAACE,QAAQ,CAAC,CAAC;IACzC,IAAI,CAACM,0BAA0B,CAACb,MAAM,EAAEC,gBAAgB,CAAC;EAC3D;;EAEA;AACF;AACA;EAFE,IAAAa,aAAA,CAAAX,OAAA,EAAAN,YAAA;IAAAkB,GAAA;IAAAC,KAAA,EAGA,SAAAH,2BAAmCb,MAAuB,EAAEC,gBAA0B,EAAE;MACtF,IAAI,CAACgB,cAAc,GAAG,IAAAC,wBAAiB,EAAC,IAAI,CAACnB,KAAK,CAAC;MACnDU,eAAG,CAACU,IAAI,IAAAC,MAAA,CAAIC,+BAAoB,YAAAD,MAAA,CAAS,IAAI,CAACH,cAAc,eAAY;QACtEK,IAAI,EAAEV,8BAAkB;QACxBW,MAAM,EAAEC,mBAAO,CAACC;MAClB,CAAC,CAAC;MAEF,QAAQ,IAAI,CAACR,cAAc;QACzB,KAAKS,sBAAe,CAACC,KAAK;QAC1B,KAAKD,sBAAe,CAACE,GAAG;UACtB,IAAI,CAACC,gBAAgB,GAAG,IAAIC,8CAAsB,CAAC,IAAI,CAAC/B,KAAK,EAAEC,MAAM,CAAC;UACtE;QAEF,KAAK0B,sBAAe,CAACK,GAAG;UACtB,IAAI,CAACF,gBAAgB,GAAG,IAAIG,wCAAmB,CAAC,IAAI,CAACjC,KAAK,EAAEC,MAAM,EAAEC,gBAAgB,CAAC;UACrF;QAEF;UACE,MAAM,IAAIgC,KAAK,CAAC,gDAAgD,CAAC;MACrE;IACF;;IAEA;AACF;AACA;EAFE;IAAAlB,GAAA;IAAAC,KAAA;MAAA,IAAAkB,sBAAA,OAAAC,kBAAA,CAAAhC,OAAA,gBAAAiC,YAAA,CAAAjC,OAAA,CAAAkC,IAAA,CAGA,SAAAC,QAAA;QAAA,OAAAF,YAAA,CAAAjC,OAAA,CAAAoC,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACElC,eAAG,CAACU,IAAI,CAACE,+BAAoB,EAAE;gBAC7BC,IAAI,EAAEV,8BAAkB;gBACxBW,MAAM,EAAEC,mBAAO,CAACoB;cAClB,CAAC,CAAC;cAAC,OAAAH,QAAA,CAAAI,MAAA,WAEI,IAAI,CAAChB,gBAAgB,CAACiB,qBAAqB,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAL,QAAA,CAAAM,IAAA;UAAA;QAAA,GAAAT,OAAA;MAAA,CACrD;MAAA,SAAAQ,sBAAA;QAAA,OAAAZ,sBAAA,CAAAc,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAH,qBAAA;IAAA;IAED;AACF;AACA;IAFE;EAAA;IAAA/B,GAAA;IAAAC,KAAA;MAAA,IAAAkC,uBAAA,OAAAf,kBAAA,CAAAhC,OAAA,gBAAAiC,YAAA,CAAAjC,OAAA,CAAAkC,IAAA,CAGA,SAAAc,SAAA;QAAA,OAAAf,YAAA,CAAAjC,OAAA,CAAAoC,IAAA,UAAAa,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAX,IAAA,GAAAW,SAAA,CAAAV,IAAA;YAAA;cACElC,eAAG,CAACU,IAAI,CAACE,+BAAoB,EAAE;gBAC7BC,IAAI,EAAEV,8BAAkB;gBACxBW,MAAM,EAAEC,mBAAO,CAAC8B;cAClB,CAAC,CAAC;cAAC,OAAAD,SAAA,CAAAR,MAAA,WAEI,IAAI,CAAChB,gBAAgB,CAAC0B,sBAAsB,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAF,SAAA,CAAAN,IAAA;UAAA;QAAA,GAAAI,QAAA;MAAA,CACtD;MAAA,SAAAI,uBAAA;QAAA,OAAAL,uBAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAM,sBAAA;IAAA;IAED;AACF;AACA;AACA;IAHE;EAAA;IAAAxC,GAAA;IAAAC,KAAA;MAAA,IAAAwC,uBAAA,OAAArB,kBAAA,CAAAhC,OAAA,gBAAAiC,YAAA,CAAAjC,OAAA,CAAAkC,IAAA,CAIA,SAAAoB,SAAoCC,OAAgB;QAAA,OAAAtB,YAAA,CAAAjC,OAAA,CAAAoC,IAAA,UAAAoB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAlB,IAAA,GAAAkB,SAAA,CAAAjB,IAAA;YAAA;cAClDlC,eAAG,CAACU,IAAI,CAACE,+BAAoB,EAAE;gBAC7BC,IAAI,EAAEV,8BAAkB;gBACxBW,MAAM,EAAEC,mBAAO,CAACqC;cAClB,CAAC,CAAC;cAAC,OAAAD,SAAA,CAAAf,MAAA,WAEI,IAAI,CAAChB,gBAAgB,CAACiC,sBAAsB,CAACJ,OAAO,CAAC;YAAA;YAAA;cAAA,OAAAE,SAAA,CAAAb,IAAA;UAAA;QAAA,GAAAU,QAAA;MAAA,CAC7D;MAAA,SAAAK,uBAAAC,EAAA;QAAA,OAAAP,uBAAA,CAAAR,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAa,sBAAA;IAAA;IAED;AACF;AACA;AACA;IAHE;EAAA;IAAA/C,GAAA;IAAAC,KAAA;MAAA,IAAAgD,sBAAA,OAAA7B,kBAAA,CAAAhC,OAAA,gBAAAiC,YAAA,CAAAjC,OAAA,CAAAkC,IAAA,CAIA,SAAA4B,SAAA;QAAA,OAAA7B,YAAA,CAAAjC,OAAA,CAAAoC,IAAA,UAAA2B,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAzB,IAAA,GAAAyB,SAAA,CAAAxB,IAAA;YAAA;cACElC,eAAG,CAACU,IAAI,CAACE,+BAAoB,EAAE;gBAC7BC,IAAI,EAAEV,8BAAkB;gBACxBW,MAAM,EAAEC,mBAAO,CAAC4C;cAClB,CAAC,CAAC;cAAC,OAAAD,SAAA,CAAAtB,MAAA,WAEI,IAAI,CAAChB,gBAAgB,CAACwC,qBAAqB,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAF,SAAA,CAAApB,IAAA;UAAA;QAAA,GAAAkB,QAAA;MAAA,CACrD;MAAA,SAAAI,sBAAA;QAAA,OAAAL,sBAAA,CAAAhB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAoB,qBAAA;IAAA;IAED;AACF;AACA;AACA;IAHE;EAAA;IAAAtD,GAAA;IAAAC,KAAA;MAAA,IAAAsD,sBAAA,OAAAnC,kBAAA,CAAAhC,OAAA,gBAAAiC,YAAA,CAAAjC,OAAA,CAAAkC,IAAA,CAIA,SAAAkC,SACEC,qBAAyC;QAAA,OAAApC,YAAA,CAAAjC,OAAA,CAAAoC,IAAA,UAAAkC,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAhC,IAAA,GAAAgC,SAAA,CAAA/B,IAAA;YAAA;cAEzClC,eAAG,CAACU,IAAI,CAACE,+BAAoB,EAAE;gBAC7BC,IAAI,EAAEV,8BAAkB;gBACxBW,MAAM,EAAEC,mBAAO,CAACmD;cAClB,CAAC,CAAC;cAAC,OAAAD,SAAA,CAAA7B,MAAA,WAEI,IAAI,CAAChB,gBAAgB,CAAC+C,qBAAqB,CAACJ,qBAAqB,CAAC;YAAA;YAAA;cAAA,OAAAE,SAAA,CAAA3B,IAAA;UAAA;QAAA,GAAAwB,QAAA;MAAA,CAC1E;MAAA,SAAAK,sBAAAC,GAAA;QAAA,OAAAP,sBAAA,CAAAtB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA2B,qBAAA;IAAA;IAED;AACF;AACA;IAFE;EAAA;IAAA7D,GAAA;IAAAC,KAAA;MAAA,IAAA8D,oBAAA,OAAA3C,kBAAA,CAAAhC,OAAA,gBAAAiC,YAAA,CAAAjC,OAAA,CAAAkC,IAAA,CAGA,SAAA0C,SAAA;QAAA,OAAA3C,YAAA,CAAAjC,OAAA,CAAAoC,IAAA,UAAAyC,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAvC,IAAA,GAAAuC,SAAA,CAAAtC,IAAA;YAAA;cACElC,eAAG,CAACU,IAAI,CAACE,+BAAoB,EAAE;gBAC7BC,IAAI,EAAEV,8BAAkB;gBACxBW,MAAM,EAAEC,mBAAO,CAAC0D;cAClB,CAAC,CAAC;cAAC,OAAAD,SAAA,CAAApC,MAAA,WAEI,IAAI,CAAChB,gBAAgB,CAACsD,mBAAmB,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAF,SAAA,CAAAlC,IAAA;UAAA;QAAA,GAAAgC,QAAA;MAAA,CACnD;MAAA,SAAAI,oBAAA;QAAA,OAAAL,oBAAA,CAAA9B,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAkC,mBAAA;IAAA;IAED;AACF;AACA;AACA;IAHE;EAAA;IAAApE,GAAA;IAAAC,KAAA;MAAA,IAAAoE,oBAAA,OAAAjD,kBAAA,CAAAhC,OAAA,gBAAAiC,YAAA,CAAAjC,OAAA,CAAAkC,IAAA,CAIA,SAAAgD,SACEC,gBAAkC;QAAA,OAAAlD,YAAA,CAAAjC,OAAA,CAAAoC,IAAA,UAAAgD,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA9C,IAAA,GAAA8C,SAAA,CAAA7C,IAAA;YAAA;cAElClC,eAAG,CAACU,IAAI,CAACE,+BAAoB,EAAE;gBAC7BC,IAAI,EAAEV,8BAAkB;gBACxBW,MAAM,EAAEC,mBAAO,CAACiE;cAClB,CAAC,CAAC;cAAC,OAAAD,SAAA,CAAA3C,MAAA,WAEI,IAAI,CAAChB,gBAAgB,CAAC6D,mBAAmB,CAACJ,gBAAgB,CAAC;YAAA;YAAA;cAAA,OAAAE,SAAA,CAAAzC,IAAA;UAAA;QAAA,GAAAsC,QAAA;MAAA,CACnE;MAAA,SAAAK,oBAAAC,GAAA;QAAA,OAAAP,oBAAA,CAAApC,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAyC,mBAAA;IAAA;IAED;AACF;AACA;AACA;AACA;AACA;IALE;EAAA;IAAA3E,GAAA;IAAAC,KAAA;MAAA,IAAA4E,4BAAA,OAAAzD,kBAAA,CAAAhC,OAAA,gBAAAiC,YAAA,CAAAjC,OAAA,CAAAkC,IAAA,CAMA,SAAAwD,SAAyCC,eAAwB;QAAA,OAAA1D,YAAA,CAAAjC,OAAA,CAAAoC,IAAA,UAAAwD,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAtD,IAAA,GAAAsD,SAAA,CAAArD,IAAA;YAAA;cAC/DlC,eAAG,CAACU,IAAI,CAACE,+BAAoB,EAAE;gBAC7BC,IAAI,EAAEV,8BAAkB;gBACxBW,MAAM,EAAEC,mBAAO,CAACyE;cAClB,CAAC,CAAC;cAAC,OAAAD,SAAA,CAAAnD,MAAA,WAEI,IAAI,CAAChB,gBAAgB,CAACqE,2BAA2B,CAACJ,eAAe,CAAC;YAAA;YAAA;cAAA,OAAAE,SAAA,CAAAjD,IAAA;UAAA;QAAA,GAAA8C,QAAA;MAAA,CAC1E;MAAA,SAAAK,4BAAAC,GAAA;QAAA,OAAAP,4BAAA,CAAA5C,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAiD,2BAAA;IAAA;EAAA;EAAA,OAAArG,YAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACO,IAAMuG,wBAAwB,GAAAtG,OAAA,CAAAsG,wBAAA,GAAG,SAA3BA,wBAAwBA,CACnCrG,KAAe,EACfC,MAAuB,EACvBC,gBAA0B;EAAA,OACR,IAAIJ,YAAY,CAACE,KAAK,EAAEC,MAAM,EAAEC,gBAAgB,CAAC;AAAA"}