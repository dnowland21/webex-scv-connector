{"version":3,"names":["METRIC_TYPE","exports","METRIC_EVENT","REG_ACTION","TRANSFER_ACTION","VOICEMAIL_ACTION"],"sources":["types.ts"],"sourcesContent":["import {LineError} from '../Errors/catalog/LineError';\nimport {CallError, CallingClientError} from '../Errors';\nimport {CallId, CorrelationId, IDeviceInfo} from '../common/types';\n\nexport enum METRIC_TYPE {\n  OPERATIONAL = 'operational',\n  BEHAVIORAL = 'behavioral',\n}\n\nexport enum METRIC_EVENT {\n  BNR_ENABLED = 'web-calling-sdk-bnr-enabled',\n  BNR_DISABLED = 'web-calling-sdk-bnr-disabled',\n  CALL = 'web-calling-sdk-callcontrol',\n  CALL_ERROR = 'web-calling-sdk-callcontrol-error',\n  MEDIA = 'web-calling-sdk-media',\n  MEDIA_ERROR = 'web-calling-sdk-media-error',\n  REGISTRATION = 'web-calling-sdk-registration',\n  REGISTRATION_ERROR = 'web-calling-sdk-registration-error',\n  VOICEMAIL = 'web-calling-sdk-voicemail',\n  VOICEMAIL_ERROR = 'web-calling-sdk-voicemail-error',\n}\n\nexport enum REG_ACTION {\n  REGISTER = 'register',\n  DEREGISTER = 'deregister',\n  KEEPALIVE_FAILURE = 'keepaliveFailure',\n}\n\nexport enum TRANSFER_ACTION {\n  BLIND = 'TRANSFER_BLIND',\n  CONSULT = 'TRANSFER_CONSULT',\n}\n\nexport enum VOICEMAIL_ACTION {\n  GET_VOICEMAILS = 'get_voicemails',\n  GET_VOICEMAIL_CONTENT = 'get_voicemail_content',\n  GET_VOICEMAIL_SUMMARY = 'get_voicemail_summary',\n  MARK_READ = 'mark_read',\n  MARK_UNREAD = 'mark_unread',\n  DELETE = 'delete',\n  TRANSCRIPT = 'transcript',\n}\n\nexport interface IMetricManager {\n  setDeviceInfo: (deviceInfo: IDeviceInfo) => void;\n  submitRegistrationMetric: (\n    name: METRIC_EVENT,\n    metricAction: REG_ACTION,\n    type: METRIC_TYPE,\n    error: LineError | CallingClientError | undefined\n  ) => void;\n  submitBNRMetric: (\n    name: METRIC_EVENT,\n    type: METRIC_TYPE,\n    callId: CallId,\n    correlationId: CorrelationId\n  ) => void;\n  submitCallMetric: (\n    name: METRIC_EVENT,\n    metricAction: string,\n    type: METRIC_TYPE,\n    callId: CallId,\n    correlationId: CorrelationId,\n    callError?: CallError\n  ) => void;\n  submitMediaMetric: (\n    name: METRIC_EVENT,\n    metricAction: string,\n    type: METRIC_TYPE,\n    callId: CallId,\n    correlationId: CorrelationId,\n    localSdp?: string,\n    remoteSdp?: string,\n    callError?: CallError\n  ) => void;\n  submitVoicemailMetric: (\n    name: METRIC_EVENT,\n    metricAction: string,\n    type: METRIC_TYPE,\n    messageId?: string,\n    voicemailError?: string,\n    statusCode?: number\n  ) => void;\n}\n"],"mappings":";;;;;;;IAIYA,WAAW,GAAAC,OAAA,CAAAD,WAAA,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAAA,IAKXE,YAAY,GAAAD,OAAA,CAAAC,YAAA,0BAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAA,OAAZA,YAAY;AAAA;AAAA,IAaZC,UAAU,GAAAF,OAAA,CAAAE,UAAA,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAAA,IAMVC,eAAe,GAAAH,OAAA,CAAAG,eAAA,0BAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA;AAAA,IAKfC,gBAAgB,GAAAJ,OAAA,CAAAI,gBAAA,0BAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAA,OAAhBA,gBAAgB;AAAA"}