{"version":3,"names":["_constants","require","_types","_Logger","_interopRequireDefault","metricManager","MetricManager","webex","indicator","_classCallCheck2","default","_defineProperty2","log","info","file","METRIC_FILE","serviceIndicator","_createClass2","key","value","setDeviceInfo","deviceInfo","submitRegistrationMetric","name","metricAction","type","clientError","data","METRIC_EVENT","REGISTRATION","_this$deviceInfo","_this$deviceInfo$devi","_this$deviceInfo2","_this$deviceInfo2$dev","_this$deviceInfo3","_this$deviceInfo3$dev","tags","action","device_id","device","deviceId","service_indicator","fields","device_url","clientDeviceUri","mobius_url","uri","calling_sdk_version","process","env","CALLING_SDK_VERSION","VERSION","REGISTRATION_ERROR","_this$deviceInfo4","_this$deviceInfo4$dev","_this$deviceInfo5","_this$deviceInfo5$dev","_this$deviceInfo6","_this$deviceInfo6$dev","error","getError","message","error_type","warn","method","internal","metrics","submitClientMetrics","submitCallMetric","callId","correlationId","callError","CALL","_this$deviceInfo7","_this$deviceInfo7$dev","_this$deviceInfo8","_this$deviceInfo8$dev","_this$deviceInfo9","_this$deviceInfo9$dev","call_id","correlation_id","CALL_ERROR","_this$deviceInfo10","_this$deviceInfo10$de","_this$deviceInfo11","_this$deviceInfo11$de","_this$deviceInfo12","_this$deviceInfo12$de","getCallError","submitMediaMetric","localSdp","remoteSdp","MEDIA","_this$deviceInfo13","_this$deviceInfo13$de","_this$deviceInfo14","_this$deviceInfo14$de","_this$deviceInfo15","_this$deviceInfo15$de","local_media_details","remote_media_details","MEDIA_ERROR","_this$deviceInfo16","_this$deviceInfo16$de","_this$deviceInfo17","_this$deviceInfo17$de","_this$deviceInfo18","_this$deviceInfo18$de","submitVoicemailMetric","messageId","voicemailError","statusCode","VOICEMAIL","_this$deviceInfo19","_this$deviceInfo19$de","_this$deviceInfo20","_this$deviceInfo20$de","message_id","VOICEMAIL_ERROR","_this$deviceInfo21","_this$deviceInfo21$de","_this$deviceInfo22","_this$deviceInfo22$de","status_code","submitBNRMetric","BNR_ENABLED","BNR_DISABLED","_this$deviceInfo23","_this$deviceInfo23$de","_this$deviceInfo24","_this$deviceInfo24$de","_this$deviceInfo25","_this$deviceInfo25$de","getMetricManager","exports","_default"],"sources":["index.ts"],"sourcesContent":["import {CallError, CallingClientError} from '../Errors';\nimport {METRIC_FILE, VERSION} from '../CallingClient/constants';\nimport {CallId, CorrelationId, IDeviceInfo, ServiceIndicator} from '../common/types';\nimport {WebexSDK} from '../SDKConnector/types';\nimport {REG_ACTION, IMetricManager, METRIC_TYPE, METRIC_EVENT} from './types';\nimport {LineError} from '../Errors/catalog/LineError';\nimport log from '../Logger';\n\nlet metricManager: IMetricManager;\n\n/**\n *\n */\nclass MetricManager implements IMetricManager {\n  private webex: WebexSDK;\n\n  private deviceInfo?: IDeviceInfo;\n\n  private serviceIndicator?: ServiceIndicator;\n\n  /**\n   * @param webex - Webex object used to send metrics.\n   * @param indicator - Service Indicator.\n   */\n  public constructor(webex: WebexSDK, indicator?: ServiceIndicator) {\n    log.info('Initializing metric manager...', {file: METRIC_FILE});\n    this.webex = webex;\n    this.serviceIndicator = indicator;\n  }\n\n  /**\n   * @param deviceInfo - DeviceInfo object.\n   */\n  public setDeviceInfo(deviceInfo: IDeviceInfo) {\n    this.deviceInfo = deviceInfo;\n  }\n\n  /**\n   * @param name - Name of the metric being submitted.\n   * @param metricAction - Type of action sent in the metric.\n   * @param type - Type of metric.\n   * @param clientError - Error object used to populate error details in metric.\n   */\n  public submitRegistrationMetric(\n    name: METRIC_EVENT,\n    metricAction: REG_ACTION,\n    type: METRIC_TYPE,\n    clientError: LineError | CallingClientError | undefined\n  ) {\n    let data;\n\n    switch (name) {\n      case METRIC_EVENT.REGISTRATION: {\n        data = {\n          tags: {\n            action: metricAction,\n            device_id: this.deviceInfo?.device?.deviceId,\n            service_indicator: this.serviceIndicator,\n          },\n          fields: {\n            device_url: this.deviceInfo?.device?.clientDeviceUri,\n            mobius_url: this.deviceInfo?.device?.uri,\n            calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n          },\n          type,\n        };\n        break;\n      }\n\n      case METRIC_EVENT.REGISTRATION_ERROR: {\n        if (clientError) {\n          data = {\n            tags: {\n              action: metricAction,\n              device_id: this.deviceInfo?.device?.deviceId,\n              service_indicator: this.serviceIndicator,\n            },\n            fields: {\n              device_url: this.deviceInfo?.device?.clientDeviceUri,\n              mobius_url: this.deviceInfo?.device?.uri,\n              calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n              error: clientError.getError().message,\n              error_type: clientError.getError().type,\n            },\n            type,\n          };\n        }\n        break;\n      }\n\n      default:\n        log.warn('Invalid metric name received. Rejecting request to submit metric.', {\n          file: METRIC_FILE,\n          method: this.submitRegistrationMetric.name,\n        });\n        break;\n    }\n\n    if (data) {\n      this.webex.internal.metrics.submitClientMetrics(name, data);\n    }\n  }\n\n  /**\n   * @param name - Name of the metric being submitted.\n   * @param metricAction - Type of action sent in the metric.\n   * @param type - Type of metric.\n   * @param callId - Call ID of the call sending the metric.\n   * @param correlationId - Correlation ID of the call sending the metric.\n   * @param callError - Error object used to populate error details in metric.\n   */\n  public submitCallMetric(\n    name: METRIC_EVENT,\n    metricAction: string,\n    type: METRIC_TYPE,\n    callId: CallId,\n    correlationId: CorrelationId,\n    callError?: CallError\n  ) {\n    let data;\n\n    switch (name) {\n      case METRIC_EVENT.CALL: {\n        data = {\n          tags: {\n            action: metricAction,\n            device_id: this.deviceInfo?.device?.deviceId,\n            service_indicator: this.serviceIndicator,\n          },\n          fields: {\n            device_url: this.deviceInfo?.device?.clientDeviceUri,\n            mobius_url: this.deviceInfo?.device?.uri,\n            calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n            call_id: callId,\n            correlation_id: correlationId,\n          },\n          type,\n        };\n        break;\n      }\n\n      case METRIC_EVENT.CALL_ERROR: {\n        if (callError) {\n          data = {\n            tags: {\n              action: metricAction,\n              device_id: this.deviceInfo?.device?.deviceId,\n              service_indicator: this.serviceIndicator,\n            },\n            fields: {\n              device_url: this.deviceInfo?.device?.clientDeviceUri,\n              mobius_url: this.deviceInfo?.device?.uri,\n              calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n              call_id: callId,\n              correlation_id: correlationId,\n              error: callError.getCallError().message,\n              error_type: callError.getCallError().type,\n            },\n            type,\n          };\n        }\n        break;\n      }\n\n      default:\n        log.warn('Invalid metric name received. Rejecting request to submit metric.', {\n          file: METRIC_FILE,\n          method: this.submitCallMetric.name,\n        });\n        break;\n    }\n\n    if (data) {\n      this.webex.internal.metrics.submitClientMetrics(name, data);\n    }\n  }\n\n  /**\n   * @param name - Name of the metric being submitted.\n   * @param metricAction - Type of action sent in the metric.\n   * @param type - Type of metric.\n   * @param callId - Call ID of the call sending the metric.\n   * @param correlationId - Correlation ID of the call sending the metric.\n   * @param localSdp - Local SDP information for media metric.\n   * @param remoteSdp - Remote SDP information for media metric.\n   * @param callError - Error object used to populate error details in metric.\n   */\n  public submitMediaMetric(\n    name: METRIC_EVENT,\n    metricAction: string,\n    type: METRIC_TYPE,\n    callId: CallId,\n    correlationId: CorrelationId,\n    localSdp?: string,\n    remoteSdp?: string,\n    callError?: CallError\n  ) {\n    let data;\n\n    switch (name) {\n      case METRIC_EVENT.MEDIA: {\n        data = {\n          tags: {\n            action: metricAction,\n            device_id: this.deviceInfo?.device?.deviceId,\n            service_indicator: this.serviceIndicator,\n          },\n          fields: {\n            device_url: this.deviceInfo?.device?.clientDeviceUri,\n            mobius_url: this.deviceInfo?.device?.uri,\n            calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n            call_id: callId,\n            correlation_id: correlationId,\n            local_media_details: localSdp,\n            remote_media_details: remoteSdp,\n          },\n          type,\n        };\n        break;\n      }\n\n      case METRIC_EVENT.MEDIA_ERROR: {\n        if (callError) {\n          data = {\n            tags: {\n              action: metricAction,\n              device_id: this.deviceInfo?.device?.deviceId,\n              service_indicator: this.serviceIndicator,\n            },\n            fields: {\n              device_url: this.deviceInfo?.device?.clientDeviceUri,\n              mobius_url: this.deviceInfo?.device?.uri,\n              calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n              call_id: callId,\n              correlation_id: correlationId,\n              local_media_details: localSdp,\n              remote_media_details: remoteSdp,\n              error: callError.getCallError().message,\n              error_type: callError.getCallError().type,\n            },\n            type,\n          };\n        }\n        break;\n      }\n\n      default:\n        log.warn('Invalid metric name received. Rejecting request to submit metric.', {\n          file: METRIC_FILE,\n          method: this.submitMediaMetric.name,\n        });\n        break;\n    }\n\n    if (data) {\n      this.webex.internal.metrics.submitClientMetrics(name, data);\n    }\n  }\n\n  /**\n   * @param name - Name of the metric being submitted.\n   * @param metricAction - Type of action sent in the metric.\n   * @param type - Type of metric.\n   * @param messageId - Message identifier of a Voicemail message.\n   * @param voicemailError - Error string used to populate error details in metric.\n   * @param statusCode - Status code used to populate error details in metric.\n   */\n  public submitVoicemailMetric(\n    name: METRIC_EVENT,\n    metricAction: string,\n    type: METRIC_TYPE,\n    messageId?: string,\n    voicemailError?: string,\n    statusCode?: number\n  ) {\n    let data;\n\n    switch (name) {\n      case METRIC_EVENT.VOICEMAIL: {\n        data = {\n          tags: {\n            action: metricAction,\n            device_id: this.deviceInfo?.device?.deviceId,\n            message_id: messageId,\n          },\n          fields: {\n            device_url: this.deviceInfo?.device?.clientDeviceUri,\n            calling_sdk_version:\n              typeof process !== 'undefined' && process.env.CALLING_SDK_VERSION\n                ? process.env.CALLING_SDK_VERSION\n                : VERSION,\n          },\n          type,\n        };\n        break;\n      }\n\n      case METRIC_EVENT.VOICEMAIL_ERROR: {\n        data = {\n          tags: {\n            action: metricAction,\n            device_id: this.deviceInfo?.device?.deviceId,\n            message_id: messageId,\n            error: voicemailError,\n            status_code: statusCode,\n          },\n          fields: {\n            device_url: this.deviceInfo?.device?.clientDeviceUri,\n            calling_sdk_version:\n              typeof process !== 'undefined' && process.env.CALLING_SDK_VERSION\n                ? process.env.CALLING_SDK_VERSION\n                : VERSION,\n          },\n          type,\n        };\n        break;\n      }\n\n      default:\n        log.warn('Invalid metric name received. Rejecting request to submit metric.', {\n          file: METRIC_FILE,\n          method: this.submitVoicemailMetric.name,\n        });\n        break;\n    }\n    if (data) {\n      this.webex.internal.metrics.submitClientMetrics(name, data);\n    }\n  }\n\n  public submitBNRMetric(\n    name: METRIC_EVENT,\n    type: METRIC_TYPE,\n    callId: CallId,\n    correlationId: CorrelationId\n  ) {\n    let data;\n\n    if (name === METRIC_EVENT.BNR_ENABLED || name === METRIC_EVENT.BNR_DISABLED) {\n      data = {\n        tags: {\n          device_id: this.deviceInfo?.device?.deviceId,\n          service_indicator: this.serviceIndicator,\n        },\n        fields: {\n          device_url: this.deviceInfo?.device?.clientDeviceUri,\n          mobius_url: this.deviceInfo?.device?.uri,\n          calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n          call_id: callId,\n          correlation_id: correlationId,\n        },\n        type,\n      };\n    } else {\n      log.warn('Invalid metric name received. Rejecting request to submit metric.', {\n        file: METRIC_FILE,\n        method: this.submitBNRMetric.name,\n      });\n    }\n\n    if (data) {\n      this.webex.internal.metrics.submitClientMetrics(name, data);\n    }\n  }\n}\n\n/**\n * @param webex - Webex object to communicate with metrics microservice.\n * @param indicator - Service Indicator.\n */\nexport const getMetricManager = (webex: WebexSDK, indicator?: ServiceIndicator): IMetricManager => {\n  if (!metricManager) {\n    metricManager = new MetricManager(webex, indicator);\n  }\n\n  return metricManager;\n};\n\nexport default getMetricManager;\n"],"mappings":"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"}