{"version":3,"names":["_constants","require","_types","_Logger","_interopRequireDefault","metricManager","MetricManager","webex","indicator","_classCallCheck2","default","_defineProperty2","log","info","file","METRIC_FILE","serviceIndicator","_createClass2","key","value","submitUploadLogsMetric","name","action","type","trackingId","feedbackId","correlationId","stack","callId","data","METRIC_EVENT","UPLOAD_LOGS_SUCCESS","_this$deviceInfo","_this$deviceInfo$devi","_this$deviceInfo2","_this$deviceInfo2$dev","_this$deviceInfo3","_this$deviceInfo3$dev","tags","device_id","deviceInfo","device","deviceId","service_indicator","fields","device_url","clientDeviceUri","mobius_url","uri","calling_sdk_version","process","env","CALLING_SDK_VERSION","VERSION","correlation_id","tracking_id","feedback_id","call_id","UPLOAD_LOGS_FAILED","_this$deviceInfo4","_this$deviceInfo4$dev","_this$deviceInfo5","_this$deviceInfo5$dev","_this$deviceInfo6","_this$deviceInfo6$dev","error","internal","metrics","submitClientMetrics","setDeviceInfo","submitRegistrationMetric","metricAction","clientError","REGISTRATION","_this$deviceInfo7","_this$deviceInfo7$dev","_this$deviceInfo8","_this$deviceInfo8$dev","_this$deviceInfo9","_this$deviceInfo9$dev","REGISTRATION_ERROR","_this$deviceInfo10","_this$deviceInfo10$de","_this$deviceInfo11","_this$deviceInfo11$de","_this$deviceInfo12","_this$deviceInfo12$de","getError","message","error_type","warn","method","submitCallMetric","callError","CALL","_this$deviceInfo13","_this$deviceInfo13$de","_this$deviceInfo14","_this$deviceInfo14$de","_this$deviceInfo15","_this$deviceInfo15$de","CALL_ERROR","_this$deviceInfo16","_this$deviceInfo16$de","_this$deviceInfo17","_this$deviceInfo17$de","_this$deviceInfo18","_this$deviceInfo18$de","getCallError","submitMediaMetric","localSdp","remoteSdp","MEDIA","_this$deviceInfo19","_this$deviceInfo19$de","_this$deviceInfo20","_this$deviceInfo20$de","_this$deviceInfo21","_this$deviceInfo21$de","local_media_details","remote_media_details","MEDIA_ERROR","_this$deviceInfo22","_this$deviceInfo22$de","_this$deviceInfo23","_this$deviceInfo23$de","_this$deviceInfo24","_this$deviceInfo24$de","submitVoicemailMetric","messageId","voicemailError","statusCode","VOICEMAIL","_this$deviceInfo25","_this$deviceInfo25$de","_this$deviceInfo26","_this$deviceInfo26$de","message_id","VOICEMAIL_ERROR","_this$deviceInfo27","_this$deviceInfo27$de","_this$deviceInfo28","_this$deviceInfo28$de","status_code","submitBNRMetric","BNR_ENABLED","BNR_DISABLED","_this$deviceInfo29","_this$deviceInfo29$de","_this$deviceInfo30","_this$deviceInfo30$de","_this$deviceInfo31","_this$deviceInfo31$de","getMetricManager","exports","_default"],"sources":["index.ts"],"sourcesContent":["import {CallError, CallingClientError} from '../Errors';\nimport {METRIC_FILE, VERSION} from '../CallingClient/constants';\nimport {CallId, CorrelationId, IDeviceInfo, ServiceIndicator} from '../common/types';\nimport {WebexSDK} from '../SDKConnector/types';\nimport {REG_ACTION, IMetricManager, METRIC_TYPE, METRIC_EVENT} from './types';\nimport {LineError} from '../Errors/catalog/LineError';\nimport log from '../Logger';\n\nlet metricManager: IMetricManager;\n\n/**\n *\n */\nclass MetricManager implements IMetricManager {\n  private webex: WebexSDK;\n\n  private deviceInfo?: IDeviceInfo;\n\n  private serviceIndicator?: ServiceIndicator;\n\n  /**\n   * @param webex - Webex object used to send metrics.\n   * @param indicator - Service Indicator.\n   */\n  public constructor(webex: WebexSDK, indicator?: ServiceIndicator) {\n    log.info('Initializing metric manager...', {file: METRIC_FILE});\n    this.webex = webex;\n    this.serviceIndicator = indicator;\n  }\n\n  public submitUploadLogsMetric(\n    name: METRIC_EVENT,\n    action: string,\n    type: METRIC_TYPE,\n    trackingId?: string,\n    feedbackId?: string,\n    correlationId?: string,\n    stack?: string,\n    callId?: string\n  ) {\n    let data;\n\n    switch (name) {\n      case METRIC_EVENT.UPLOAD_LOGS_SUCCESS: {\n        data = {\n          tags: {\n            action,\n            device_id: this.deviceInfo?.device?.deviceId,\n            service_indicator: this.serviceIndicator,\n          },\n          fields: {\n            device_url: this.deviceInfo?.device?.clientDeviceUri,\n            mobius_url: this.deviceInfo?.device?.uri,\n            calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n            correlation_id: correlationId,\n            tracking_id: trackingId,\n            feedback_id: feedbackId,\n            call_id: callId,\n          },\n          type,\n        };\n        break;\n      }\n      case METRIC_EVENT.UPLOAD_LOGS_FAILED: {\n        data = {\n          tags: {\n            action,\n            device_id: this.deviceInfo?.device?.deviceId,\n            service_indicator: this.serviceIndicator,\n          },\n          fields: {\n            device_url: this.deviceInfo?.device?.clientDeviceUri,\n            mobius_url: this.deviceInfo?.device?.uri,\n            calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n            correlation_id: correlationId,\n            tracking_id: trackingId,\n            feedback_id: feedbackId,\n            error: stack,\n            call_id: callId,\n          },\n          type,\n        };\n      }\n    }\n    if (data) {\n      this.webex.internal.metrics.submitClientMetrics(name, data);\n    }\n  }\n\n  /**\n   * @param deviceInfo - DeviceInfo object.\n   */\n  public setDeviceInfo(deviceInfo: IDeviceInfo) {\n    this.deviceInfo = deviceInfo;\n  }\n\n  /**\n   * @param name - Name of the metric being submitted.\n   * @param metricAction - Type of action sent in the metric.\n   * @param type - Type of metric.\n   * @param clientError - Error object used to populate error details in metric.\n   */\n  public submitRegistrationMetric(\n    name: METRIC_EVENT,\n    metricAction: REG_ACTION,\n    type: METRIC_TYPE,\n    clientError: LineError | CallingClientError | undefined\n  ) {\n    let data;\n\n    switch (name) {\n      case METRIC_EVENT.REGISTRATION: {\n        data = {\n          tags: {\n            action: metricAction,\n            device_id: this.deviceInfo?.device?.deviceId,\n            service_indicator: this.serviceIndicator,\n          },\n          fields: {\n            device_url: this.deviceInfo?.device?.clientDeviceUri,\n            mobius_url: this.deviceInfo?.device?.uri,\n            calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n          },\n          type,\n        };\n        break;\n      }\n\n      case METRIC_EVENT.REGISTRATION_ERROR: {\n        if (clientError) {\n          data = {\n            tags: {\n              action: metricAction,\n              device_id: this.deviceInfo?.device?.deviceId,\n              service_indicator: this.serviceIndicator,\n            },\n            fields: {\n              device_url: this.deviceInfo?.device?.clientDeviceUri,\n              mobius_url: this.deviceInfo?.device?.uri,\n              calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n              error: clientError.getError().message,\n              error_type: clientError.getError().type,\n            },\n            type,\n          };\n        }\n        break;\n      }\n\n      default:\n        log.warn('Invalid metric name received. Rejecting request to submit metric.', {\n          file: METRIC_FILE,\n          method: this.submitRegistrationMetric.name,\n        });\n        break;\n    }\n\n    if (data) {\n      this.webex.internal.metrics.submitClientMetrics(name, data);\n    }\n  }\n\n  /**\n   * @param name - Name of the metric being submitted.\n   * @param metricAction - Type of action sent in the metric.\n   * @param type - Type of metric.\n   * @param callId - Call ID of the call sending the metric.\n   * @param correlationId - Correlation ID of the call sending the metric.\n   * @param callError - Error object used to populate error details in metric.\n   */\n  public submitCallMetric(\n    name: METRIC_EVENT,\n    metricAction: string,\n    type: METRIC_TYPE,\n    callId: CallId,\n    correlationId: CorrelationId,\n    callError?: CallError\n  ) {\n    let data;\n\n    switch (name) {\n      case METRIC_EVENT.CALL: {\n        data = {\n          tags: {\n            action: metricAction,\n            device_id: this.deviceInfo?.device?.deviceId,\n            service_indicator: this.serviceIndicator,\n          },\n          fields: {\n            device_url: this.deviceInfo?.device?.clientDeviceUri,\n            mobius_url: this.deviceInfo?.device?.uri,\n            calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n            call_id: callId,\n            correlation_id: correlationId,\n          },\n          type,\n        };\n        break;\n      }\n\n      case METRIC_EVENT.CALL_ERROR: {\n        if (callError) {\n          data = {\n            tags: {\n              action: metricAction,\n              device_id: this.deviceInfo?.device?.deviceId,\n              service_indicator: this.serviceIndicator,\n            },\n            fields: {\n              device_url: this.deviceInfo?.device?.clientDeviceUri,\n              mobius_url: this.deviceInfo?.device?.uri,\n              calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n              call_id: callId,\n              correlation_id: correlationId,\n              error: callError.getCallError().message,\n              error_type: callError.getCallError().type,\n            },\n            type,\n          };\n        }\n        break;\n      }\n\n      default:\n        log.warn('Invalid metric name received. Rejecting request to submit metric.', {\n          file: METRIC_FILE,\n          method: this.submitCallMetric.name,\n        });\n        break;\n    }\n\n    if (data) {\n      this.webex.internal.metrics.submitClientMetrics(name, data);\n    }\n  }\n\n  /**\n   * @param name - Name of the metric being submitted.\n   * @param metricAction - Type of action sent in the metric.\n   * @param type - Type of metric.\n   * @param callId - Call ID of the call sending the metric.\n   * @param correlationId - Correlation ID of the call sending the metric.\n   * @param localSdp - Local SDP information for media metric.\n   * @param remoteSdp - Remote SDP information for media metric.\n   * @param callError - Error object used to populate error details in metric.\n   */\n  public submitMediaMetric(\n    name: METRIC_EVENT,\n    metricAction: string,\n    type: METRIC_TYPE,\n    callId: CallId,\n    correlationId: CorrelationId,\n    localSdp?: string,\n    remoteSdp?: string,\n    callError?: CallError\n  ) {\n    let data;\n\n    switch (name) {\n      case METRIC_EVENT.MEDIA: {\n        data = {\n          tags: {\n            action: metricAction,\n            device_id: this.deviceInfo?.device?.deviceId,\n            service_indicator: this.serviceIndicator,\n          },\n          fields: {\n            device_url: this.deviceInfo?.device?.clientDeviceUri,\n            mobius_url: this.deviceInfo?.device?.uri,\n            calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n            call_id: callId,\n            correlation_id: correlationId,\n            local_media_details: localSdp,\n            remote_media_details: remoteSdp,\n          },\n          type,\n        };\n        break;\n      }\n\n      case METRIC_EVENT.MEDIA_ERROR: {\n        if (callError) {\n          data = {\n            tags: {\n              action: metricAction,\n              device_id: this.deviceInfo?.device?.deviceId,\n              service_indicator: this.serviceIndicator,\n            },\n            fields: {\n              device_url: this.deviceInfo?.device?.clientDeviceUri,\n              mobius_url: this.deviceInfo?.device?.uri,\n              calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n              call_id: callId,\n              correlation_id: correlationId,\n              local_media_details: localSdp,\n              remote_media_details: remoteSdp,\n              error: callError.getCallError().message,\n              error_type: callError.getCallError().type,\n            },\n            type,\n          };\n        }\n        break;\n      }\n\n      default:\n        log.warn('Invalid metric name received. Rejecting request to submit metric.', {\n          file: METRIC_FILE,\n          method: this.submitMediaMetric.name,\n        });\n        break;\n    }\n\n    if (data) {\n      this.webex.internal.metrics.submitClientMetrics(name, data);\n    }\n  }\n\n  /**\n   * @param name - Name of the metric being submitted.\n   * @param metricAction - Type of action sent in the metric.\n   * @param type - Type of metric.\n   * @param messageId - Message identifier of a Voicemail message.\n   * @param voicemailError - Error string used to populate error details in metric.\n   * @param statusCode - Status code used to populate error details in metric.\n   */\n  public submitVoicemailMetric(\n    name: METRIC_EVENT,\n    metricAction: string,\n    type: METRIC_TYPE,\n    messageId?: string,\n    voicemailError?: string,\n    statusCode?: number\n  ) {\n    let data;\n\n    switch (name) {\n      case METRIC_EVENT.VOICEMAIL: {\n        data = {\n          tags: {\n            action: metricAction,\n            device_id: this.deviceInfo?.device?.deviceId,\n            message_id: messageId,\n          },\n          fields: {\n            device_url: this.deviceInfo?.device?.clientDeviceUri,\n            calling_sdk_version:\n              typeof process !== 'undefined' && process.env.CALLING_SDK_VERSION\n                ? process.env.CALLING_SDK_VERSION\n                : VERSION,\n          },\n          type,\n        };\n        break;\n      }\n\n      case METRIC_EVENT.VOICEMAIL_ERROR: {\n        data = {\n          tags: {\n            action: metricAction,\n            device_id: this.deviceInfo?.device?.deviceId,\n            message_id: messageId,\n            error: voicemailError,\n            status_code: statusCode,\n          },\n          fields: {\n            device_url: this.deviceInfo?.device?.clientDeviceUri,\n            calling_sdk_version:\n              typeof process !== 'undefined' && process.env.CALLING_SDK_VERSION\n                ? process.env.CALLING_SDK_VERSION\n                : VERSION,\n          },\n          type,\n        };\n        break;\n      }\n\n      default:\n        log.warn('Invalid metric name received. Rejecting request to submit metric.', {\n          file: METRIC_FILE,\n          method: this.submitVoicemailMetric.name,\n        });\n        break;\n    }\n    if (data) {\n      this.webex.internal.metrics.submitClientMetrics(name, data);\n    }\n  }\n\n  public submitBNRMetric(\n    name: METRIC_EVENT,\n    type: METRIC_TYPE,\n    callId: CallId,\n    correlationId: CorrelationId\n  ) {\n    let data;\n\n    if (name === METRIC_EVENT.BNR_ENABLED || name === METRIC_EVENT.BNR_DISABLED) {\n      data = {\n        tags: {\n          device_id: this.deviceInfo?.device?.deviceId,\n          service_indicator: this.serviceIndicator,\n        },\n        fields: {\n          device_url: this.deviceInfo?.device?.clientDeviceUri,\n          mobius_url: this.deviceInfo?.device?.uri,\n          calling_sdk_version: process.env.CALLING_SDK_VERSION || VERSION,\n          call_id: callId,\n          correlation_id: correlationId,\n        },\n        type,\n      };\n    } else {\n      log.warn('Invalid metric name received. Rejecting request to submit metric.', {\n        file: METRIC_FILE,\n        method: this.submitBNRMetric.name,\n      });\n    }\n\n    if (data) {\n      this.webex.internal.metrics.submitClientMetrics(name, data);\n    }\n  }\n}\n\n/**\n * @param webex - Webex object to communicate with metrics microservice.\n * @param indicator - Service Indicator.\n */\nexport const getMetricManager = (\n  webex?: WebexSDK,\n  indicator?: ServiceIndicator\n): IMetricManager => {\n  if (!metricManager && webex) {\n    metricManager = new MetricManager(webex, indicator);\n  }\n\n  return metricManager;\n};\n\nexport default getMetricManager;\n"],"mappings":"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"}