"use strict";

var _Reflect$construct = require("@babel/runtime-corejs2/core-js/reflect/construct");
var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");
var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");
_Object$defineProperty(exports, "__esModule", {
  value: true
});
exports.createClientError = exports.CallingClientError = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));
var _types = require("../../common/types");
var _ExtendedError2 = _interopRequireDefault(require("./ExtendedError"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } } /* eslint-disable valid-jsdoc */
/**
 * Any error reported from Calling client should be stored here.
 */
var CallingClientError = exports.CallingClientError = /*#__PURE__*/function (_ExtendedError) {
  (0, _inherits2.default)(CallingClientError, _ExtendedError);
  var _super = _createSuper(CallingClientError);
  /**
   * Instantiate the Error class with these parameters.
   *
   * @param msg - Custom error message.
   * @param context - Error context.
   * @param type - Error Type.
   * @param status - Mobius Status, should be default.
   */
  function CallingClientError(msg, context, type, status) {
    var _this;
    (0, _classCallCheck2.default)(this, CallingClientError);
    _this = _super.call(this, msg, context, type);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "status", _types.RegistrationStatus.INACTIVE);
    _this.status = status;
    return _this;
  }

  /**
   *  Class method exposed to callers to allow storing of error object.
   *
   * @param error - Error Object.
   */
  (0, _createClass2.default)(CallingClientError, [{
    key: "setError",
    value: function setError(error) {
      this.message = error.message;
      this.context = error.context;
      this.type = error.type;
    }

    /**
     *  Class method exposed to callers to retrieve error object.
     *
     * @returns Error.
     */
  }, {
    key: "getError",
    value: function getError() {
      return {
        message: this.message,
        context: this.context,
        type: this.type
      };
    }
  }]);
  return CallingClientError;
}(_ExtendedError2.default);
/**
 * Instantiate CallingClientError.
 *
 * @param msg - Custom error message.
 * @param context - Error context.
 * @param type - Error Type.
 * @param status - Mobius Status, should be default.
 * @returns CallingClientError instance.
 */
var createClientError = exports.createClientError = function createClientError(msg, context, type, status) {
  return new CallingClientError(msg, context, type, status);
};
//# sourceMappingURL=CallingDeviceError.js.map
