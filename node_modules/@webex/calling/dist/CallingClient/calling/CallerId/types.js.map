{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import {CallerIdInfo} from '../../../Events/types';\nimport {DisplayInformation} from '../../../common/types';\n\nexport type EmailType = {\n  primary: boolean;\n  type: string;\n  value: string;\n};\n\nexport type SipAddressType = {\n  type: string;\n  value: string;\n  primary?: boolean;\n};\n\nexport type PhotoType = {\n  type: string;\n  value: string;\n};\n\n/**\n * Represents the interface for fetching caller ID details.\n */\nexport interface ICallerId {\n  /**\n   * Fetches caller ID details based on the provided caller ID information.\n   *\n   * This method takes a {@link CallerIdInfo} object as input and performs caller ID\n   * resolution in the background, returning a {@link DisplayInformation} object\n   * containing intermediate name and number.\n   *\n   * @param callerId - Caller ID data passed to the method.\n   *\n   * @remarks\n   * The `fetchCallerDetails` method is the main entrypoint for retrieving\n   * caller ID information. It initiates the caller ID resolution process\n   * based on the provided {@link CallerIdInfo} and returns the result as\n   * {@link DisplayInformation}.\n   *\n   * @example\n   * ```typescript\n   * const callerIdInfo: CallerIdInfo = { callerIdData };\n   * const displayInfo = callerIdInstance.fetchCallerDetails(callerIdInfo);\n   * console.log(`Name: ${displayInfo.name}, Number: ${displayInfo.number}`);\n   * ```\n   */\n  fetchCallerDetails: (callerId: CallerIdInfo) => DisplayInformation;\n}\n"],"mappings":""}