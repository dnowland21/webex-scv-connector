{"version":3,"names":["_index","_interopRequireDefault","require","_constants","_SDKConnector","_common","CallerId","exports","webex","emitter","_classCallCheck2","default","_defineProperty2","sdkConnector","SDKConnector","callerInfo","getWebex","setWebex","_createClass2","key","value","_resolveCallerId","_asyncToGenerator2","_regenerator","mark","_callee","filter","displayResult","isChanged","wrap","_callee$","_context","prev","next","resolveCallerIdDisplay","sent","name","log","info","file","CALLER_ID_FILE","method","num","avatarSrc","id","stop","resolveCallerId","_x","apply","arguments","_parseRemotePartyInfo","_callee2","data","lastToken","externalId","_callee2$","_context2","split","slice","includes","concat","warn","parseRemotePartyInfo","_x2","parseSipUri","paid","result","nameMatch","replace","trim","substring","indexOf","length","phoneMatch","match","VALID_PHONE_REGEX","fetchCallerDetails","callerId","undefined","from","createCallerId","emitterCb"],"sources":["index.ts"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\n/* eslint-disable valid-jsdoc */\nimport {CallerIdInfo} from '../../../Events/types';\nimport {ISDKConnector, WebexSDK} from '../../../SDKConnector/types';\nimport {DisplayInformation} from '../../../common/types';\nimport log from '../../../Logger/index';\nimport {CALLER_ID_FILE, VALID_PHONE_REGEX} from '../../constants';\n\nimport SDKConnector from '../../../SDKConnector';\nimport {ICallerId} from './types';\nimport {CallEmitterCallBack} from '../types';\nimport {resolveCallerIdDisplay} from '../../../common';\n\n/**\n *\n */\nexport class CallerId implements ICallerId {\n  private webex: WebexSDK;\n\n  private callerInfo: DisplayInformation;\n\n  private sdkConnector: ISDKConnector;\n\n  private emitter: CallEmitterCallBack;\n\n  /**\n   * Start the callerId instance.\n   *\n   * @param webex -.\n   * @param callObj -.\n   * @param emitter -.\n   */\n  constructor(webex: WebexSDK, emitter: CallEmitterCallBack) {\n    this.sdkConnector = SDKConnector;\n    this.callerInfo = {} as DisplayInformation;\n\n    if (!this.sdkConnector.getWebex()) {\n      SDKConnector.setWebex(webex);\n    }\n    this.webex = this.sdkConnector.getWebex();\n    this.emitter = emitter;\n  }\n\n  /**\n   * The handler which processes the data received from the SCIM query\n   * performed through externalId.\n   *\n   * @param filter - A filter to be used for query.\n   */\n  private async resolveCallerId(filter: string) {\n    const displayResult = (await resolveCallerIdDisplay(filter)) as DisplayInformation;\n    let isChanged = false;\n\n    /* It makes sense to emit only if the resolution gives different results than what we already have.\n     * Note that results gathered from the SCIM Query is always given preference.\n     */\n    if (displayResult.name && this.callerInfo.name !== displayResult.name) {\n      log.info('Updating Name after resolution', {\n        file: CALLER_ID_FILE,\n        method: 'resolveCallerId',\n      });\n      this.callerInfo.name = displayResult.name;\n      isChanged = true;\n    }\n\n    if (displayResult.num && this.callerInfo.num !== displayResult.num) {\n      log.info('Updating Number after resolution', {\n        file: CALLER_ID_FILE,\n        method: 'resolveCallerId',\n      });\n      this.callerInfo.num = displayResult.num;\n      isChanged = true;\n    }\n\n    if (!this.callerInfo.avatarSrc || this.callerInfo.avatarSrc !== displayResult.avatarSrc) {\n      log.info('Updating Avatar Id after resolution', {\n        file: CALLER_ID_FILE,\n        method: 'resolveCallerId',\n      });\n      this.callerInfo.avatarSrc = displayResult.avatarSrc;\n      isChanged = true;\n    }\n\n    if (!this.callerInfo.id || this.callerInfo.id !== displayResult.id) {\n      log.info('Updating User Id after resolution', {\n        file: CALLER_ID_FILE,\n        method: 'resolveCallerId',\n      });\n      this.callerInfo.id = displayResult.id;\n      isChanged = true;\n    }\n\n    if (isChanged) {\n      this.emitter(this.callerInfo);\n    }\n  }\n\n  /**\n   *  Remote party Id parser.\n   *\n   * @param data - Entire URI string.\n   */\n  private async parseRemotePartyInfo(data: string) {\n    /* External Id will be the last token if at all it exists */\n    const lastToken = data.split(';').slice(-1)[0];\n\n    if (lastToken.includes('externalId')) {\n      const externalId = lastToken.split('=')[1];\n\n      log.info(`externalId retrieved: ${externalId}`, {\n        file: CALLER_ID_FILE,\n        method: 'parseRemotePartyInfo',\n      });\n\n      this.resolveCallerId(`id eq \"${externalId}\"`);\n    } else {\n      log.warn(`externalId not found!`, {\n        file: CALLER_ID_FILE,\n        method: 'parseRemotePartyInfo',\n      });\n    }\n  }\n\n  /**\n   *  Parser for SIP Uris.\n   *\n   * @param paid - Entire sip uri. Can be PA-Id or From header.\n   * @returns -  a collection of name and number.\n   * @example\n   * const paid1 = '\"John O' Connor - (Guest)\" <sip:1234567890@domain>';\n   * const result1 = parseSipUri(paid1);\n   * result1.name = \"John O' Connor - (Guest)\"\n   * result1.num = \"1234567890\"\n   */\n  private parseSipUri(paid: string): DisplayInformation {\n    const result = {} as DisplayInformation;\n\n    // Extract name\n    const nameMatch = paid.split('<')[0].replace(/\"/g, '');\n    if (nameMatch) {\n      result.name = nameMatch.trim();\n    } else {\n      log.warn(`Name field not found!`, {\n        file: CALLER_ID_FILE,\n        method: 'parseSipUri',\n      });\n    }\n\n    // Extract number\n    const data = paid.split('@')[0].replace(/\"/g, '');\n    const num = data.substring(data.indexOf(':') + 1, data.length);\n    const phoneMatch = num.match(VALID_PHONE_REGEX);\n\n    if (phoneMatch && phoneMatch[0].length === num.length) {\n      result.num = num;\n    } else {\n      log.warn(`Number field not found!`, {\n        file: CALLER_ID_FILE,\n        method: 'parseSipUri',\n      });\n    }\n\n    return result;\n  }\n\n  /**\n   * The main entrypoint of the Caller-Id instance.\n   * It returns intermediate name and number and starts the\n   * caller Id resolution in background.\n   *\n   * @param callerId - CallerId data passed to us by Call Instance.\n   * @returns - A collection of name and number.\n   */\n  public fetchCallerDetails(callerId: CallerIdInfo) {\n    /* resetting previously set fields */\n    this.callerInfo.id = undefined;\n    this.callerInfo.avatarSrc = undefined;\n    this.callerInfo.name = undefined;\n    this.callerInfo.num = undefined;\n\n    if ('p-asserted-identity' in callerId) {\n      log.info('Parsing p-asserted-identity within remote party information', {\n        file: CALLER_ID_FILE,\n        method: 'fetchCallerDetails',\n      });\n      const result = this.parseSipUri(callerId['p-asserted-identity'] as string);\n\n      /* For P-Asserted-Identity, we update the callerInfo blindly, as it is of highest preference */\n      this.callerInfo.name = result.name;\n      this.callerInfo.num = result.num;\n    }\n\n    if (callerId.from) {\n      log.info('Parsing from header within the remote party information', {\n        file: CALLER_ID_FILE,\n        method: 'fetchCallerDetails',\n      });\n\n      const result = this.parseSipUri(callerId.from);\n\n      /* For From header , we should only update if not filled already by P-Asserted-Identity */\n      if (!this.callerInfo.name && result.name) {\n        log.info('Updating name field from From header', {\n          file: CALLER_ID_FILE,\n          method: 'fetchCallerDetails',\n        });\n        this.callerInfo.name = result.name;\n      }\n\n      if (!this.callerInfo.num && result.num) {\n        log.info('Updating number field from From header', {\n          file: CALLER_ID_FILE,\n          method: 'fetchCallerDetails',\n        });\n        this.callerInfo.num = result.num;\n      }\n    }\n\n    /* Emit the intermediate CallerId */\n\n    if (this.callerInfo.name || this.callerInfo.num) {\n      this.emitter(this.callerInfo);\n    }\n\n    /* We need to parse x-broadworks-remote-party-info if present asynchronously */\n    if ('x-broadworks-remote-party-info' in callerId) {\n      log.info('Parsing x-broadworks-remote-party-info within remote party information', {\n        file: CALLER_ID_FILE,\n        method: 'fetchCallerDetails',\n      });\n\n      this.parseRemotePartyInfo(callerId['x-broadworks-remote-party-info'] as string);\n    }\n\n    return this.callerInfo;\n  }\n}\n\n/**\n * To create CallerId instance.\n *\n * @param webex -.\n * @param emitterCb -.\n */\nexport const createCallerId = (webex: WebexSDK, emitterCb: CallEmitterCallBack): ICallerId =>\n  new CallerId(webex, emitterCb);\n"],"mappings":"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"}