{"version":3,"names":["_Utils","_interopRequireWildcard","require","utils","_types","_testUtil","_callManager","_types2","_call","_Logger","_interopRequireDefault","_types3","_getRequireWildcardCache","e","_WeakMap","r","t","__esModule","_typeof","default","has","get","n","__proto__","a","_Object$defineProperty","_Object$getOwnPropertyDescriptor","u","Object","prototype","hasOwnProperty","call","i","set","webex","getTestUtilsWebex","defaultServiceIndicator","ServiceIndicator","CALLING","mediaEvent","id","data","message","messageType","sdp","seq","version","callId","callUrl","deviceId","correlationId","eventType","timestamp","trackingId","alertType","headers","sequenceNumber","filterMessage","setupEvent","callerId","from","broadworksCorrelationInfo","disconnectEvent","causecode","cause","dest","type","CallType","URI","address","successResponseBody","statusCode","body","device","callData","callState","MobiusCallState","PROCEEDING","mockLineId","mockLine","lineId","describe","dummyResponse","patchMock","jest","spyOn","Call","setDisconnectReasonMock","deleteCallMock","initMediaConnectionMock","mediaRoapEventsListenerMock","mediaTrackListenerMock","postMediaMock","mockResolvedValue","mockReturnValue","callManager","beforeEach","getCallManager","removeAllListeners","LINE_EVENT_KEYS","INCOMING_CALL","expect","_keys","getActiveCalls","length","toBe","afterEach","calls","_values","forEach","end","it","toBeTruthy","callManagerNew","toMatchObject","_asyncToGenerator2","_regenerator","mark","_callee","logSpy","wrap","_callee$","_context","prev","next","updateLine","request","mockReturnValueOnce","log","createCall","CallDirection","OUTBOUND","sent","setCallId","getCallId","toStrictEqual","toHaveBeenCalledWith","stop","_callee2","_callee2$","_context2","on","callObj","getBroadworksCorrelationInfo","waitForMsecs","ALERTING","_callee3","_callee3$","_context3","_callee4","_callee4$","_context4","getCorrelationId","toHaveBeenCalled","_callee5","_callee5$","_context5","not","_callee6","_mediaEvent$data$mess","_mediaEvent$data$mess2","_mediaEvent$data$mess3","errorSpy","uploadLogsSpy","_callee6$","_context6","mockRejectedValue","Error","concat","file","method","objectContaining","_callee8","_callee8$","_context8","_ref8","_callee7","mediaSpy","mediaClose","track","_callee7$","_context7","state","value","answer","localAudioTrack","CONNECTED","_x","apply","arguments","dummyCallId","clearAllMocks","funcSpy","callSpy","_callee9","eventData","_callee9$","_context9","_callee10","_callee10$","_context10","_callee11","_callee11$","_context11","_callee12","mediaOK","_callee12$","_context12","received","_callee13","_mediaEvent$data$mess4","_mediaEvent$data$mess5","_mediaEvent$data$mess6","_mediaEvent$data$mess7","infoSpy","_callee13$","_context13","_callee14","_mediaEvent$data$mess8","_mediaEvent$data$mess9","_mediaEvent$data$mess10","_mediaEvent$data$mess11","_callee14$","_context14","_callee15","_callee15$","_context15","_callee16","connectEvent","_callee16$","_context16","JSON","parse","_stringify","_callee17","answerEvent","_callee17$","_context17","_callee18","_callee18$","_context18"],"sources":["callManager.test.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable dot-notation */\nimport {waitForMsecs} from '../../common/Utils';\nimport {CallDirection, CallType, ServiceIndicator} from '../../common/types';\nimport {getTestUtilsWebex} from '../../common/testUtil';\nimport {getCallManager} from './callManager';\nimport {ICall, ICallManager, MobiusCallState} from './types';\nimport {Call} from './call';\nimport log from '../../Logger';\nimport {ILine} from '../line/types';\nimport {LINE_EVENT_KEYS} from '../../Events/types';\nimport * as utils from '../../common/Utils';\n\nconst webex = getTestUtilsWebex();\nconst defaultServiceIndicator = ServiceIndicator.CALLING;\n\nconst mediaEvent = {\n  id: '73e6a2b2-968c-44ea-a536-e7702722f8d8',\n  data: {\n    message: {\n      messageType: 'OFFER',\n      sdp: 'v=0\\r\\no=BroadWorks 175625 1653906127914 IN IP4 207.182.171.180\\r\\ns=-\\r\\nc=IN IP4 207.182.171.180\\r\\nt=0 0\\r\\na=ice-lite\\r\\nm=audio 19564 UDP/TLS/RTP/SAVPF 99 9 0 8 18 102 101\\r\\na=sendrecv\\r\\na=rtpmap:99 opus/48000/2\\r\\na=rtpmap:9 G722/8000\\r\\na=rtpmap:0 PCMU/8000\\r\\na=rtpmap:8 PCMA/8000\\r\\na=rtpmap:18 G729/8000\\r\\na=fmtp:18 annexb=no\\r\\na=rtpmap:102 iLBC/8000\\r\\na=fmtp:102 mode=30\\r\\na=rtpmap:101 telephone-event/8000\\r\\na=rtcp-mux\\r\\na=setup:actpass\\r\\na=ssrc:379289707 cname:HC3h2tromqGgnGaf\\r\\na=ice-ufrag:mLbW\\r\\na=ice-pwd:Hct9MYtML1sedttd8fLCg9aJ\\r\\na=fingerprint:sha-256 5E:F5:3D:98:57:03:D7:73:8F:C3:D4:FC:EC:FE:7F:4D:04:D8:EE:2A:29:C4:9F:35:C5:0F:D1:2D:CE:E4:AE:AA\\r\\na=candidate:mse 1 UDP 2130706431 207.182.171.180 19564 typ host\\r\\na=candidate:mse 2 UDP 2130706430 207.182.171.180 19565 typ host',\n      seq: 1,\n      version: '2',\n    },\n    callId: 'f2e89262-7d9a-489f-b65d-3b56a31c7bfe',\n    callUrl:\n      '[https://wdm-intb.ciscospark.com/wdm/api/v1/devices/14ef3832-a7af-4457-a660-fd1918d627d0]',\n    deviceId: '375b8503-f716-3407-853b-cd9a8c4419a7',\n    correlationId: '',\n    eventType: 'mobius.media',\n  },\n  timestamp: 1653906128188,\n  trackingId: 'ROUTER_62949AD0-DB6E-01BB-595A-03158964595A',\n  alertType: 'full',\n  headers: {},\n  sequenceNumber: 7,\n  filterMessage: false,\n};\n\nconst setupEvent = {\n  id: '3ee919c7-202d-4f8c-9b74-e5ee8a693dfa',\n  data: {\n    callerId: {\n      'x-broadworks-remote-party-info':\n        'userId=\"hkkcq0ekby@64941297.int10.bcld.webex.com\";userDn=\"tel:+12142865895;ext=5008;country-code=1\";externalId=652fe0c7-05ce-4acd-8bda-9a080830187f',\n      from: '\"Bob Marley\" <sip:5008@207.182.171.130;user=phone>;tag=379221777-1653906128003-',\n    },\n    callId: 'f2e89262-7d9a-489f-b65d-3b56a31c7bfe',\n    callUrl:\n      '[https://wdm-intb.ciscospark.com/wdm/api/v1/devices/14ef3832-a7af-4457-a660-fd1918d627d0]',\n    deviceId: '375b8503-f716-3407-853b-cd9a8c4419a7',\n    correlationId: '',\n    eventType: 'mobius.call',\n    broadworksCorrelationInfo: 'Sample_broadworksCorrelationInfo',\n  },\n  timestamp: 1653906128159,\n  trackingId: 'ROUTER_62949AD0-DB6E-01BB-595A-03158964595A',\n  alertType: 'full',\n  headers: {},\n  sequenceNumber: 6,\n  filterMessage: false,\n};\n\nconst disconnectEvent = {\n  id: 'f3e37504-5867-48ea-8d67-4e82b3ce1755',\n  data: {\n    causecode: 0,\n    cause: 'Normal disconnect',\n    callId: 'cbfe802c-cc8d-407f-863d-0abf8d6cc497',\n    callUrl:\n      '[https://wdm-intb.ciscospark.com/wdm/api/v1/devices/5691641c-7f0c-47a4-b248-e585ebcf653d]',\n    deviceId: 'b9270663-54c8-3540-b01f-ed807dc5f9e8',\n    correlationId: '',\n    eventType: 'mobius.calldisconnected',\n  },\n  timestamp: 1653925625934,\n  trackingId: 'NA_fe7efbbc-de52-438c-a6c3-58e96db230ba',\n  alertType: 'full',\n  headers: {},\n  sequenceNumber: 6,\n  filterMessage: false,\n};\nconst deviceId = '55dfb53f-bed2-36da-8e85-cee7f02aa68e';\nconst dest = {\n  type: CallType.URI,\n  address: 'tel:5003',\n};\n\nconst successResponseBody = {\n  statusCode: 200,\n  body: {\n    device: {\n      deviceId: '8a67806f-fc4d-446b-a131-31e71ea5b010',\n      correlationId: '8a67806f-fc4d-446b-a131-31e71ea5b011',\n    },\n    callId: '8a67806f-fc4d-446b-a131-31e71ea5b020',\n    callData: {\n      callState: MobiusCallState.PROCEEDING,\n    },\n  },\n};\n\nconst mockLineId = 'e4e8ee2a-a154-4e52-8f11-ef4cde2dce72';\nconst mockLine = {\n  lineId: mockLineId,\n} as ILine;\n\ndescribe('Call Manager Tests with respect to calls', () => {\n  const dummyResponse = {\n    statusCode: 200,\n    body: {\n      device: {\n        deviceId: '8a67806f-fc4d-446b-a131-31e71ea5b010',\n        correlationId: '8a67806f-fc4d-446b-a131-31e71ea5b011',\n      },\n    },\n  };\n\n  const patchMock = jest.spyOn(Call.prototype as any, 'patch');\n  const setDisconnectReasonMock = jest.spyOn(Call.prototype as any, 'setDisconnectReason');\n  const deleteCallMock = jest.spyOn(Call.prototype as any, 'delete');\n  const initMediaConnectionMock = jest.spyOn(Call.prototype as any, 'initMediaConnection');\n  const mediaRoapEventsListenerMock = jest.spyOn(Call.prototype as any, 'mediaRoapEventsListener');\n  const mediaTrackListenerMock = jest.spyOn(Call.prototype as any, 'mediaTrackListener');\n  const postMediaMock = jest.spyOn(Call.prototype as any, 'postMedia');\n\n  deleteCallMock.mockResolvedValue(dummyResponse); // Both are using dummy response\n  setDisconnectReasonMock.mockReturnValue({});\n  initMediaConnectionMock.mockReturnValue({});\n  mediaRoapEventsListenerMock.mockReturnValue({});\n  mediaTrackListenerMock.mockReturnValue({});\n  postMediaMock.mockResolvedValue({});\n\n  let callManager: ICallManager;\n\n  beforeEach(() => {\n    callManager = getCallManager(webex, defaultServiceIndicator);\n    callManager.removeAllListeners(LINE_EVENT_KEYS.INCOMING_CALL);\n    /* expect 0 calls at the beginning of each test as we are clearing calls at the end of every test case */\n    expect(Object.keys(callManager.getActiveCalls()).length).toBe(0);\n  });\n\n  afterEach(() => {\n    /* lets clear all calls at the end of every test case */\n    const calls = Object.values(callManager.getActiveCalls());\n\n    calls.forEach((call) => {\n      call.end();\n    });\n  });\n\n  it('check instance of call manager', () => {\n    expect(callManager).toBeTruthy();\n  });\n\n  it('Check whether callManager is singleton', () => {\n    const callManagerNew = getCallManager(webex, defaultServiceIndicator);\n\n    expect(callManager).toMatchObject(callManagerNew);\n  });\n\n  it('create a call using call manager', async () => {\n    callManager.updateLine('8a67806f-fc4d-446b-a131-31e71ea5b010', mockLine);\n    webex.request.mockReturnValueOnce({\n      statusCode: 200,\n      body: {\n        device: {\n          deviceId: '8a67806f-fc4d-446b-a131-31e71ea5b010',\n          correlationId: '8a67806f-fc4d-446b-a131-31e71ea5b011',\n        },\n        callId: '8a67806f-fc4d-446b-a131-31e71ea5b020',\n        callData: {\n          callState: MobiusCallState.PROCEEDING,\n        },\n      },\n    });\n\n    const logSpy = jest.spyOn(log, 'log');\n\n    expect(callManager).toBeTruthy();\n    const call = await callManager.createCall(CallDirection.OUTBOUND, deviceId, mockLineId, dest);\n\n    call.setCallId('8a67806f-fc4d-446b-a131-31e71ea5b020');\n\n    expect(call).toBeTruthy();\n    expect(call.getCallId()).toStrictEqual('8a67806f-fc4d-446b-a131-31e71ea5b020');\n    expect(call.lineId).toStrictEqual(mockLineId);\n    expect(logSpy).toHaveBeenCalledWith('Creating call object', {});\n  });\n\n  it('Accept an incoming call from Mobius where Call Setup was the first message', async () => {\n    callManager.updateLine('375b8503-f716-3407-853b-cd9a8c4419a7', mockLine);\n    callManager.on(LINE_EVENT_KEYS.INCOMING_CALL, (callObj: ICall) => {\n      expect(callObj.getCallId()).toStrictEqual(setupEvent.data.callId);\n      expect(callObj.getBroadworksCorrelationInfo()).toStrictEqual(\n        setupEvent.data.broadworksCorrelationInfo\n      );\n      expect(callObj.lineId).toStrictEqual(mockLineId);\n    });\n    patchMock.mockResolvedValue(dummyResponse);\n\n    await callManager['dequeueWsEvents'](setupEvent);\n    await waitForMsecs(50);\n    await callManager['dequeueWsEvents'](mediaEvent);\n    await waitForMsecs(50);\n\n    expect(patchMock).toHaveBeenCalledWith(MobiusCallState.ALERTING);\n    /* setUp event should create the call and count will be 1 for new call */\n    expect(Object.keys(callManager.getActiveCalls()).length).toBe(1);\n  });\n\n  it('Accept an incoming call from Mobius where Media Event was the first message', async () => {\n    callManager.updateLine('8a67806f-fc4d-446b-a131-31e71ea5b010', mockLine);\n    patchMock.mockResolvedValue(dummyResponse);\n    callManager.on(LINE_EVENT_KEYS.INCOMING_CALL, (callObj: ICall) => {\n      expect(callObj.getCallId()).toStrictEqual(setupEvent.data.callId);\n      expect(callObj['remoteRoapMessage'].sdp).toStrictEqual(mediaEvent.data.message.sdp);\n    });\n\n    await callManager['dequeueWsEvents'](mediaEvent);\n    /* check whether SDP is buffered */\n    await callManager['dequeueWsEvents'](setupEvent);\n    expect(patchMock).toHaveBeenCalledWith(MobiusCallState.ALERTING);\n    expect(Object.keys(callManager.getActiveCalls()).length).toBe(1);\n  });\n\n  it('Disconnect a call if received a Call Disconnect event', async () => {\n    webex.request.mockReturnValueOnce(successResponseBody);\n\n    /* lets add a call to disconnect it later */\n    const call = await callManager.createCall(dest, CallDirection.OUTBOUND, deviceId, mockLineId);\n\n    expect(Object.keys(callManager.getActiveCalls()).length).toBe(1);\n    /* clear the last added call */\n\n    patchMock.mockResolvedValue(dummyResponse);\n    disconnectEvent.data.correlationId = call.getCorrelationId();\n    callManager['dequeueWsEvents'](disconnectEvent);\n\n    /* Add a small delay , to simulate sending of Delete request and clearing from Call records */\n    await waitForMsecs(50);\n\n    expect(deleteCallMock).toHaveBeenCalled();\n    expect(Object.keys(callManager.getActiveCalls()).length).toBe(0);\n  });\n\n  it('Do not Disconnect a call if call has been disconnected already', async () => {\n    webex.request.mockReturnValueOnce(successResponseBody);\n\n    /* lets add a call to disconnect it later */\n    await callManager.createCall(CallDirection.OUTBOUND, deviceId, mockLineId, dest);\n\n    expect(Object.keys(callManager.getActiveCalls()).length).toBe(1);\n    /* clear the last added call */\n\n    patchMock.mockResolvedValue(dummyResponse);\n    disconnectEvent.data.correlationId = '1234';\n    callManager['dequeueWsEvents'](disconnectEvent);\n\n    /* Add a small delay , to simulate sending of Delete request and clearing from Call records */\n    await waitForMsecs(50);\n\n    expect(deleteCallMock).not.toHaveBeenCalled();\n    expect(Object.keys(callManager.getActiveCalls()).length).toBe(1);\n  });\n\n  it('Accept an incoming call but Outgoing patch request fails', async () => {\n    callManager.updateLine('8a67806f-fc4d-446b-a131-31e71ea5b010', mockLine);\n    /* Intentionally failing the Patch with 503 */\n    dummyResponse.statusCode = 503;\n    patchMock.mockRejectedValue(dummyResponse);\n\n    const errorSpy = jest.spyOn(log, 'error');\n    const logSpy = jest.spyOn(log, 'log');\n    const uploadLogsSpy = jest.spyOn(utils, 'uploadLogs').mockResolvedValue();\n\n    await callManager['dequeueWsEvents'](mediaEvent);\n    await waitForMsecs(50);\n    await callManager['dequeueWsEvents'](setupEvent);\n    await waitForMsecs(50);\n\n    expect(patchMock).toHaveBeenCalledWith(MobiusCallState.ALERTING);\n    expect(errorSpy).toHaveBeenCalledWith(\n      Error(`Failed to signal call progression: ${dummyResponse}`),\n      {\n        file: 'call',\n        method: 'handleOutgoingCallAlerting',\n      }\n    );\n    expect(logSpy).toHaveBeenCalledWith(\n      `Received call media mobiusEvent for call: ${mediaEvent.data.correlationId}`,\n      expect.objectContaining({\n        file: 'callManager',\n        method: 'dequeueWsEvents',\n      })\n    );\n    expect(logSpy).toHaveBeenCalledWith(\n      `ROAP message from mobius with type:  ${mediaEvent.data.message?.messageType}, seq: ${mediaEvent.data.message?.seq} , version: ${mediaEvent.data.message?.version}`,\n      expect.objectContaining({\n        file: 'callManager',\n        method: 'dequeueWsEvents',\n      })\n    );\n    expect(uploadLogsSpy).toHaveBeenCalled();\n    /* No calls should have been added as call progress failed */\n    expect(Object.keys(callManager.getActiveCalls()).length).toBe(0);\n  });\n\n  it('Walk through an End to End call', async () => {\n    callManager.updateLine('8a67806f-fc4d-446b-a131-31e71ea5b010', mockLine);\n    let call: ICall;\n\n    callManager.on(LINE_EVENT_KEYS.INCOMING_CALL, async (callObj: ICall) => {\n      expect(callObj.getCallId()).toStrictEqual(setupEvent.data.callId);\n      call = callObj;\n      await waitForMsecs(50);\n\n      const mediaSpy = jest.spyOn(call['mediaConnection'], 'roapMessageReceived');\n      const mediaClose = jest.spyOn(call['mediaConnection'], 'close').mockReturnValue({});\n\n      expect(Object.keys(callManager.getActiveCalls()).length).toBe(3);\n      expect(call['callStateMachine'].state.value).toStrictEqual('S_SEND_CALL_PROGRESS');\n      expect(patchMock).toHaveBeenCalledWith(MobiusCallState.ALERTING);\n\n      /* Receive ROAP Offer */\n      await callManager['dequeueWsEvents'](mediaEvent);\n      await waitForMsecs(50);\n      expect(call['mediaStateMachine'].state.value).toStrictEqual('S_RECV_ROAP_OFFER');\n\n      const track = {} as MediaStreamTrack;\n\n      /* User answers the call */\n      await call.answer({localAudioTrack: track});\n      await waitForMsecs(50);\n\n      expect(call['callStateMachine'].state.value).toStrictEqual('S_SEND_CALL_CONNECT');\n      expect(patchMock).toHaveBeenCalledWith(MobiusCallState.CONNECTED);\n      expect(mediaSpy).toHaveBeenCalled(); /* We pass the offer to media connection */\n\n      /* We are manually sending this event , ideally it will sent by MediaConnection. */\n      call['sendMediaStateMachineEvt']({type: 'E_SEND_ROAP_ANSWER'});\n\n      await waitForMsecs(50);\n      expect(call['mediaStateMachine'].state.value).toStrictEqual('S_SEND_ROAP_ANSWER');\n\n      /* Simulate ROAP_OK */\n      mediaEvent.data.message.messageType = 'OK';\n      await callManager['dequeueWsEvents'](mediaEvent);\n      await waitForMsecs(50);\n\n      expect(mediaSpy).toHaveBeenCalled();\n      expect(call['mediaStateMachine'].state.value).toStrictEqual('S_ROAP_OK');\n      expect(call['callStateMachine'].state.value).toStrictEqual('S_CALL_ESTABLISHED');\n\n      /* Simulate ROAP Offer_request */\n      mediaEvent.data.message.messageType = 'OFFER_REQUEST';\n      await callManager['dequeueWsEvents'](mediaEvent);\n      await waitForMsecs(50);\n      expect(mediaSpy).toHaveBeenCalled();\n\n      /* We are manually sending this event , ideally it will sent by Media Connection. */\n      call['sendMediaStateMachineEvt']({type: 'E_SEND_ROAP_OFFER'});\n\n      expect(call['mediaStateMachine'].state.value).toStrictEqual('S_SEND_ROAP_OFFER');\n\n      /* Simulate ROAP Answer */\n      mediaEvent.data.message.messageType = 'ANSWER';\n      await callManager['dequeueWsEvents'](mediaEvent);\n      await waitForMsecs(50);\n      expect(mediaSpy).toHaveBeenCalled();\n\n      expect(call['mediaStateMachine'].state.value).toStrictEqual('S_ROAP_OK');\n      expect(call['callStateMachine'].state.value).toStrictEqual('S_CALL_ESTABLISHED');\n\n      /* Start Call disconnect */\n      disconnectEvent.data.correlationId = call.getCorrelationId();\n      callManager['dequeueWsEvents'](disconnectEvent);\n      await waitForMsecs(50);\n\n      expect(deleteCallMock).toHaveBeenCalled();\n      expect(mediaClose).toHaveBeenCalled();\n      expect(call['mediaStateMachine'].state.value).toStrictEqual('S_ROAP_TEARDOWN');\n      expect(call['callStateMachine'].state.value).toStrictEqual('S_CALL_CLEARED');\n\n      expect(Object.keys(callManager.getActiveCalls()).length).toBe(2);\n    });\n\n    patchMock.mockResolvedValue(dummyResponse);\n    await callManager['dequeueWsEvents'](setupEvent);\n  });\n});\n\ndescribe('Coverage for Events listener', () => {\n  let callManager: ICallManager;\n  let call: ICall;\n  const dummyCallId = '8a67806f-fc4d-4469-a131-31e71ec5b011';\n\n  webex.request.mockReturnValueOnce({\n    statusCode: 200,\n    body: {\n      device: {\n        deviceId: '8a67806f-fc4d-446b-a131-31e71ea5b010',\n        correlationId: '8a67806f-fc4d-446b-a131-31e71ea5b011',\n      },\n      callId: '8a67806f-fc4d-446b-a131-31e71ea5b020',\n      callData: {\n        callState: MobiusCallState.PROCEEDING,\n      },\n    },\n  });\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n\n    callManager = getCallManager(webex, defaultServiceIndicator);\n    callManager.removeAllListeners(LINE_EVENT_KEYS.INCOMING_CALL);\n    call = callManager.createCall(CallDirection.OUTBOUND, deviceId, mockLineId, dest);\n    call.setCallId(dummyCallId);\n    setupEvent.data.correlationId = call.getCorrelationId();\n  });\n\n  const funcSpy = jest.spyOn(Call.prototype as any, 'sendMediaStateMachineEvt');\n  const callSpy = jest.spyOn(Call.prototype as any, 'sendCallStateMachineEvt');\n  const logSpy = jest.spyOn(log, 'log');\n\n  it('When Offer is received', async () => {\n    mediaEvent.data.callId = dummyCallId;\n    jest.clearAllMocks();\n    await callManager['dequeueWsEvents'](mediaEvent);\n    const eventData = {data: mediaEvent.data.message, type: 'E_RECV_ROAP_OFFER'};\n    expect(funcSpy).toHaveBeenCalledWith(eventData);\n  });\n\n  it('When Answer is received', async () => {\n    mediaEvent.data.message.messageType = 'ANSWER';\n    jest.clearAllMocks();\n\n    await callManager['dequeueWsEvents'](mediaEvent);\n\n    const eventData = {data: mediaEvent.data.message, type: 'E_RECV_ROAP_ANSWER'};\n\n    expect(funcSpy).toHaveBeenCalledWith(eventData);\n  });\n\n  it('When Offer Request is received', async () => {\n    mediaEvent.data.message.messageType = 'OFFER_REQUEST';\n    jest.clearAllMocks();\n    await callManager['dequeueWsEvents'](mediaEvent);\n\n    const eventData = {data: mediaEvent.data.message, type: 'E_RECV_ROAP_OFFER_REQUEST'};\n\n    expect(funcSpy).toHaveBeenCalledWith(eventData);\n  });\n\n  it('When OK is received', async () => {\n    mediaEvent.data.message.messageType = 'OK';\n    jest.clearAllMocks();\n    await callManager['dequeueWsEvents'](mediaEvent);\n\n    const mediaOK = {received: true, message: mediaEvent.data.message};\n    const eventData = {data: mediaOK, type: 'E_ROAP_OK'};\n\n    expect(funcSpy).toHaveBeenCalledWith(eventData);\n  });\n\n  it('When Error is Received', async () => {\n    mediaEvent.data.message.messageType = 'ERROR';\n    jest.clearAllMocks();\n    const infoSpy = jest.spyOn(log, 'info');\n    await callManager['dequeueWsEvents'](mediaEvent);\n\n    expect(logSpy).toHaveBeenCalledWith(\n      `Received call media mobiusEvent for call: ${mediaEvent.data.correlationId}`,\n      {\n        file: 'callManager',\n        method: 'dequeueWsEvents',\n      }\n    );\n    expect(logSpy).toHaveBeenCalledWith(\n      `ROAP message from mobius with type:  ${mediaEvent.data.message?.messageType}, seq: ${mediaEvent.data.message?.seq} , version: ${mediaEvent.data.message?.version}`,\n      {\n        file: 'callManager',\n        method: 'dequeueWsEvents',\n      }\n    );\n    expect(logSpy).toHaveBeenCalledWith('Received Error...', {\n      file: 'callManager',\n      method: 'dequeueWsEvents',\n    });\n    expect(infoSpy).toHaveBeenCalledWith(`SDP from mobius ${mediaEvent.data.message?.sdp}`, {\n      file: 'callManager',\n      method: 'dequeueWsEvents',\n    });\n  });\n\n  it('When Unknown event is Received', async () => {\n    mediaEvent.data.message.messageType = 'UNKNOWN';\n    jest.clearAllMocks();\n    const infoSpy = jest.spyOn(log, 'info');\n    await callManager['dequeueWsEvents'](mediaEvent);\n\n    expect(logSpy).toHaveBeenCalledWith(\n      `Received call media mobiusEvent for call: ${mediaEvent.data.correlationId}`,\n      {\n        file: 'callManager',\n        method: 'dequeueWsEvents',\n      }\n    );\n    expect(logSpy).toHaveBeenCalledWith(\n      `ROAP message from mobius with type:  ${mediaEvent.data.message?.messageType}, seq: ${mediaEvent.data.message?.seq} , version: ${mediaEvent.data.message?.version}`,\n      {\n        file: 'callManager',\n        method: 'dequeueWsEvents',\n      }\n    );\n    expect(logSpy).toHaveBeenCalledWith('Unknown Media mobiusEvent: UNKNOWN ', {\n      file: 'callManager',\n      method: 'dequeueWsEvents',\n    });\n    expect(infoSpy).toHaveBeenCalledWith(`SDP from mobius ${mediaEvent.data.message?.sdp}`, {\n      file: 'callManager',\n      method: 'dequeueWsEvents',\n    });\n  });\n\n  it('When Progress/Connect event is Received', async () => {\n    setupEvent.data.eventType = 'mobius.callprogress';\n    await callManager['dequeueWsEvents'](setupEvent);\n    expect(callSpy).toHaveBeenCalledWith({type: 'E_RECV_CALL_PROGRESS', data: setupEvent.data});\n  });\n\n  it('Silently discard an event in the state machine', async () => {\n    call['callStateMachine'].state.value = 'S_SEND_CALL_CONNECT';\n    expect(call['callStateMachine'].state.value).toStrictEqual('S_SEND_CALL_CONNECT');\n\n    const connectEvent = JSON.parse(JSON.stringify(setupEvent));\n\n    connectEvent.data.eventType = 'mobius.callconnected';\n    await callManager['dequeueWsEvents'](connectEvent);\n\n    /* There should not be any state change */\n    expect(call['callStateMachine'].state.value).toStrictEqual('S_SEND_CALL_CONNECT');\n  });\n\n  it('Silently discard an ROAP_ANSWER after being in ROAP_OK state', async () => {\n    call['mediaStateMachine'].state.value = 'S_ROAP_OK';\n    expect(call['mediaStateMachine'].state.value).toStrictEqual('S_ROAP_OK');\n\n    const answerEvent = JSON.parse(JSON.stringify(mediaEvent));\n\n    answerEvent.data.message.messageType = 'ANSWER';\n    await callManager['dequeueWsEvents'](answerEvent);\n\n    /* There should not be any state change */\n    expect(call['mediaStateMachine'].state.value).toStrictEqual('S_ROAP_OK');\n  });\n\n  it('When Unknown Call event is Received', async () => {\n    setupEvent.data.eventType = 'mobius.callunknown';\n    jest.clearAllMocks();\n    await callManager['dequeueWsEvents'](setupEvent);\n\n    expect(logSpy).toHaveBeenCalledWith('Unknown Call Event mobiusEvent: mobius.callunknown', {\n      file: 'callManager',\n      method: 'dequeueWsEvents',\n    });\n  });\n});\n"],"mappings":"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"}