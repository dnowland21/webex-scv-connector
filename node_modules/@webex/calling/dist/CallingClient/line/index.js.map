{"version":3,"names":["_uuid","require","_types","_types2","_constants","_Logger","_interopRequireDefault","_registration","_impl","_LineError","_common","_SDKConnector","_types3","_callManager","_types4","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","_classPrivateFieldInitSpec","obj","privateMap","value","_checkPrivateRedeclaration","set","privateCollection","has","TypeError","_webex","_weakMap","_mutex","_sdkConnector","_primaryMobiusUris","_backupMobiusUris","Line","exports","_Eventing","_inherits2","_super","userId","clientDeviceUri","mutex","primaryMobiusUris","backupMobiusUris","logLevel","serviceDataConfig","jwe","phoneNumber","extension","voicemail","_this","_classCallCheck2","_assertThisInitialized2","writable","_defineProperty2","event","deviceInfo","lineError","LINE_EVENTS","REGISTERED","normalizeLine","emit","UNREGISTERED","RECONNECTED","RECONNECTING","ERROR","registration","getStatus","_this$registration$ge","getDeviceInfo","device","deviceId","dest","match","address","VALID_PHONE_REGEX","length","_this$registration$ge2","sanitizedNumber","replace","formattedDest","type","concat","callManager","createCall","CallDirection","OUTBOUND","lineId","log","getCallId","warn","err","LineError","ERROR_TYPE","CALL_ERROR","RegistrationStatus","ACTIVE","serviceData","indicator","ServiceIndicator","GUEST_CALLING","_this$registration$ge3","undefined","correlationId","getCall","uuid","_classPrivateFieldSet2","SDKConnector","_classPrivateFieldGet2","getWebex","CALLING","domain","validateServiceData","createRegistration","lineEmitter","setLogger","LINE_FILE","getCallManager","incomingCallListener","_createClass2","key","_register","_asyncToGenerator2","_regenerator","mark","_callee2","_this2","wrap","_callee2$","_context2","prev","next","runExclusive","_callee","_callee$","_context","CONNECTING","setMobiusServers","triggerRegistration","stop","mobiusDeviceId","updateLine","register","_deregister","_callee3","_callee3$","_context3","deregister","setStatus","IDLE","_device$addresses","keepaliveInterval","callKeepaliveInterval","rehomingIntervalMin","rehomingIntervalMax","voicePortalNumber","voicePortalExtension","mobiusUri","uri","lastSeen","sipAddresses","addresses","getLoggingLevel","getLogLevel","getActiveMobiusUrl","_this3","logContext","file","method","name","on","LINE_EVENT_KEYS","INCOMING_CALL","callObj","Eventing"],"sources":["index.ts"],"sourcesContent":["import {Mutex} from 'async-mutex';\nimport {v4 as uuid} from 'uuid';\nimport {\n  CallDetails,\n  CallDirection,\n  CorrelationId,\n  IDeviceInfo,\n  MobiusDeviceId,\n  RegistrationStatus,\n  ServiceData,\n  ServiceIndicator,\n} from '../../common/types';\nimport {ILine, LINE_EVENTS} from './types';\nimport {LINE_FILE, VALID_PHONE_REGEX} from '../constants';\nimport log from '../../Logger';\nimport {IRegistration} from '../registration/types';\nimport {createRegistration} from '../registration';\nimport {ISDKConnector, WebexSDK} from '../../SDKConnector/types';\nimport {CallingClientConfig} from '../types';\nimport {Eventing} from '../../Events/impl';\nimport {LineError} from '../../Errors/catalog/LineError';\nimport {LOGGER} from '../../Logger/types';\nimport {validateServiceData} from '../../common';\nimport SDKConnector from '../../SDKConnector';\nimport {LINE_EVENT_KEYS, LineEventTypes} from '../../Events/types';\nimport {ICall, ICallManager} from '../calling/types';\nimport {getCallManager} from '../calling/callManager';\nimport {ERROR_TYPE} from '../../Errors/types';\n\nexport default class Line extends Eventing<LineEventTypes> implements ILine {\n  #webex: WebexSDK;\n\n  #mutex: Mutex;\n\n  #sdkConnector: ISDKConnector;\n\n  public registration: IRegistration;\n\n  public userId: string;\n\n  public clientDeviceUri: string;\n\n  public lineId: string;\n\n  public mobiusDeviceId?: string;\n\n  private mobiusUri?: string;\n\n  public phoneNumber?: string;\n\n  public extension?: string;\n\n  public sipAddresses: string[] = [];\n\n  public voicemail?: string;\n\n  public lastSeen?: string;\n\n  public keepaliveInterval?: number;\n\n  public callKeepaliveInterval?: number;\n\n  public rehomingIntervalMin?: number;\n\n  public rehomingIntervalMax?: number;\n\n  public voicePortalNumber?: number;\n\n  public voicePortalExtension?: number;\n\n  private callManager: ICallManager;\n\n  private serviceData: ServiceData;\n\n  #primaryMobiusUris: string[];\n\n  #backupMobiusUris: string[];\n\n  constructor(\n    userId: string,\n    clientDeviceUri: string,\n    mutex: Mutex,\n    primaryMobiusUris: string[],\n    backupMobiusUris: string[],\n    logLevel: LOGGER,\n    serviceDataConfig?: CallingClientConfig['serviceData'],\n    jwe?: string,\n    phoneNumber?: string,\n    extension?: string,\n    voicemail?: string\n  ) {\n    super();\n    this.lineId = uuid();\n    this.userId = userId;\n    this.clientDeviceUri = clientDeviceUri;\n    this.phoneNumber = phoneNumber;\n    this.extension = extension;\n    this.voicemail = voicemail;\n\n    this.#sdkConnector = SDKConnector;\n    this.#webex = this.#sdkConnector.getWebex();\n    this.#mutex = mutex;\n\n    this.#primaryMobiusUris = primaryMobiusUris;\n    this.#backupMobiusUris = backupMobiusUris;\n\n    this.serviceData = serviceDataConfig?.indicator\n      ? serviceDataConfig\n      : {indicator: ServiceIndicator.CALLING, domain: ''};\n\n    validateServiceData(this.serviceData);\n\n    this.registration = createRegistration(\n      this.#webex,\n      this.serviceData,\n      this.#mutex,\n      this.lineEmitter,\n      logLevel,\n      jwe\n    );\n\n    log.setLogger(logLevel, LINE_FILE);\n\n    this.callManager = getCallManager(this.#webex, this.serviceData.indicator);\n\n    this.incomingCallListener();\n  }\n\n  /**\n   * Wrapper to for device registration.\n   */\n  public async register() {\n    await this.#mutex.runExclusive(async () => {\n      this.emit(LINE_EVENTS.CONNECTING);\n\n      this.registration.setMobiusServers(this.#primaryMobiusUris, this.#backupMobiusUris);\n      await this.registration.triggerRegistration();\n    });\n    if (this.mobiusDeviceId) {\n      this.callManager.updateLine(this.mobiusDeviceId, this);\n    }\n  }\n\n  /**\n   * Wrapper to for device  deregister.\n   */\n  public async deregister() {\n    await this.registration.deregister();\n    this.registration.setStatus(RegistrationStatus.IDLE);\n  }\n\n  /**\n   * To normalize line class with Mobius response\n   */\n  private normalizeLine(deviceInfo: IDeviceInfo) {\n    const {\n      device,\n      keepaliveInterval,\n      callKeepaliveInterval,\n      rehomingIntervalMin,\n      rehomingIntervalMax,\n      voicePortalNumber,\n      voicePortalExtension,\n    } = deviceInfo;\n\n    this.mobiusDeviceId = device?.deviceId;\n    this.mobiusUri = device?.uri;\n    this.lastSeen = device?.lastSeen;\n    this.sipAddresses = device?.addresses ?? [];\n    this.keepaliveInterval = keepaliveInterval;\n    this.callKeepaliveInterval = callKeepaliveInterval;\n    this.rehomingIntervalMin = rehomingIntervalMin;\n    this.rehomingIntervalMax = rehomingIntervalMax;\n    this.voicePortalNumber = voicePortalNumber;\n    this.voicePortalExtension = voicePortalExtension;\n  }\n\n  /**\n   * Line events emitter\n   */\n  public lineEmitter = (event: LINE_EVENTS, deviceInfo?: IDeviceInfo, lineError?: LineError) => {\n    switch (event) {\n      case LINE_EVENTS.REGISTERED:\n        if (deviceInfo) {\n          this.normalizeLine(deviceInfo);\n          this.emit(event, this);\n        }\n        break;\n      case LINE_EVENTS.UNREGISTERED:\n      case LINE_EVENTS.RECONNECTED:\n      case LINE_EVENTS.RECONNECTING:\n        this.emit(event);\n        break;\n      case LINE_EVENTS.ERROR:\n        if (lineError) {\n          this.emit(event, lineError);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  /**\n   * To get the current log Level.\n   */\n  public getLoggingLevel(): LOGGER {\n    return log.getLogLevel();\n  }\n\n  /**\n   *  To get active url of Mobius.\n   */\n  public getActiveMobiusUrl(): string {\n    return this.registration.getActiveMobiusUrl();\n  }\n\n  /**\n   * Gets registration status\n   */\n  public getStatus = (): RegistrationStatus => this.registration.getStatus();\n\n  /**\n   * Gets device id\n   */\n  public getDeviceId = (): MobiusDeviceId | undefined =>\n    this.registration.getDeviceInfo().device?.deviceId;\n\n  /**\n   * Initiates a call to the specified destination.\n   * @param dest - The call details including destination information.\n   */\n  public makeCall = (dest?: CallDetails): ICall | undefined => {\n    let call;\n\n    if (dest) {\n      const match = dest.address.match(VALID_PHONE_REGEX);\n\n      if (match && match[0].length === dest.address.length) {\n        const sanitizedNumber = dest.address\n          .replace(/[^[*+]\\d#]/gi, '')\n          .replace(/\\s+/gi, '')\n          .replace(/-/gi, '');\n        const formattedDest = {\n          type: dest.type,\n          address: `tel:${sanitizedNumber}`,\n        };\n\n        call = this.callManager.createCall(\n          CallDirection.OUTBOUND,\n          this.registration.getDeviceInfo().device?.deviceId as string,\n          this.lineId,\n          formattedDest\n        );\n        log.log(`New call created, callId: ${call.getCallId()}`, {});\n      } else {\n        log.warn('Invalid phone number detected', {});\n\n        const err = new LineError(\n          'An invalid phone number was detected. Check the number and try again.',\n          {},\n          ERROR_TYPE.CALL_ERROR,\n          RegistrationStatus.ACTIVE\n        );\n\n        this.emit(LINE_EVENTS.ERROR, err);\n      }\n\n      return call;\n    }\n    if (this.serviceData.indicator === ServiceIndicator.GUEST_CALLING) {\n      call = this.callManager.createCall(\n        CallDirection.OUTBOUND,\n        this.registration.getDeviceInfo().device?.deviceId as string,\n        this.lineId\n      );\n      log.log(`New guest call created, callId: ${call.getCallId()}`, {});\n\n      return call;\n    }\n\n    return undefined;\n  };\n\n  /**\n   * An Incoming Call listener.\n   */\n  private incomingCallListener() {\n    const logContext = {\n      file: LINE_FILE,\n      method: this.incomingCallListener.name,\n    };\n    log.log('Listening for incoming calls... ', logContext);\n    this.callManager.on(LINE_EVENT_KEYS.INCOMING_CALL, (callObj: ICall) => {\n      this.emit(LINE_EVENTS.INCOMING_CALL, callObj);\n    });\n  }\n\n  /**\n   * @param callId -.\n   * @param correlationId -.\n   */\n  public getCall = (correlationId: CorrelationId): ICall => {\n    return this.callManager.getCall(correlationId);\n  };\n}\n"],"mappings":"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"}