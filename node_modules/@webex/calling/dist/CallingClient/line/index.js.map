{"version":3,"names":["_uuid","require","_constants","_types","_types2","_constants2","_Logger","_interopRequireDefault","_registration","_impl","_LineError","_common","_SDKConnector","_types3","_callManager","_types4","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","_classPrivateFieldInitSpec","obj","privateMap","value","_checkPrivateRedeclaration","set","privateCollection","has","TypeError","_webex","_weakMap","_mutex","_sdkConnector","_primaryMobiusUris","_backupMobiusUris","Line","exports","_Eventing","_inherits2","_super","userId","clientDeviceUri","mutex","primaryMobiusUris","backupMobiusUris","logLevel","serviceDataConfig","jwe","phoneNumber","extension","voicemail","_this","_classCallCheck2","_assertThisInitialized2","writable","_defineProperty2","event","deviceInfo","lineError","log","info","METHOD_START_MESSAGE","file","LINE_FILE","method","METHODS","LINE_EMITTER","LINE_EVENTS","REGISTERED","normalizeLine","emit","UNREGISTERED","RECONNECTED","RECONNECTING","ERROR","registration","getStatus","_this$registration$ge","getDeviceInfo","device","deviceId","dest","MAKE_CALL","match","address","VALID_PHONE_REGEX","length","_this$registration$ge2","_call","sanitizedNumber","replace","formattedDest","type","concat","callManager","createCall","CallDirection","OUTBOUND","lineId","getCallId","warn","err","LineError","ERROR_TYPE","CALL_ERROR","RegistrationStatus","ACTIVE","serviceData","indicator","ServiceIndicator","GUEST_CALLING","_this$registration$ge3","undefined","correlationId","getCall","uuid","_classPrivateFieldSet2","SDKConnector","_classPrivateFieldGet2","getWebex","CALLING","domain","validateServiceData","createRegistration","lineEmitter","setLogger","getCallManager","incomingCallListener","_createClass2","key","_register","_asyncToGenerator2","_regenerator","mark","_callee2","_this2","wrap","_callee2$","_context2","prev","next","REGISTER","runExclusive","_callee","_callee$","_context","CONNECTING","setMobiusServers","triggerRegistration","stop","mobiusDeviceId","updateLine","register","_deregister","_callee3","_callee3$","_context3","DEREGISTER","deregister","setStatus","IDLE","_device$addresses","keepaliveInterval","callKeepaliveInterval","rehomingIntervalMin","rehomingIntervalMax","voicePortalNumber","voicePortalExtension","mobiusUri","uri","lastSeen","sipAddresses","addresses","getLoggingLevel","getLogLevel","getActiveMobiusUrl","_this3","INCOMING_CALL_LISTENER","on","LINE_EVENT_KEYS","INCOMING_CALL","callObj","Eventing"],"sources":["index.ts"],"sourcesContent":["import {Mutex} from 'async-mutex';\nimport {v4 as uuid} from 'uuid';\nimport {METHOD_START_MESSAGE} from '../../common/constants';\nimport {\n  CallDetails,\n  CallDirection,\n  CorrelationId,\n  IDeviceInfo,\n  MobiusDeviceId,\n  RegistrationStatus,\n  ServiceData,\n  ServiceIndicator,\n} from '../../common/types';\nimport {ILine, LINE_EVENTS} from './types';\nimport {LINE_FILE, METHODS, VALID_PHONE_REGEX} from '../constants';\nimport log from '../../Logger';\nimport {IRegistration} from '../registration/types';\nimport {createRegistration} from '../registration';\nimport {ISDKConnector, WebexSDK} from '../../SDKConnector/types';\nimport {CallingClientConfig} from '../types';\nimport {Eventing} from '../../Events/impl';\nimport {LineError} from '../../Errors/catalog/LineError';\nimport {LOGGER} from '../../Logger/types';\nimport {validateServiceData} from '../../common';\nimport SDKConnector from '../../SDKConnector';\nimport {LINE_EVENT_KEYS, LineEventTypes} from '../../Events/types';\nimport {ICall, ICallManager} from '../calling/types';\nimport {getCallManager} from '../calling/callManager';\nimport {ERROR_TYPE} from '../../Errors/types';\n\nexport default class Line extends Eventing<LineEventTypes> implements ILine {\n  #webex: WebexSDK;\n\n  #mutex: Mutex;\n\n  #sdkConnector: ISDKConnector;\n\n  public registration: IRegistration;\n\n  public userId: string;\n\n  public clientDeviceUri: string;\n\n  public lineId: string;\n\n  public mobiusDeviceId?: string;\n\n  private mobiusUri?: string;\n\n  public phoneNumber?: string;\n\n  public extension?: string;\n\n  public sipAddresses: string[] = [];\n\n  public voicemail?: string;\n\n  public lastSeen?: string;\n\n  public keepaliveInterval?: number;\n\n  public callKeepaliveInterval?: number;\n\n  public rehomingIntervalMin?: number;\n\n  public rehomingIntervalMax?: number;\n\n  public voicePortalNumber?: number;\n\n  public voicePortalExtension?: number;\n\n  private callManager: ICallManager;\n\n  private serviceData: ServiceData;\n\n  #primaryMobiusUris: string[];\n\n  #backupMobiusUris: string[];\n\n  constructor(\n    userId: string,\n    clientDeviceUri: string,\n    mutex: Mutex,\n    primaryMobiusUris: string[],\n    backupMobiusUris: string[],\n    logLevel: LOGGER,\n    serviceDataConfig?: CallingClientConfig['serviceData'],\n    jwe?: string,\n    phoneNumber?: string,\n    extension?: string,\n    voicemail?: string\n  ) {\n    super();\n    this.lineId = uuid();\n    this.userId = userId;\n    this.clientDeviceUri = clientDeviceUri;\n    this.phoneNumber = phoneNumber;\n    this.extension = extension;\n    this.voicemail = voicemail;\n\n    this.#sdkConnector = SDKConnector;\n    this.#webex = this.#sdkConnector.getWebex();\n    this.#mutex = mutex;\n\n    this.#primaryMobiusUris = primaryMobiusUris;\n    this.#backupMobiusUris = backupMobiusUris;\n\n    this.serviceData = serviceDataConfig?.indicator\n      ? serviceDataConfig\n      : {indicator: ServiceIndicator.CALLING, domain: ''};\n\n    validateServiceData(this.serviceData);\n\n    this.registration = createRegistration(\n      this.#webex,\n      this.serviceData,\n      this.#mutex,\n      this.lineEmitter,\n      logLevel,\n      jwe\n    );\n\n    log.setLogger(logLevel, LINE_FILE);\n\n    this.callManager = getCallManager(this.#webex, this.serviceData.indicator);\n\n    this.incomingCallListener();\n  }\n\n  /**\n   * Wrapper to for device registration.\n   */\n  public async register() {\n    log.info(METHOD_START_MESSAGE, {\n      file: LINE_FILE,\n      method: METHODS.REGISTER,\n    });\n    await this.#mutex.runExclusive(async () => {\n      this.emit(LINE_EVENTS.CONNECTING);\n\n      this.registration.setMobiusServers(this.#primaryMobiusUris, this.#backupMobiusUris);\n      await this.registration.triggerRegistration();\n    });\n    if (this.mobiusDeviceId) {\n      this.callManager.updateLine(this.mobiusDeviceId, this);\n    }\n  }\n\n  /**\n   * Wrapper to for device  deregister.\n   */\n  public async deregister() {\n    log.info(METHOD_START_MESSAGE, {\n      file: LINE_FILE,\n      method: METHODS.DEREGISTER,\n    });\n    await this.registration.deregister();\n    this.registration.setStatus(RegistrationStatus.IDLE);\n  }\n\n  /**\n   * To normalize line class with Mobius response\n   */\n  private normalizeLine(deviceInfo: IDeviceInfo) {\n    const {\n      device,\n      keepaliveInterval,\n      callKeepaliveInterval,\n      rehomingIntervalMin,\n      rehomingIntervalMax,\n      voicePortalNumber,\n      voicePortalExtension,\n    } = deviceInfo;\n\n    this.mobiusDeviceId = device?.deviceId;\n    this.mobiusUri = device?.uri;\n    this.lastSeen = device?.lastSeen;\n    this.sipAddresses = device?.addresses ?? [];\n    this.keepaliveInterval = keepaliveInterval;\n    this.callKeepaliveInterval = callKeepaliveInterval;\n    this.rehomingIntervalMin = rehomingIntervalMin;\n    this.rehomingIntervalMax = rehomingIntervalMax;\n    this.voicePortalNumber = voicePortalNumber;\n    this.voicePortalExtension = voicePortalExtension;\n  }\n\n  /**\n   * Line events emitter\n   */\n  public lineEmitter = (event: LINE_EVENTS, deviceInfo?: IDeviceInfo, lineError?: LineError) => {\n    log.info(METHOD_START_MESSAGE, {\n      file: LINE_FILE,\n      method: METHODS.LINE_EMITTER,\n    });\n    switch (event) {\n      case LINE_EVENTS.REGISTERED:\n        if (deviceInfo) {\n          this.normalizeLine(deviceInfo);\n          this.emit(event, this);\n        }\n        break;\n      case LINE_EVENTS.UNREGISTERED:\n      case LINE_EVENTS.RECONNECTED:\n      case LINE_EVENTS.RECONNECTING:\n        this.emit(event);\n        break;\n      case LINE_EVENTS.ERROR:\n        if (lineError) {\n          this.emit(event, lineError);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  /**\n   * To get the current log Level.\n   */\n  public getLoggingLevel(): LOGGER {\n    return log.getLogLevel();\n  }\n\n  /**\n   *  To get active url of Mobius.\n   */\n  public getActiveMobiusUrl(): string {\n    return this.registration.getActiveMobiusUrl();\n  }\n\n  /**\n   * Gets registration status\n   */\n  public getStatus = (): RegistrationStatus => this.registration.getStatus();\n\n  /**\n   * Gets device id\n   */\n  public getDeviceId = (): MobiusDeviceId | undefined =>\n    this.registration.getDeviceInfo().device?.deviceId;\n\n  /**\n   * Initiates a call to the specified destination.\n   * @param dest - The call details including destination information.\n   */\n  public makeCall = (dest?: CallDetails): ICall | undefined => {\n    log.info(METHOD_START_MESSAGE, {\n      file: LINE_FILE,\n      method: METHODS.MAKE_CALL,\n    });\n    let call;\n\n    if (dest) {\n      const match = dest.address.match(VALID_PHONE_REGEX);\n\n      if (match && match[0].length === dest.address.length) {\n        const sanitizedNumber = dest.address\n          .replace(/[^[*+]\\d#]/gi, '')\n          .replace(/\\s+/gi, '')\n          .replace(/-/gi, '');\n        const formattedDest = {\n          type: dest.type,\n          address: `tel:${sanitizedNumber}`,\n        };\n\n        call = this.callManager.createCall(\n          CallDirection.OUTBOUND,\n          this.registration.getDeviceInfo().device?.deviceId as string,\n          this.lineId,\n          formattedDest\n        );\n        log.log(`New call created, callId: ${call?.getCallId()}`, {\n          file: LINE_FILE,\n          method: METHODS.MAKE_CALL,\n        });\n      } else {\n        log.warn('Invalid phone number detected', {\n          file: LINE_FILE,\n          method: METHODS.MAKE_CALL,\n        });\n\n        const err = new LineError(\n          'An invalid phone number was detected. Check the number and try again.',\n          {},\n          ERROR_TYPE.CALL_ERROR,\n          RegistrationStatus.ACTIVE\n        );\n\n        this.emit(LINE_EVENTS.ERROR, err);\n      }\n\n      return call;\n    }\n    if (this.serviceData.indicator === ServiceIndicator.GUEST_CALLING) {\n      call = this.callManager.createCall(\n        CallDirection.OUTBOUND,\n        this.registration.getDeviceInfo().device?.deviceId as string,\n        this.lineId\n      );\n      log.info(`New guest call created, callId: ${call.getCallId()}`, {\n        file: LINE_FILE,\n        method: METHODS.MAKE_CALL,\n      });\n\n      return call;\n    }\n\n    return undefined;\n  };\n\n  /**\n   * An Incoming Call listener.\n   */\n  private incomingCallListener() {\n    log.info(METHOD_START_MESSAGE, {\n      file: LINE_FILE,\n      method: METHODS.INCOMING_CALL_LISTENER,\n    });\n    log.info('Listening for incoming calls... ', {\n      file: LINE_FILE,\n      method: METHODS.INCOMING_CALL_LISTENER,\n    });\n    this.callManager.on(LINE_EVENT_KEYS.INCOMING_CALL, (callObj: ICall) => {\n      this.emit(LINE_EVENTS.INCOMING_CALL, callObj);\n    });\n  }\n\n  /**\n   * @param callId -.\n   * @param correlationId -.\n   */\n  public getCall = (correlationId: CorrelationId): ICall => {\n    return this.callManager.getCall(correlationId);\n  };\n}\n"],"mappings":"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"}