"use strict";

var _Reflect$construct = require("@babel/runtime-corejs2/core-js/reflect/construct");
var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");
var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");
_Object$defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));
var _genericMetrics = _interopRequireDefault(require("./generic-metrics"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * @description Util class to handle Operational Metrics
 * @export
 * @class OperationalMetrics
 */
var OperationalMetrics = exports.default = /*#__PURE__*/function (_GenericMetrics) {
  (0, _inherits2.default)(OperationalMetrics, _GenericMetrics);
  var _super = _createSuper(OperationalMetrics);
  function OperationalMetrics() {
    (0, _classCallCheck2.default)(this, OperationalMetrics);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(OperationalMetrics, [{
    key: "submitOperationalEvent",
    value:
    /**
     * Submit an operational metric to our metrics endpoint.
     * @param {string} name of the metric
     * @param {EventPayload} user payload of the metric
     * @returns {Promise<any>}
     */
    function submitOperationalEvent(_ref) {
      var name = _ref.name,
        payload = _ref.payload;
      var event = this.createTaggedEventObject({
        type: ['operational'],
        name: name,
        payload: payload
      });
      this.submitEvent({
        kind: 'operational-events -> ',
        name: name,
        event: event
      });
    }
  }]);
  return OperationalMetrics;
}(_genericMetrics.default);
//# sourceMappingURL=operational-metrics.js.map
