"use strict";

var _Reflect$construct = require("@babel/runtime-corejs2/core-js/reflect/construct");
var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");
var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");
_Object$defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));
var _genericMetrics = _interopRequireDefault(require("./generic-metrics"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * @description Util class to handle Behavioral Metrics
 * @export
 * @class BehavioralMetrics
 */
var BehavioralMetrics = exports.default = /*#__PURE__*/function (_GenericMetrics) {
  (0, _inherits2.default)(BehavioralMetrics, _GenericMetrics);
  var _super = _createSuper(BehavioralMetrics);
  function BehavioralMetrics() {
    (0, _classCallCheck2.default)(this, BehavioralMetrics);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(BehavioralMetrics, [{
    key: "submitBehavioralEvent",
    value:
    /**
     * Submit a behavioral metric to our metrics endpoint.
     * @param {MetricEventProduct} product the product from which the metric is being submitted, e.g. 'webex' web client, 'wxcc_desktop'
     * @param {MetricEventAgent} agent the source of the action for this metric
     * @param {string} target the 'thing' that this metric includes information about
     * @param {MetricEventVerb} verb the action that this metric includes information about
     * @param {EventPayload} payload information specific to this event. This should be flat, i.e. it should not include nested objects.
     * @returns {Promise<any>}
     */
    function submitBehavioralEvent(_ref) {
      var product = _ref.product,
        agent = _ref.agent,
        target = _ref.target,
        verb = _ref.verb,
        payload = _ref.payload;
      var name = "".concat(product, ".").concat(agent, ".").concat(target, ".").concat(verb);
      var event = this.createTaggedEventObject({
        type: ['behavioral'],
        name: name,
        payload: payload
      });
      this.submitEvent({
        kind: 'behavioral-events -> ',
        name: name,
        event: event
      });
    }
  }]);
  return BehavioralMetrics;
}(_genericMetrics.default);
//# sourceMappingURL=behavioral-metrics.js.map
