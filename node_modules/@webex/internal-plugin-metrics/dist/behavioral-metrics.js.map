{"version":3,"names":["_genericMetrics","_interopRequireDefault","require","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","BehavioralMetrics","exports","_GenericMetrics","_inherits2","_super","_classCallCheck2","_createClass2","key","value","submitBehavioralEvent","_ref","product","agent","target","verb","payload","name","concat","event","createTaggedEventObject","type","submitEvent","kind","GenericMetrics"],"sources":["behavioral-metrics.ts"],"sourcesContent":["import {MetricEventProduct, MetricEventAgent, MetricEventVerb, EventPayload} from './metrics.types';\nimport GenericMetrics from './generic-metrics';\n\n/**\n * @description Util class to handle Behavioral Metrics\n * @export\n * @class BehavioralMetrics\n */\nexport default class BehavioralMetrics extends GenericMetrics {\n  /**\n   * Submit a behavioral metric to our metrics endpoint.\n   * @param {MetricEventProduct} product the product from which the metric is being submitted, e.g. 'webex' web client, 'wxcc_desktop'\n   * @param {MetricEventAgent} agent the source of the action for this metric\n   * @param {string} target the 'thing' that this metric includes information about\n   * @param {MetricEventVerb} verb the action that this metric includes information about\n   * @param {EventPayload} payload information specific to this event. This should be flat, i.e. it should not include nested objects.\n   * @returns {Promise<any>}\n   */\n  public submitBehavioralEvent({\n    product,\n    agent,\n    target,\n    verb,\n    payload,\n  }: {\n    product: MetricEventProduct;\n    agent: MetricEventAgent;\n    target: string;\n    verb: MetricEventVerb;\n    payload?: EventPayload;\n  }) {\n    const name = `${product}.${agent}.${target}.${verb}`;\n    const event = this.createTaggedEventObject({\n      type: ['behavioral'],\n      name,\n      payload,\n    });\n    this.submitEvent({kind: 'behavioral-events -> ', name, event});\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;AACA,IAAAA,eAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA+C,SAAAC,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAAC,OAAA,EAAAN,OAAA,GAAAO,MAAA,MAAAN,yBAAA,QAAAO,SAAA,OAAAH,gBAAA,CAAAC,OAAA,QAAAG,WAAA,EAAAF,MAAA,GAAAG,kBAAA,CAAAN,KAAA,EAAAO,SAAA,EAAAH,SAAA,YAAAD,MAAA,GAAAH,KAAA,CAAAQ,KAAA,OAAAD,SAAA,gBAAAE,2BAAA,CAAAP,OAAA,QAAAC,MAAA;AAAA,SAAAL,0BAAA,eAAAY,OAAA,qBAAAJ,kBAAA,oBAAAA,kBAAA,CAAAK,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAV,kBAAA,CAAAO,OAAA,8CAAAI,CAAA;AAE/C;AACA;AACA;AACA;AACA;AAJA,IAKqBC,iBAAiB,GAAAC,OAAA,CAAAjB,OAAA,0BAAAkB,eAAA;EAAA,IAAAC,UAAA,CAAAnB,OAAA,EAAAgB,iBAAA,EAAAE,eAAA;EAAA,IAAAE,MAAA,GAAA3B,YAAA,CAAAuB,iBAAA;EAAA,SAAAA,kBAAA;IAAA,IAAAK,gBAAA,CAAArB,OAAA,QAAAgB,iBAAA;IAAA,OAAAI,MAAA,CAAAd,KAAA,OAAAD,SAAA;EAAA;EAAA,IAAAiB,aAAA,CAAAtB,OAAA,EAAAgB,iBAAA;IAAAO,GAAA;IAAAC,KAAA;IACpC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAAC,sBAAAC,IAAA,EAYG;MAAA,IAXDC,OAAO,GAAAD,IAAA,CAAPC,OAAO;QACPC,KAAK,GAAAF,IAAA,CAALE,KAAK;QACLC,MAAM,GAAAH,IAAA,CAANG,MAAM;QACNC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;QACJC,OAAO,GAAAL,IAAA,CAAPK,OAAO;MAQP,IAAMC,IAAI,MAAAC,MAAA,CAAMN,OAAO,OAAAM,MAAA,CAAIL,KAAK,OAAAK,MAAA,CAAIJ,MAAM,OAAAI,MAAA,CAAIH,IAAI,CAAE;MACpD,IAAMI,KAAK,GAAG,IAAI,CAACC,uBAAuB,CAAC;QACzCC,IAAI,EAAE,CAAC,YAAY,CAAC;QACpBJ,IAAI,EAAJA,IAAI;QACJD,OAAO,EAAPA;MACF,CAAC,CAAC;MACF,IAAI,CAACM,WAAW,CAAC;QAACC,IAAI,EAAE,uBAAuB;QAAEN,IAAI,EAAJA,IAAI;QAAEE,KAAK,EAALA;MAAK,CAAC,CAAC;IAChE;EAAC;EAAA,OAAAlB,iBAAA;AAAA,EA9B4CuB,uBAAc"}