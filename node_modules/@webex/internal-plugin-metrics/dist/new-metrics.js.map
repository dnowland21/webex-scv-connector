{"version":3,"names":["_webexCore","require","_callDiagnosticMetrics","_interopRequireDefault","_behavioralMetrics","_operationalMetrics","_businessMetrics","_callDiagnosticMetricsLatencies","_callDiagnosticMetrics2","_utils","_class","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","Metrics","_WebexPlugin","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty2","_assertThisInitialized2","callDiagnosticLatencies","CallDiagnosticLatencies","parent","webex","onReady","_createClass2","key","value","_this2","once","callDiagnosticMetrics","CallDiagnosticMetrics","isReady","setDelaySubmitClientEvents","shouldDelay","delaySubmitClientEvents","overrides","delayedClientEventsOverrides","submitInternalEvent","_ref","name","payload","options","clearTimestamps","saveTimestamp","lazyBuildBehavioralMetrics","behavioralMetrics","BehavioralMetrics","lazyBuildOperationalMetrics","operationalMetrics","OperationalMetrics","lazyBuildBusinessMetrics","businessMetrics","BusinessMetrics","isReadyToSubmitBehavioralEvents","_this$behavioralMetri","_this$behavioralMetri2","isReadyToSubmitEvents","isReadyToSubmitOperationalEvents","_this$operationalMetr","_this$operationalMetr2","isReadyToSubmitBusinessEvents","_this$businessMetrics","_this$businessMetrics2","submitBehavioralEvent","_ref2","product","agent","target","verb","logger","log","_promise","resolve","submitOperationalEvent","_ref3","submitBusinessEvent","_ref4","table","metadata","submitMQE","_ref5","submitFeatureEvent","_ref6","Error","submitClientEvent","_ref7","meetingId","delaySubmitEvent","clientMetricsAliasUser","preLoginId","_this3","request","method","api","resource","headers","body","qs","alias","then","res","catch","err","error","generateCommonErrorMetadata","reject","_buildClientEventFetchRequestOptions","_asyncToGenerator2","_regenerator","mark","_callee","_ref8","wrap","_callee$","_context","prev","next","abrupt","buildClientEventFetchRequestOptions","stop","_x","setMetricTimingsAndFetch","setTimingsAndFetch","setMetricTimings","isServiceErrorExpected","serviceErrorCode","_ref9","submitDelayedClientEvents","WebexPlugin","_default","exports"],"sources":["new-metrics.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable valid-jsdoc */\n\n// @ts-ignore\nimport {WebexPlugin} from '@webex/webex-core';\n\nimport CallDiagnosticMetrics from './call-diagnostic/call-diagnostic-metrics';\nimport BehavioralMetrics from './behavioral-metrics';\nimport OperationalMetrics from './operational-metrics';\nimport BusinessMetrics from './business-metrics';\nimport {\n  RecursivePartial,\n  MetricEventProduct,\n  MetricEventAgent,\n  MetricEventVerb,\n  ClientEvent,\n  FeatureEvent,\n  EventPayload,\n  OperationalEvent,\n  MediaQualityEvent,\n  InternalEvent,\n  SubmitClientEventOptions,\n  Table,\n  DelayedClientEvent,\n} from './metrics.types';\nimport CallDiagnosticLatencies from './call-diagnostic/call-diagnostic-metrics-latencies';\nimport {setMetricTimings} from './call-diagnostic/call-diagnostic-metrics.util';\nimport {generateCommonErrorMetadata} from './utils';\n\n/**\n * Metrics plugin to centralize all types of metrics.\n * https://confluence-eng-gpk2.cisco.com/conf/pages/viewpage.action?pageId=231011379\n * @class\n */\nclass Metrics extends WebexPlugin {\n  // eslint-disable-next-line no-use-before-define\n  static instance: Metrics;\n\n  // Call Diagnostic latencies\n  callDiagnosticLatencies: CallDiagnosticLatencies;\n  // Helper classes to handle the different types of metrics\n  callDiagnosticMetrics: CallDiagnosticMetrics;\n  behavioralMetrics: BehavioralMetrics;\n  operationalMetrics: OperationalMetrics;\n  businessMetrics: BusinessMetrics;\n  isReady = false;\n\n  /**\n   * Whether or not to delay the submission of client events.\n   */\n  delaySubmitClientEvents = false;\n\n  /**\n   * Overrides for delayed client events. E.g. if you want to override the correlationId for all delayed client events, you can set this to { correlationId: 'newCorrelationId' }\n   */\n  delayedClientEventsOverrides: Partial<DelayedClientEvent['options']> = {};\n\n  /**\n   * Constructor\n   * @param args\n   * @constructor\n   * @private\n   * @returns\n   */\n  constructor(...args) {\n    super(...args);\n\n    // @ts-ignore\n    this.callDiagnosticLatencies = new CallDiagnosticLatencies({}, {parent: this.webex});\n    this.onReady();\n  }\n\n  /**\n   * On Ready\n   */\n  private onReady() {\n    // @ts-ignore\n    this.webex.once('ready', () => {\n      // @ts-ignore\n      this.callDiagnosticMetrics = new CallDiagnosticMetrics({}, {parent: this.webex});\n      this.isReady = true;\n      this.setDelaySubmitClientEvents({\n        shouldDelay: this.delaySubmitClientEvents,\n        overrides: this.delayedClientEventsOverrides,\n      });\n    });\n  }\n\n  /**\n   * Used for internal purposes only\n   * @param args\n   */\n  submitInternalEvent({\n    name,\n    payload,\n    options,\n  }: {\n    name: InternalEvent['name'];\n    payload?: RecursivePartial<InternalEvent['payload']>;\n    options?: any;\n  }) {\n    if (name === 'internal.reset.join.latencies') {\n      this.callDiagnosticLatencies.clearTimestamps();\n    } else {\n      this.callDiagnosticLatencies.saveTimestamp({key: name});\n    }\n  }\n\n  /**\n   * if webex metrics is ready, build behavioral metric backend if not already done.\n   */\n  private lazyBuildBehavioralMetrics() {\n    if (this.isReady && !this.behavioralMetrics) {\n      // @ts-ignore\n      this.behavioralMetrics = new BehavioralMetrics({}, {parent: this.webex});\n    }\n  }\n\n  /**\n   * if webex metrics is ready, build operational metric backend if not already done.\n   */\n  private lazyBuildOperationalMetrics() {\n    if (this.isReady && !this.operationalMetrics) {\n      // @ts-ignore\n      this.operationalMetrics = new OperationalMetrics({}, {parent: this.webex});\n    }\n  }\n\n  /**\n   * if webex metrics is ready, build business metric backend if not already done.\n   */\n  private lazyBuildBusinessMetrics() {\n    if (this.isReady && !this.businessMetrics) {\n      // @ts-ignore\n      this.businessMetrics = new BusinessMetrics({}, {parent: this.webex});\n    }\n  }\n\n  /**\n   * @returns true once we have the deviceId we need to submit behavioral events to Amplitude\n   */\n  isReadyToSubmitBehavioralEvents() {\n    this.lazyBuildBehavioralMetrics();\n\n    return this.behavioralMetrics?.isReadyToSubmitEvents() ?? false;\n  }\n\n  /**\n   * @returns true once we have the deviceId we need to submit operational events\n   */\n  isReadyToSubmitOperationalEvents() {\n    this.lazyBuildOperationalMetrics();\n\n    return this.operationalMetrics?.isReadyToSubmitEvents() ?? false;\n  }\n\n  /**\n   * @returns true once we have the deviceId we need to submit business events\n   */\n  isReadyToSubmitBusinessEvents() {\n    this.lazyBuildBusinessMetrics();\n\n    return this.businessMetrics?.isReadyToSubmitEvents() ?? false;\n  }\n\n  /**\n   * Behavioral event\n   * @param args\n   */\n  submitBehavioralEvent({\n    product,\n    agent,\n    target,\n    verb,\n    payload,\n  }: {\n    product: MetricEventProduct;\n    agent: MetricEventAgent;\n    target: string;\n    verb: MetricEventVerb;\n    payload?: EventPayload;\n  }) {\n    if (!this.isReady) {\n      // @ts-ignore\n      this.webex.logger.log(\n        `NewMetrics: @submitBehavioralEvent. Attempted to submit before webex.ready: ${product}.${agent}.${target}.${verb}`\n      );\n\n      return Promise.resolve();\n    }\n\n    this.lazyBuildBehavioralMetrics();\n\n    return this.behavioralMetrics.submitBehavioralEvent({product, agent, target, verb, payload});\n  }\n\n  /**\n   * Operational event\n   * @param args\n   */\n  submitOperationalEvent({name, payload}: {name: string; payload?: EventPayload}) {\n    if (!this.isReady) {\n      // @ts-ignore\n      this.webex.logger.log(\n        `NewMetrics: @submitOperationalEvent. Attempted to submit before webex.ready: ${name}`\n      );\n\n      return Promise.resolve();\n    }\n\n    this.lazyBuildOperationalMetrics();\n\n    return this.operationalMetrics.submitOperationalEvent({name, payload});\n  }\n\n  /**\n   * Business event\n   * @param args\n   */\n  submitBusinessEvent({\n    name,\n    payload,\n    table,\n    metadata,\n  }: {\n    name: string;\n    payload: EventPayload;\n    table?: Table;\n    metadata?: EventPayload;\n  }) {\n    if (!this.isReady) {\n      // @ts-ignore\n      this.webex.logger.log(\n        `NewMetrics: @submitBusinessEvent. Attempted to submit before webex.ready: ${name}`\n      );\n\n      return Promise.resolve();\n    }\n\n    this.lazyBuildBusinessMetrics();\n\n    return this.businessMetrics.submitBusinessEvent({name, payload, table, metadata});\n  }\n\n  /**\n   * Call Analyzer: Media Quality Event\n   * @param args\n   */\n  submitMQE({\n    name,\n    payload,\n    options,\n  }: {\n    name: MediaQualityEvent['name'];\n    payload: RecursivePartial<MediaQualityEvent['payload']> & {\n      intervals: MediaQualityEvent['payload']['intervals'];\n    };\n    options: any;\n  }) {\n    this.callDiagnosticLatencies.saveTimestamp({key: name});\n    this.callDiagnosticMetrics.submitMQE({name, payload, options});\n  }\n\n  /**\n   * Call Analyzer: Feature Usage Event\n   * @param args\n   */\n  submitFeatureEvent({\n    name,\n    payload,\n    options,\n  }: {\n    name: FeatureEvent['name'];\n    payload?: RecursivePartial<FeatureEvent['payload']>;\n    options: any;\n  }) {\n    throw new Error('Not implemented.');\n  }\n\n  /**\n   * Call Analyzer: Client Event\n   * @public\n   * @param args\n   */\n  public submitClientEvent({\n    name,\n    payload,\n    options,\n  }: {\n    name: ClientEvent['name'];\n    payload?: RecursivePartial<ClientEvent['payload']>;\n    options?: SubmitClientEventOptions;\n  }): Promise<any> {\n    if (!this.callDiagnosticLatencies || !this.callDiagnosticMetrics) {\n      // @ts-ignore\n      this.webex.logger.log(\n        `NewMetrics: @submitClientEvent. Attempted to submit before webex.ready. Event name: ${name}`\n      );\n\n      return Promise.resolve();\n    }\n    this.callDiagnosticLatencies.saveTimestamp({\n      key: name,\n      options: {meetingId: options?.meetingId},\n    });\n\n    return this.callDiagnosticMetrics.submitClientEvent({\n      name,\n      payload,\n      options,\n      delaySubmitEvent: this.delaySubmitClientEvents,\n    });\n  }\n\n  /**\n   * Issue request to alias a user's pre-login ID with their CI UUID\n   * @param {string} preLoginId\n   * @returns {Object} HttpResponse object\n   */\n  public clientMetricsAliasUser(preLoginId: string) {\n    // @ts-ignore\n    return this.webex\n      .request({\n        method: 'POST',\n        api: 'metrics',\n        resource: 'clientmetrics',\n        headers: {\n          'x-prelogin-userid': preLoginId,\n        },\n        body: {},\n        qs: {\n          alias: true,\n        },\n      })\n      .then((res) => {\n        // @ts-ignore\n        this.webex.logger.log(`NewMetrics: @clientMetricsAliasUser. Request successful.`);\n\n        return res;\n      })\n      .catch((err) => {\n        // @ts-ignore\n        this.logger.error(\n          `NewMetrics: @clientMetricsAliasUser. Request failed:`,\n          `err: ${generateCommonErrorMetadata(err)}`\n        );\n\n        return Promise.reject(err);\n      });\n  }\n\n  /**\n   * Returns a promise that will resolve to fetch options for submitting a metric.\n   *\n   * This is to support quickly submitting metrics when the browser/tab is closing.\n   * Calling submitClientEvent will not work because there some async steps that will\n   * not complete before the browser is closed.  Instead, we pre-gather all the\n   * information/options needed for the request(s), and then simply and quickly\n   * fire the fetch(es) when beforeUnload is triggered.\n   *\n   * We must use fetch instead of request because fetch has a keepalive option that\n   * allows the request it to outlive the page.\n   *\n   * Note: the timings values will be wrong, but setMetricTimingsAndFetch() will\n   * properly adjust them before submitting.\n   *\n   * @public\n   * @param {Object} arg\n   * @param {String} arg.name - event name\n   * @param {Object} arg.payload - event payload\n   * @param {Object} arg.options - other options\n   * @returns {Promise} promise that resolves to options to be used with fetch\n   */\n  public async buildClientEventFetchRequestOptions({\n    name,\n    payload,\n    options,\n  }: {\n    name: ClientEvent['name'];\n    payload?: RecursivePartial<ClientEvent['payload']>;\n    options?: SubmitClientEventOptions;\n  }): Promise<any> {\n    return this.callDiagnosticMetrics.buildClientEventFetchRequestOptions({\n      name,\n      payload,\n      options,\n    });\n  }\n\n  /**\n   * Submits a metric from pre-built request options via the fetch API. Updates\n   * the \"$timings\" and \"originTime\" values to Date.now() since the existing times\n   * were set when the options were built (not submitted).\n\n   * @param {any} options - the pre-built request options for submitting a metric\n   * @returns {Promise} promise that resolves to the response object\n   */\n  public setMetricTimingsAndFetch(options: any): Promise<any> {\n    // @ts-ignore\n    return this.webex.setTimingsAndFetch(setMetricTimings(options));\n  }\n\n  /**\n   * Returns true if the specified serviceErrorCode maps to an expected error.\n   * @param {number} serviceErrorCode the service error code\n   * @returns {boolean}\n   */\n  public isServiceErrorExpected(serviceErrorCode: number): boolean {\n    return this.callDiagnosticMetrics.isServiceErrorExpected(serviceErrorCode);\n  }\n\n  /**\n   * Sets the value of delaySubmitClientEvents. If set to true, client events will be delayed until submitDelayedClientEvents is called. If\n   * set to false, delayed client events will be submitted.\n   *\n   * @param {object} options - {shouldDelay: A boolean value indicating whether to delay the submission of client events, overrides: An object containing overrides for the client events}\n   */\n  public setDelaySubmitClientEvents({\n    shouldDelay,\n    overrides,\n  }: {\n    shouldDelay: boolean;\n    overrides?: Partial<DelayedClientEvent['options']>;\n  }) {\n    this.delaySubmitClientEvents = shouldDelay;\n    this.delayedClientEventsOverrides = overrides || {};\n\n    if (this.isReady && !shouldDelay) {\n      return this.callDiagnosticMetrics.submitDelayedClientEvents(overrides);\n    }\n\n    return Promise.resolve();\n  }\n}\n\nexport default Metrics;\n"],"mappings":"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"}