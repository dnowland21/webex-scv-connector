import { LocalStream } from './local-stream';
export type AppliableVideoConstraints = Pick<MediaTrackConstraints, 'aspectRatio' | 'frameRate' | 'height' | 'width'>;
/**
 * See https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/contentHint.
 */
export type VideoContentHint = 'motion' | 'detail' | 'text' | '';
/**
 * A video LocalStream.
 */
export declare class LocalVideoStream extends LocalStream {
    /**
     * Apply constraints to the stream.
     *
     * @param constraints - The constraints to apply.
     * @returns A promise which resolves when the constraints have been successfully applied.
     */
    applyConstraints(constraints?: AppliableVideoConstraints): Promise<void>;
    /**
     * Get the content hint for this stream.
     *
     * @returns The content hint setting for this stream, or undefined if none has been set.
     */
    get contentHint(): VideoContentHint;
    /**
     * Set the content hint for this stream.
     *
     * @param hint - The content hint to set.
     */
    set contentHint(hint: VideoContentHint);
    /**
     * Check the resolution and then return how many layers will be active.
     *
     * @returns The active layers count.
     */
    getNumActiveSimulcastLayers(): number;
}
//# sourceMappingURL=local-video-stream.d.ts.map