export interface IControlledPromise<T> extends Promise<T> {
    resolve: (value: T) => void;
    reject: (error: Error) => void;
}
export declare const createControlledPromise: () => IControlledPromise<unknown>;
export declare const flushPromises: () => Promise<any>;
export declare function getPromiseState(promise: Promise<unknown>): Promise<'pending' | 'fulfilled' | 'rejected'>;
//# sourceMappingURL=promiseUtils.d.ts.map