import { Direction } from '../MediaConnection/utils';
export declare type Stats = Record<string, unknown>;
export declare type StatsMap = Map<string, Stats>;
export declare type StatsMediaType = 'audio' | 'video' | 'share';
export declare type StatsAnalyzerConfig = {
    analyzerInterval: number;
};
export declare type EffectStats = {
    kind: string;
    noiseReductionMode: string;
} | {
    kind: string;
    virtualBackgroundMode: string;
} | {
    kind: string;
};
declare type MediaStatus = {
    mediaType: StatsMediaType;
    mediaContent: 'main' | 'slides';
    direction: Direction;
    state: string;
    csi: number;
    cameraCount?: number;
};
export declare type ActualExpectedMediaStatus = {
    actual: {
        audioStatus?: MediaStatus;
        videoStatus?: MediaStatus;
        shareStatus?: MediaStatus;
    };
    expected: {
        sendAudio?: boolean;
        sendVideo?: boolean;
        sendShare?: boolean;
        receiveAudio?: boolean;
        receiveVideo?: boolean;
        receiveShare?: boolean;
    };
};
export declare type NetworkQualityStatus = Record<string, any>;
export declare type NetworkQualityMonitorConfig = {
    videoPacketLossRatioThreshold: number;
    rttThreshold: number;
    jitterThreshold: number;
};
export declare type NetworkQualityFrequencyTypes = {
    UPLINK: 'uplink';
    DOWNLINK: 'downlink';
};
export declare type NetworkQualityIndicatorTypes = {
    PACKETLOSS: 'packetLoss';
    LATENCY: 'latency';
    JITTER: 'jitter';
};
export {};
//# sourceMappingURL=types.d.ts.map