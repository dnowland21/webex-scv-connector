import { MediaDirection, MqaData, StatsResults } from './types';
export declare const getAudioReceiverMqa: ({ audioReceiver, statsResults, lastMqaDataSent, baseMediaType, isMultistream, }: {
    audioReceiver: Record<string, any>;
    statsResults: StatsResults;
    lastMqaDataSent: MqaData;
    baseMediaType: string;
    isMultistream: boolean;
}) => void;
export declare const getAudioReceiverStreamMqa: ({ audioReceiverStream, statsResults, lastMqaDataSent, mediaType, }: {
    audioReceiverStream: Record<string, any>;
    statsResults: StatsResults;
    lastMqaDataSent: MqaData;
    mediaType: string;
}) => void;
export declare const getAudioSenderMqa: ({ audioSender, statsResults, lastMqaDataSent, baseMediaType, isMultistream, }: {
    audioSender: Record<string, any>;
    statsResults: StatsResults;
    lastMqaDataSent: MqaData;
    baseMediaType: string;
    isMultistream: boolean;
}) => void;
export declare const getAudioSenderStreamMqa: ({ audioSenderStream, statsResults, lastMqaDataSent, mediaType, }: {
    audioSenderStream: Record<string, any>;
    statsResults: StatsResults;
    lastMqaDataSent: MqaData;
    mediaType: string;
}) => void;
export declare const getVideoReceiverMqa: ({ videoReceiver, statsResults, lastMqaDataSent, baseMediaType, isMultistream, }: {
    videoReceiver: Record<string, any>;
    statsResults: StatsResults;
    lastMqaDataSent: MqaData;
    baseMediaType: string;
    isMultistream: boolean;
}) => void;
export declare const getVideoReceiverStreamMqa: ({ videoReceiverStream, statsResults, lastMqaDataSent, mediaType, }: {
    videoReceiverStream: Record<string, any>;
    statsResults: StatsResults;
    lastMqaDataSent: MqaData;
    mediaType: string;
}) => void;
export declare const getVideoSenderMqa: ({ videoSender, statsResults, lastMqaDataSent, baseMediaType, isMultistream, }: {
    videoSender: Record<string, any>;
    statsResults: StatsResults;
    lastMqaDataSent: MqaData;
    baseMediaType: string;
    isMultistream: boolean;
}) => void;
export declare const getVideoSenderStreamMqa: ({ videoSenderStream, statsResults, lastMqaDataSent, mediaType, }: {
    videoSenderStream: Record<string, any>;
    statsResults: StatsResults;
    lastMqaDataSent: MqaData;
    mediaType: string;
}) => void;
export declare const isStreamRequested: ({ isMultistream, statsResults, mediaType, direction, }: {
    isMultistream: boolean;
    statsResults: StatsResults;
    mediaType: string;
    direction: MediaDirection;
}) => boolean;
//# sourceMappingURL=utils.d.ts.map