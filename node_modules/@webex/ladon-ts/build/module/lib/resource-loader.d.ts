import { PreloadConfig } from './config-types';
export declare class ResourceLoader {
    /**
     * In-memory cache for resolved URLs. This is used to avoid redundant network requests for
     * the same asset URI. The cache is a Map where the key is the asset URI and the value is
     * the resolved URL.
     */
    private resolvedUriCache;
    /**
     * Resolves the full URL for a given asset. Non-file URIs are treated as paths and resolved
     * using the `toAbsoluteURI` method. If the assetUri is already resolved, or if it's found in
     * cache, it will be returned directly. If an assetUrlResolver function is provided in the
     * configuration, it will be used to resolve the URL if the assetUri is not fully qualified,
     * a blob URL, or in the cache.
     *
     * @param config - The preload configuration.
     * @param assetUri - The asset URI from the config.
     * @returns The resolved full URL.
     */
    resolveUri(config: PreloadConfig, assetUri?: string): Promise<string>;
}
export declare const resourceLoader: ResourceLoader;
